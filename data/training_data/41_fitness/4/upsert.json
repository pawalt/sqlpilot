[
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (1, 'John Doe', 30, 180.5, 6.1);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (2, 'Alice Smith', 25, 140.7, 5.6);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (3, 'Bob Brown', 35, 200.2, 6.0);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (4, 'Emma Johnson', 28, 160.8, 5.8);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (5, 'Michael Williams', 40, 190.3, 6.2);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (6, 'Sarah Davis', 22, 120.1, 5.4);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (7, 'James Wilson', 32, 170.6, 5.9);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (8, 'Grace Martinez', 27, 150.9, 5.7);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (9, 'David Rodriguez', 38, 180.0, 6.2);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (10, 'Olivia Garcia', 31, 165.4, 5.8);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (11, 'William Hernandez', 24, 140.2, 5.6);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (12, 'Sophia Lopez', 29, 155.7, 5.9);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (13, 'Daniel Gonzalez', 33, 175.3, 6.0);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (14, 'Ava Perez', 23, 130.6, 5.5);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (15, 'Michaela Torres', 26, 160.0, 5.7);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (16, 'Ethan Flores', 36, 190.8, 6.1);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (17, 'Emily Washington', 21, 115.5, 5.3);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (18, 'Oliver Adams', 37, 185.6, 6.0);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (19, 'Mia Campbell', 28, 145.2, 5.6);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (20, 'Noah Parker', 30, 170.4, 5.9);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (1, 'Alice', 25, 130.5, 5.5);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (2, 'Bob', 30, 160.8, 6.0);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (3, 'Charlie', 35, 180.2, 6.2);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (4, 'David', 40, 200.5, 6.5);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (5, 'Eve', 45, 220.7, 6.8);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (6, 'Frank', 50, 240.9, 7.0);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (7, 'Grace', 55, 260.1, 7.2);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (8, 'Henry', 60, 280.3, 7.5);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (9, 'Isabel', 65, 300.5, 7.8);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (10, 'Jack', 70, 320.7, 8.0);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (11, 'Kate', 75, 340.9, 8.2);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (12, 'Liam', 80, 360.1, 8.5);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (13, 'Mia', 85, 380.3, 8.8);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (14, 'Noah', 90, 400.5, 9.0);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (15, 'Olivia', 95, 420.7, 9.2);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (16, 'Peter', 100, 440.9, 9.5);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (17, 'Quinn', 105, 460.1, 9.8);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (18, 'Ryan', 110, 480.3, 10.0);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (19, 'Sarah', 115, 500.5, 10.2);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO user_nutrition_info (user_id, name, age, weight, height) VALUES (20, 'Tom', 120, 520.7, 10.5);",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (1, 1001, '2022-01-01 08:00:00', 500, 20.5, 15.3)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (2, 1002, '2022-01-01 12:30:00', 700, 25.8, 18.2)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (3, 1003, '2022-01-01 19:00:00', 600, 30.2, 22.1)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (4, 1004, '2022-01-02 08:30:00', 550, 22.1, 16.5)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (5, 1005, '2022-01-02 13:00:00', 750, 27.6, 20.3)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (6, 1006, '2022-01-02 18:30:00', 620, 31.5, 23.7)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (7, 1007, '2022-01-03 09:00:00', 520, 21.3, 15.7)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (8, 1008, '2022-01-03 12:45:00', 680, 26.8, 19.5)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (9, 1009, '2022-01-03 19:30:00', 610, 32.1, 24.9)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (10, 1010, '2022-01-04 08:15:00', 580, 23.8, 17.2)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (11, 1011, '2022-01-04 13:30:00', 770, 28.3, 20.8)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (12, 1012, '2022-01-04 18:45:00', 630, 33.5, 25.2)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (13, 1013, '2022-01-05 08:30:00', 540, 22.9, 16.8)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (14, 1014, '2022-01-05 12:15:00', 690, 27.4, 19.9)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (15, 1015, '2022-01-05 19:45:00', 620, 34.2, 27.1)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (16, 1016, '2022-01-06 08:20:00', 590, 24.5, 18.3)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (17, 1017, '2022-01-06 13:45:00', 780, 29.1, 21.5)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (18, 1018, '2022-01-06 18:30:00', 640, 35.5, 26.2)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (19, 1019, '2022-01-07 09:15:00', 550, 23.8, 17.6)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (20, 1020, '2022-01-07 12:30:00', 700, 27.6, 20.1)",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (1, 101, '2022-01-01 08:00:00', 500, 20.5, 15.3) ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_time = EXCLUDED.meal_time, calories = EXCLUDED.calories, protein = EXCLUDED.protein, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (2, 102, '2022-01-02 12:30:00', 700, 25.0, 18.6) ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_time = EXCLUDED.meal_time, calories = EXCLUDED.calories, protein = EXCLUDED.protein, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (3, 103, '2022-01-03 19:00:00', 600, 22.3, 16.8) ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_time = EXCLUDED.meal_time, calories = EXCLUDED.calories, protein = EXCLUDED.protein, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (4, 104, '2022-01-04 10:45:00', 800, 28.7, 21.4) ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_time = EXCLUDED.meal_time, calories = EXCLUDED.calories, protein = EXCLUDED.protein, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (5, 105, '2022-01-05 17:15:00', 550, 21.0, 15.9) ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_time = EXCLUDED.meal_time, calories = EXCLUDED.calories, protein = EXCLUDED.protein, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (6, 106, '2022-01-06 08:30:00', 700, 25.5, 19.2) ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_time = EXCLUDED.meal_time, calories = EXCLUDED.calories, protein = EXCLUDED.protein, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (7, 107, '2022-01-07 13:00:00', 600, 22.8, 17.1) ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_time = EXCLUDED.meal_time, calories = EXCLUDED.calories, protein = EXCLUDED.protein, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (8, 108, '2022-01-08 18:45:00', 900, 30.0, 22.5) ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_time = EXCLUDED.meal_time, calories = EXCLUDED.calories, protein = EXCLUDED.protein, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (9, 109, '2022-01-09 11:30:00', 750, 26.3, 19.8) ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_time = EXCLUDED.meal_time, calories = EXCLUDED.calories, protein = EXCLUDED.protein, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO nutrition_information (id, user_id, meal_time, calories, protein, fat) VALUES (10, 110, '2022-01-10 19:30:00', 600, 22.1, 16.5) ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_time = EXCLUDED.meal_time, calories = EXCLUDED.calories, protein = EXCLUDED.protein, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meal_plans (id, user_id, plan_name, plan_description) VALUES (1, 101, 'Weight Loss Plan', 'This plan focuses on reducing calorie intake and increasing physical activity.') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meal_plans (id, user_id, plan_name, plan_description) VALUES (2, 102, 'Muscle Gain Plan', 'This plan includes high-protein meals and strength training exercises.') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meal_plans (id, user_id, plan_name, plan_description) VALUES (3, 103, 'Balanced Diet Plan', 'A well-rounded plan with a mix of nutrients for overall health and wellness.') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meal_plans (id, user_id, plan_name, plan_description) VALUES (4, 104, 'Low Carb Plan', 'An eating plan that focuses on reducing carbohydrate intake for weight management.') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meal_plans (id, user_id, plan_name, plan_description) VALUES (5, 105, 'Vegetarian Plan', 'A plant-based diet plan that excludes meat and focuses on fruits, vegetables, and grains.') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meal_plans (id, user_id, plan_name, plan_description) VALUES (6, 106, 'High Fiber Plan', 'An eating plan that emphasizes high-fiber foods for digestive health and weight loss.') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meal_plans (id, user_id, plan_name, plan_description) VALUES (7, 107, 'Keto Plan', 'A low-carb, high-fat plan that promotes ketosis for fat burning and energy.') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meal_plans (id, user_id, plan_name, plan_description) VALUES (8, 108, 'Intermittent Fasting Plan', 'An eating pattern that alternates between periods of eating and fasting for weight management and health benefits.') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meal_plans (id, user_id, plan_name, plan_description) VALUES (9, 109, 'Gluten-Free Plan', 'A diet plan that eliminates gluten-containing foods for individuals with gluten sensitivity or celiac disease.') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meal_plans (id, user_id, plan_name, plan_description) VALUES (10, 110, 'Mediterranean Diet Plan', 'A heart-healthy plan inspired by the traditional Mediterranean cuisine.') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email, date_joined) VALUES ('b7d9d72c-60a4-4a0a-98a4-eca577d33e56', 'john_doe', 'john.doe@example.com', '2022-01-01'::timestamp) ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john.doe.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('6d4c2565-1d34-4dab-8d00-85c73f3b1acd', 'b7d9d72c-60a4-4a0a-98a4-eca577d33e56', 500, 20, 50, 30, '2022-01-01'::date) ON CONFLICT (nutrition_id) DO UPDATE SET calories = 600, protein = 25, carbohydrates = 60, fats = 35, log_date = '2022-01-02'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('f9e04e83-65d2-4c7b-a20a-3e1df72a4041', 'b7d9d72c-60a4-4a0a-98a4-eca577d33e56', 'Weight Loss Plan', 'A plan for losing weight', '2022-01-01'::date, '2022-01-31'::date) ON CONFLICT (plan_id) DO UPDATE SET plan_name = 'Updated Weight Loss Plan', plan_description = 'An updated plan for losing weight', end_date = '2022-02-28'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email, date_joined) VALUES ('b0e2bc1d-cd9a-46e4-b0f4-8d6c1211c191', 'jane_doe', 'jane.doe@example.com', '2022-02-01'::timestamp) ON CONFLICT (user_id) DO UPDATE SET username = 'jane_doe_updated', email = 'jane.doe.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('e1d1b5ff-4024-42d4-871b-6353e72e39fd', 'b0e2bc1d-cd9a-46e4-b0f4-8d6c1211c191', 600, 25, 60, 35, '2022-02-01'::date) ON CONFLICT (nutrition_id) DO UPDATE SET calories = 700, protein = 30, carbohydrates = 70, fats = 40, log_date = '2022-02-02'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('d89265a4-cdd1-43f2-86b8-8b5959e546e5', 'b0e2bc1d-cd9a-46e4-b0f4-8d6c1211c191', 'Muscle Gain Plan', 'A plan for gaining muscle', '2022-02-01'::date, '2022-02-28'::date) ON CONFLICT (plan_id) DO UPDATE SET plan_name = 'Updated Muscle Gain Plan', plan_description = 'An updated plan for gaining muscle', end_date = '2022-03-31'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email, date_joined) VALUES ('1ed32bfb-9aa7-4a75-8a8d-159c36b019f7', 'alice_smith', 'alice.smith@example.com', '2022-03-01'::timestamp) ON CONFLICT (user_id) DO UPDATE SET username = 'alice_smith_updated', email = 'alice.smith.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('facb1476-4ff5-4a0f-95c6-30df9089d6f9', '1ed32bfb-9aa7-4a75-8a8d-159c36b019f7', 700, 30, 70, 40, '2022-03-01'::date) ON CONFLICT (nutrition_id) DO UPDATE SET calories = 800, protein = 35, carbohydrates = 80, fats = 45, log_date = '2022-03-02'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('2cab56d6-7e5e-4eb5-a5a2-3d8ef62d51d5', '1ed32bfb-9aa7-4a75-8a8d-159c36b019f7', 'Healthy Eating Plan', 'A plan for healthy eating', '2022-03-01'::date, '2022-03-31'::date) ON CONFLICT (plan_id) DO UPDATE SET plan_name = 'Updated Healthy Eating Plan', plan_description = 'An updated plan for healthy eating', end_date = '2022-04-30'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email, date_joined) VALUES ('33c6a44d-2884-4f4b-8187-52dcd7fabf09', 'sam_brown', 'sam.brown@example.com', '2022-04-01'::timestamp) ON CONFLICT (user_id) DO UPDATE SET username = 'sam_brown_updated', email = 'sam.brown.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('0283a7bc-92e4-43a4-802d-bb73ba83f335', '33c6a44d-2884-4f4b-8187-52dcd7fabf09', 800, 35, 80, 45, '2022-04-01'::date) ON CONFLICT (nutrition_id) DO UPDATE SET calories = 900, protein = 40, carbohydrates = 90, fats = 50, log_date = '2022-04-02'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('56245852-538a-4b27-b8d2-ff3083d0ad43', '33c6a44d-2884-4f4b-8187-52dcd7fabf09', 'Vegan Diet Plan', 'A plan for a vegan diet', '2022-04-01'::date, '2022-04-30'::date) ON CONFLICT (plan_id) DO UPDATE SET plan_name = 'Updated Vegan Diet Plan', plan_description = 'An updated plan for a vegan diet', end_date = '2022-05-31'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email, date_joined) VALUES ('9b5d0b8d-6cdc-4ce0-9b7e-cfba79ee686e', 'emily_wilson', 'emily.wilson@example.com', '2022-05-01'::timestamp) ON CONFLICT (user_id) DO UPDATE SET username = 'emily_wilson_updated', email = 'emily.wilson.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('f86f9c62-d20d-4ed5-8f9f-8e23fddc23bb', '9b5d0b8d-6cdc-4ce0-9b7e-cfba79ee686e', 900, 40, 90, 50, '2022-05-01'::date) ON CONFLICT (nutrition_id) DO UPDATE SET calories = 1000, protein = 45, carbohydrates = 100, fats = 55, log_date = '2022-05-02'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('62c42174-d262-453a-9613-6c83b5e014bb', '9b5d0b8d-6cdc-4ce0-9b7e-cfba79ee686e', 'Low Carb Plan', 'A plan for low carb diet', '2022-05-01'::date, '2022-05-31'::date) ON CONFLICT (plan_id) DO UPDATE SET plan_name = 'Updated Low Carb Plan', plan_description = 'An updated plan for low carb diet', end_date = '2022-06-30'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email, date_joined) VALUES ('81fe7ea1-8498-4621-97e9-b1bf1dab0220', 'michael_jones', 'michael.jones@example.com', '2022-06-01'::timestamp) ON CONFLICT (user_id) DO UPDATE SET username = 'michael_jones_updated', email = 'michael.jones.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('07e155c9-5414-4e2a-9694-2ddb976fb54d', '81fe7ea1-8498-4621-97e9-b1bf1dab0220', 1000, 45, 100, 55, '2022-06-01'::date) ON CONFLICT (nutrition_id) DO UPDATE SET calories = 1100, protein = 50, carbohydrates = 110, fats = 60, log_date = '2022-06-02'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('f86066d5-dcf0-471f-906b-87616be7b693', '81fe7ea1-8498-4621-97e9-b1bf1dab0220', 'Balanced Diet Plan', 'A plan for a balanced diet', '2022-06-01'::date, '2022-06-30'::date) ON CONFLICT (plan_id) DO UPDATE SET plan_name = 'Updated Balanced Diet Plan', plan_description = 'An updated plan for a balanced diet', end_date = '2022-07-31'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email, date_joined) VALUES ('f44f6fb9-a94b-4488-8bdf-d1b4d7b47f87', 'sarah_adams', 'sarah.adams@example.com', '2022-07-01'::timestamp) ON CONFLICT (user_id) DO UPDATE SET username = 'sarah_adams_updated', email = 'sarah.adams.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('46c64271-1a08-429d-8783-2f336128dab1', 'f44f6fb9-a94b-4488-8bdf-d1b4d7b47f87', 1100, 50, 110, 60, '2022-07-01'::date) ON CONFLICT (nutrition_id) DO UPDATE SET calories = 1200, protein = 55, carbohydrates = 120, fats = 65, log_date = '2022-07-02'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('77c34967-1304-4f12-9723-cb7a3c1d36e4', 'f44f6fb9-a94b-4488-8bdf-d1b4d7b47f87', 'High Protein Diet', 'A plan for high protein intake', '2022-07-01'::date, '2022-07-31'::date) ON CONFLICT (plan_id) DO UPDATE SET plan_name = 'Updated High Protein Diet', plan_description = 'An updated plan for high protein intake', end_date = '2022-08-31'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email, date_joined) VALUES ('9717e268-d1f3-4c99-8399-08e1d0ccf2be', 'peter_davis', 'peter.davis@example.com', '2022-08-01'::timestamp) ON CONFLICT (user_id) DO UPDATE SET username = 'peter_davis_updated', email = 'peter.davis.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('2b816e7f-f808-4c6a-8787-1c36b1e433be', '9717e268-d1f3-4c99-8399-08e1d0ccf2be', 1200, 55, 120, 65, '2022-08-01'::date) ON CONFLICT (nutrition_id) DO UPDATE SET calories = 1300, protein = 60, carbohydrates = 130, fats = 70, log_date = '2022-08-02'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('d0a53c31-5d92-4db3-9ae0-e8021c565b75', '9717e268-d1f3-4c99-8399-08e1d0ccf2be', 'Intermittent Fasting Plan', 'A plan for intermittent fasting', '2022-08-01'::date, '2022-08-31'::date) ON CONFLICT (plan_id) DO UPDATE SET plan_name = 'Updated Intermittent Fasting Plan', plan_description = 'An updated plan for intermittent fasting', end_date = '2022-09-30'::date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Users (user_id, username, email, date_joined) VALUES ('1', 'john_doe', 'john@example.com', '2021-10-01') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, date_joined = EXCLUDED.date_joined;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('1', '1', 2000, 100, 300, 50, '2021-10-01') ON CONFLICT (nutrition_id) DO UPDATE SET user_id = EXCLUDED.user_id, calories = EXCLUDED.calories, protein = EXCLUDED.protein, carbohydrates = EXCLUDED.carbohydrates, fats = EXCLUDED.fats, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('1', '1', 'Weight Loss Plan', 'A plan to lose weight', '2021-10-01', '2021-10-31') ON CONFLICT (plan_id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Users (user_id, username, email, date_joined) VALUES ('2', 'jane_doe', 'jane@example.com', '2021-10-05') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, date_joined = EXCLUDED.date_joined;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('2', '2', 1800, 90, 250, 40, '2021-10-05') ON CONFLICT (nutrition_id) DO UPDATE SET user_id = EXCLUDED.user_id, calories = EXCLUDED.calories, protein = EXCLUDED.protein, carbohydrates = EXCLUDED.carbohydrates, fats = EXCLUDED.fats, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('2', '2', 'Muscle Gain Plan', 'A plan to gain muscle mass', '2021-10-05', '2021-11-05') ON CONFLICT (plan_id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Users (user_id, username, email, date_joined) VALUES ('3', 'alice_smith', 'alice@example.com', '2021-10-10') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, date_joined = EXCLUDED.date_joined;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('3', '3', 2200, 110, 350, 60, '2021-10-10') ON CONFLICT (nutrition_id) DO UPDATE SET user_id = EXCLUDED.user_id, calories = EXCLUDED.calories, protein = EXCLUDED.protein, carbohydrates = EXCLUDED.carbohydrates, fats = EXCLUDED.fats, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('3', '3', 'Maintenance Plan', 'A plan to maintain current weight', '2021-10-10', '2021-11-10') ON CONFLICT (plan_id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Users (user_id, username, email, date_joined) VALUES ('4', 'bob_jones', 'bob@example.com', '2021-10-15') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, date_joined = EXCLUDED.date_joined;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('4', '4', 2400, 120, 400, 70, '2021-10-15') ON CONFLICT (nutrition_id) DO UPDATE SET user_id = EXCLUDED.user_id, calories = EXCLUDED.calories, protein = EXCLUDED.protein, carbohydrates = EXCLUDED.carbohydrates, fats = EXCLUDED.fats, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('4', '4', 'Bulking Plan', 'A plan to bulk up', '2021-10-15', '2021-11-15') ON CONFLICT (plan_id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Users (user_id, username, email, date_joined) VALUES ('5', 'sarah_wilson', 'sarah@example.com', '2021-10-20') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, date_joined = EXCLUDED.date_joined;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('5', '5', 1800, 90, 250, 40, '2021-10-20') ON CONFLICT (nutrition_id) DO UPDATE SET user_id = EXCLUDED.user_id, calories = EXCLUDED.calories, protein = EXCLUDED.protein, carbohydrates = EXCLUDED.carbohydrates, fats = EXCLUDED.fats, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('5', '5', 'Healthy Eating Plan', 'A plan for a balanced diet', '2021-10-20', '2021-11-20') ON CONFLICT (plan_id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Users (user_id, username, email, date_joined) VALUES ('6', 'mike_adams', 'mike@example.com', '2021-10-25') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, date_joined = EXCLUDED.date_joined;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('6', '6', 2000, 100, 300, 50, '2021-10-25') ON CONFLICT (nutrition_id) DO UPDATE SET user_id = EXCLUDED.user_id, calories = EXCLUDED.calories, protein = EXCLUDED.protein, carbohydrates = EXCLUDED.carbohydrates, fats = EXCLUDED.fats, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('6', '6', 'Wellness Plan', 'A plan for overall well-being', '2021-10-25', '2021-11-25') ON CONFLICT (plan_id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Users (user_id, username, email, date_joined) VALUES ('7', 'emily_brown', 'emily@example.com', '2021-10-30') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, date_joined = EXCLUDED.date_joined;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbohydrates, fats, log_date) VALUES ('7', '7', 2200, 110, 350, 60, '2021-10-30') ON CONFLICT (nutrition_id) DO UPDATE SET user_id = EXCLUDED.user_id, calories = EXCLUDED.calories, protein = EXCLUDED.protein, carbohydrates = EXCLUDED.carbohydrates, fats = EXCLUDED.fats, log_date = EXCLUDED.log_date;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO MealPlans (plan_id, user_id, plan_name, plan_description, start_date, end_date) VALUES ('7', '7', 'Fitness Plan', 'A plan for physical fitness', '2021-10-30', '2021-11-30') ON CONFLICT (plan_id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, plan_description = EXCLUDED.plan_description, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO User (user_id, username, email) VALUES (1, 'john_doe', 'john.doe@example.com') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO User (user_id, username, email) VALUES (2, 'jane_smith', 'jane.smith@example.com') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbs, fat) VALUES (1, 1, 500, 20, 30, 10) ON CONFLICT (nutrition_id) DO UPDATE SET user_id = EXCLUDED.user_id, calories = EXCLUDED.calories, protein = EXCLUDED.protein, carbs = EXCLUDED.carbs, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbs, fat) VALUES (2, 2, 600, 25, 35, 15) ON CONFLICT (nutrition_id) DO UPDATE SET user_id = EXCLUDED.user_id, calories = EXCLUDED.calories, protein = EXCLUDED.protein, carbs = EXCLUDED.carbs, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Meal (meal_id, user_id, meal_name, meal_time) VALUES (1, 1, 'Breakfast', '2022-10-01 08:00:00') ON CONFLICT (meal_id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_name = EXCLUDED.meal_name, meal_time = EXCLUDED.meal_time;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Meal (meal_id, user_id, meal_name, meal_time) VALUES (2, 2, 'Lunch', '2022-10-01 12:00:00') ON CONFLICT (meal_id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_name = EXCLUDED.meal_name, meal_time = EXCLUDED.meal_time;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Plan (plan_id, user_id, plan_name, start_date, end_date) VALUES (1, 1, 'Fitness Plan', '2022-10-01', '2022-10-30') ON CONFLICT (plan_id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Plan (plan_id, user_id, plan_name, start_date, end_date) VALUES (2, 2, 'Diet Plan', '2022-10-01', '2022-10-30') ON CONFLICT (plan_id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO User (user_id, username, email) VALUES (3, 'alice_smith', 'alice.smith@example.com') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO User (user_id, username, email) VALUES (4, 'bob_johnson', 'bob.johnson@example.com') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbs, fat) VALUES (3, 3, 700, 30, 40, 20) ON CONFLICT (nutrition_id) DO UPDATE SET user_id = EXCLUDED.user_id, calories = EXCLUDED.calories, protein = EXCLUDED.protein, carbs = EXCLUDED.carbs, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbs, fat) VALUES (4, 4, 800, 35, 45, 25) ON CONFLICT (nutrition_id) DO UPDATE SET user_id = EXCLUDED.user_id, calories = EXCLUDED.calories, protein = EXCLUDED.protein, carbs = EXCLUDED.carbs, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Meal (meal_id, user_id, meal_name, meal_time) VALUES (3, 3, 'Dinner', '2022-10-01 18:00:00') ON CONFLICT (meal_id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_name = EXCLUDED.meal_name, meal_time = EXCLUDED.meal_time;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Meal (meal_id, user_id, meal_name, meal_time) VALUES (4, 4, 'Snack', '2022-10-01 15:00:00') ON CONFLICT (meal_id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_name = EXCLUDED.meal_name, meal_time = EXCLUDED.meal_time;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Plan (plan_id, user_id, plan_name, start_date, end_date) VALUES (3, 3, 'Weight Loss Plan', '2022-10-01', '2022-10-30') ON CONFLICT (plan_id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Plan (plan_id, user_id, plan_name, start_date, end_date) VALUES (4, 4, 'Muscle Gain Plan', '2022-10-01', '2022-10-30') ON CONFLICT (plan_id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO User (user_id, username, email) VALUES (5, 'emma_davis', 'emma.davis@example.com') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO User (user_id, username, email) VALUES (6, 'adam_wilson', 'adam.wilson@example.com') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbs, fat) VALUES (5, 5, 900, 40, 50, 30) ON CONFLICT (nutrition_id) DO UPDATE SET user_id = EXCLUDED.user_id, calories = EXCLUDED.calories, protein = EXCLUDED.protein, carbs = EXCLUDED.carbs, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbs, fat) VALUES (6, 6, 1000, 45, 55, 35) ON CONFLICT (nutrition_id) DO UPDATE SET user_id = EXCLUDED.user_id, calories = EXCLUDED.calories, protein = EXCLUDED.protein, carbs = EXCLUDED.carbs, fat = EXCLUDED.fat;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Meal (meal_id, user_id, meal_name, meal_time) VALUES (5, 5, 'Snack', '2022-10-01 10:00:00') ON CONFLICT (meal_id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_name = EXCLUDED.meal_name, meal_time = EXCLUDED.meal_time;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Meal (meal_id, user_id, meal_name, meal_time) VALUES (6, 6, 'Dinner', '2022-10-01 20:00:00') ON CONFLICT (meal_id) DO UPDATE SET user_id = EXCLUDED.user_id, meal_name = EXCLUDED.meal_name, meal_time = EXCLUDED.meal_time;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Plan (plan_id, user_id, plan_name, start_date, end_date) VALUES (5, 5, 'Healthy Living Plan', '2022-10-01', '2022-10-30') ON CONFLICT (plan_id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Plan (plan_id, user_id, plan_name, start_date, end_date) VALUES (6, 6, 'Fitness Journey Plan', '2022-10-01', '2022-10-30') ON CONFLICT (plan_id) DO UPDATE SET user_id = EXCLUDED.user_id, plan_name = EXCLUDED.plan_name, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO User (user_id, username, email) VALUES (1, 'Alice', 'alice@example.com') ON CONFLICT (user_id) DO UPDATE SET username = 'Alice', email = 'alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Nutrition (nutrition_id, user_id, calories, protein, carbs, fat) VALUES (1, 1, 500, 20, 50, 30) ON CONFLICT (nutrition_id) DO UPDATE SET user_id = 1, calories = 500, protein = 20, carbs = 50, fat = 30;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Meal (meal_id, user_id, meal_name, meal_time) VALUES (1, 1, 'Breakfast', '2023-01-01 08:00:00') ON CONFLICT (meal_id) DO UPDATE SET user_id = 1, meal_name = 'Breakfast', meal_time = '2023-01-01 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Plan (plan_id, user_id, plan_name, start_date, end_date) VALUES (1, 1, 'Weight Loss Plan', '2023-01-01', '2023-01-31') ON CONFLICT (plan_id) DO UPDATE SET user_id = 1, plan_name = 'Weight Loss Plan', start_date = '2023-01-01', end_date = '2023-01-31';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO nutrition_info (user_id, calorie_count, protein_count, carb_count, fat_count) VALUES (1, 2000, 100, 200, 50) ON DUPLICATE KEY UPDATE calorie_count = 2000, protein_count = 100, carb_count = 200, fat_count = 50;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meal_plans (plan_id, user_id, plan_name, plan_description) VALUES (1, 1, 'Weight Loss Plan', 'Plan focused on calorie deficit') ON DUPLICATE KEY UPDATE user_id = 1, plan_name = 'Weight Loss Plan', plan_description = 'Plan focused on calorie deficit';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meals (meal_id, plan_id, meal_name, calories, proteins, carbs, fats) VALUES (1, 1, 'Breakfast', 300, 10, 30, 15) ON DUPLICATE KEY UPDATE plan_id = 1, meal_name = 'Breakfast', calories = 300, proteins = 10, carbs = 30, fats = 15;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email) VALUES (1, 'alice', 'alice@example.com') ON DUPLICATE KEY UPDATE username = 'alice', email = 'alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO user_logs (log_id, user_id, log_date, log_description) VALUES (1, 1, '2022-01-01', 'Logged breakfast calories') ON DUPLICATE KEY UPDATE user_id = 1, log_date = '2022-01-01', log_description = 'Logged breakfast calories';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO nutrition_info (user_id, calorie_count, protein_count, carb_count, fat_count) VALUES (2, 2500, 120, 250, 60) ON DUPLICATE KEY UPDATE calorie_count = 2500, protein_count = 120, carb_count = 250, fat_count = 60;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meal_plans (plan_id, user_id, plan_name, plan_description) VALUES (2, 2, 'Muscle Gain Plan', 'Plan focused on high protein intake') ON DUPLICATE KEY UPDATE user_id = 2, plan_name = 'Muscle Gain Plan', plan_description = 'Plan focused on high protein intake';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meals (meal_id, plan_id, meal_name, calories, proteins, carbs, fats) VALUES (2, 2, 'Lunch', 500, 20, 40, 25) ON DUPLICATE KEY UPDATE plan_id = 2, meal_name = 'Lunch', calories = 500, proteins = 20, carbs = 40, fats = 25;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email) VALUES (2, 'bob', 'bob@example.com') ON DUPLICATE KEY UPDATE username = 'bob', email = 'bob@example.com';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO user_logs (log_id, user_id, log_date, log_description) VALUES (2, 2, '2022-01-02', 'Logged lunch calories') ON DUPLICATE KEY UPDATE user_id = 2, log_date = '2022-01-02', log_description = 'Logged lunch calories';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO nutrition_info (user_id, calorie_count, protein_count, carb_count, fat_count) VALUES (3, 1800, 90, 180, 45) ON DUPLICATE KEY UPDATE calorie_count = 1800, protein_count = 90, carb_count = 180, fat_count = 45;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meal_plans (plan_id, user_id, plan_name, plan_description) VALUES (3, 3, 'Maintenance Plan', 'Plan focused on balanced diet') ON DUPLICATE KEY UPDATE user_id = 3, plan_name = 'Maintenance Plan', plan_description = 'Plan focused on balanced diet';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meals (meal_id, plan_id, meal_name, calories, proteins, carbs, fats) VALUES (3, 3, 'Dinner', 400, 15, 35, 20) ON DUPLICATE KEY UPDATE plan_id = 3, meal_name = 'Dinner', calories = 400, proteins = 15, carbs = 35, fats = 20;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email) VALUES (3, 'charlie', 'charlie@example.com') ON DUPLICATE KEY UPDATE username = 'charlie', email = 'charlie@example.com';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO user_logs (log_id, user_id, log_date, log_description) VALUES (3, 3, '2022-01-03', 'Logged dinner calories') ON DUPLICATE KEY UPDATE user_id = 3, log_date = '2022-01-03', log_description = 'Logged dinner calories';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO nutrition_info (user_id, calorie_count, protein_count, carb_count, fat_count) VALUES (4, 2200, 110, 220, 55) ON DUPLICATE KEY UPDATE calorie_count = 2200, protein_count = 110, carb_count = 220, fat_count = 55;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meal_plans (plan_id, user_id, plan_name, plan_description) VALUES (4, 4, 'Athletic Plan', 'Plan focused on performance nutrition') ON DUPLICATE KEY UPDATE user_id = 4, plan_name = 'Athletic Plan', plan_description = 'Plan focused on performance nutrition';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO meals (meal_id, plan_id, meal_name, calories, proteins, carbs, fats) VALUES (4, 4, 'Snack', 150, 5, 20, 10) ON DUPLICATE KEY UPDATE plan_id = 4, meal_name = 'Snack', calories = 150, proteins = 5, carbs = 20, fats = 10;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email) VALUES (4, 'david', 'david@example.com') ON DUPLICATE KEY UPDATE username = 'david', email = 'david@example.com';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO user_logs (log_id, user_id, log_date, log_description) VALUES (4, 4, '2022-01-04', 'Logged snack calories') ON DUPLICATE KEY UPDATE user_id = 4, log_date = '2022-01-04', log_description = 'Logged snack calories';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_info (user_id, calorie_count, protein_count, carb_count, fat_count) VALUES (1, 2000, 100, 200, 50) ON CONFLICT (user_id) DO UPDATE SET calorie_count = excluded.calorie_count, protein_count = excluded.protein_count, carb_count = excluded.carb_count, fat_count = excluded.fat_count;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO meal_plans (plan_id, user_id, plan_name, plan_description) VALUES (1, 1, 'Weight Loss Plan', 'A balanced meal plan for weight loss') ON CONFLICT (plan_id) DO UPDATE SET user_id = excluded.user_id, plan_name = excluded.plan_name, plan_description = excluded.plan_description;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO meals (meal_id, plan_id, meal_name, calories, proteins, carbs, fats) VALUES (1, 1, 'Breakfast', 300, 15, 30, 10) ON CONFLICT (meal_id) DO UPDATE SET plan_id = excluded.plan_id, meal_name = excluded.meal_name, calories = excluded.calories, proteins = excluded.proteins, carbs = excluded.carbs, fats = excluded.fats;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email) VALUES (1, 'john_doe', 'john_doe@example.com') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO user_logs (log_id, user_id, log_date, log_description) VALUES (1, 1, '2022-01-01', 'Logged breakfast intake') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, log_date = excluded.log_date, log_description = excluded.log_description;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_info (user_id, calorie_count, protein_count, carb_count, fat_count) VALUES (2, 2500, 120, 250, 60) ON CONFLICT (user_id) DO UPDATE SET calorie_count = excluded.calorie_count, protein_count = excluded.protein_count, carb_count = excluded.carb_count, fat_count = excluded.fat_count;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO meal_plans (plan_id, user_id, plan_name, plan_description) VALUES (2, 2, 'Muscle Gain Plan', 'A protein-rich meal plan for muscle gain') ON CONFLICT (plan_id) DO UPDATE SET user_id = excluded.user_id, plan_name = excluded.plan_name, plan_description = excluded.plan_description;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO meals (meal_id, plan_id, meal_name, calories, proteins, carbs, fats) VALUES (2, 2, 'Lunch', 500, 25, 40, 15) ON CONFLICT (meal_id) DO UPDATE SET plan_id = excluded.plan_id, meal_name = excluded.meal_name, calories = excluded.calories, proteins = excluded.proteins, carbs = excluded.carbs, fats = excluded.fats;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email) VALUES (2, 'jane_smith', 'jane_smith@example.com') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO user_logs (log_id, user_id, log_date, log_description) VALUES (2, 2, '2022-01-02', 'Logged lunch intake') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, log_date = excluded.log_date, log_description = excluded.log_description;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO nutrition_info (user_id, calorie_count, protein_count, carb_count, fat_count) VALUES (3, 1800, 90, 180, 40) ON CONFLICT (user_id) DO UPDATE SET calorie_count = excluded.calorie_count, protein_count = excluded.protein_count, carb_count = excluded.carb_count, fat_count = excluded.fat_count;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO meal_plans (plan_id, user_id, plan_name, plan_description) VALUES (3, 3, 'Maintenance Plan', 'A balanced meal plan for weight maintenance') ON CONFLICT (plan_id) DO UPDATE SET user_id = excluded.user_id, plan_name = excluded.plan_name, plan_description = excluded.plan_description;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO meals (meal_id, plan_id, meal_name, calories, proteins, carbs, fats) VALUES (3, 3, 'Dinner', 400, 20, 35, 12) ON CONFLICT (meal_id) DO UPDATE SET plan_id = excluded.plan_id, meal_name = excluded.meal_name, calories = excluded.calories, proteins = excluded.proteins, carbs = excluded.carbs, fats = excluded.fats;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email) VALUES (3, 'alice_roberts', 'alice_roberts@example.com') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO user_logs (log_id, user_id, log_date, log_description) VALUES (3, 3, '2022-01-03', 'Logged dinner intake') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, log_date = excluded.log_date, log_description = excluded.log_description;"
]