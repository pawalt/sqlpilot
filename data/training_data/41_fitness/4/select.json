[
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM user_nutrition_info WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT name, age FROM user_nutrition_info WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM user_nutrition_info WHERE weight >= 70;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, name FROM user_nutrition_info WHERE age < 20;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM user_nutrition_info WHERE height <= 160;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, weight FROM user_nutrition_info WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT name, height FROM user_nutrition_info WHERE weight < 60;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM user_nutrition_info WHERE age = 25;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, name, weight FROM user_nutrition_info WHERE age BETWEEN 30 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM user_nutrition_info WHERE weight > 80 AND age >= 45;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, name, age FROM user_nutrition_info WHERE weight <= 75 OR age < 20;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM user_nutrition_info WHERE height = 170;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, name, height FROM user_nutrition_info WHERE age = 35;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM user_nutrition_info WHERE weight != 70;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, weight FROM user_nutrition_info WHERE age > 50;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT name, height FROM user_nutrition_info WHERE weight BETWEEN 60 AND 70;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM user_nutrition_info WHERE age < 25 OR weight > 75;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, age FROM user_nutrition_info WHERE height < 150;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT name, age, weight FROM user_nutrition_info WHERE age >= 30 AND weight < 65;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM user_nutrition_info WHERE age < 40;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM user_nutrition_info WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT name, age, weight FROM user_nutrition_info WHERE weight >= 60;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, name FROM user_nutrition_info WHERE age BETWEEN 20 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM user_nutrition_info;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(weight) AS avg_weight FROM user_nutrition_info;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT MAX(age) AS max_age FROM user_nutrition_info;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, height FROM user_nutrition_info WHERE user_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, name, age FROM user_nutrition_info WHERE weight < 70 AND height > 160;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT name, weight/(height*height) AS BMI FROM user_nutrition_info;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM user_nutrition_info ORDER BY age ASC;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT DISTINCT age FROM user_nutrition_info;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, name FROM user_nutrition_info WHERE name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT MAX(weight) AS max_weight FROM user_nutrition_info;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM user_nutrition_info WHERE age NOT IN (25, 30, 35);",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, age FROM user_nutrition_info WHERE height BETWEEN 150 AND 170 AND weight > 50;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT name, ROUND(weight, 1) AS rounded_weight FROM user_nutrition_info;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS avg_age FROM user_nutrition_info WHERE name <> 'Anonymous';",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT name, height FROM user_nutrition_info WHERE age < 40 OR weight < 60;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, name FROM user_nutrition_info WHERE user_id = 1 OR user_id = 5 OR user_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE user_nutrition_info (\n    user_id INT PRIMARY KEY,\n    name STRING,\n    age INT,\n    weight DECIMAL,\n    height DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, age FROM user_nutrition_info WHERE weight >= 70 OR age < 30;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM nutrition_information;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT id, meal_time, calories FROM nutrition_information WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM meal_plans;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT plan_name, plan_description FROM meal_plans WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT id, calories, protein, fat FROM nutrition_information WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM meal_plans WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT id, meal_time, calories, protein FROM nutrition_information WHERE calories > 500;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT plan_name, plan_description FROM meal_plans WHERE plan_name LIKE '%Healthy%';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT id, calories FROM nutrition_information WHERE calories < 300 AND protein > 20;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM meal_plans WHERE user_id = 4 AND plan_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT id, meal_time, fat FROM nutrition_information WHERE fat < 5;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT plan_name, plan_description FROM meal_plans WHERE plan_name = 'Vegetarian Plan';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT id, calories, protein FROM nutrition_information WHERE protein < 10;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM meal_plans WHERE user_id = 1 AND plan_description LIKE '%Weekend%';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT id, meal_time, fat FROM nutrition_information WHERE fat < 10 AND calories > 400;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT plan_name, plan_description FROM meal_plans WHERE plan_name = 'Low-Carb Plan';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM nutrition_information WHERE meal_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT id, calories, fat FROM nutrition_information WHERE user_id = 2 AND calories < 400;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM meal_plans WHERE user_id = 3 AND plan_description LIKE '%Holiday%';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT id, meal_time, protein FROM nutrition_information WHERE protein > 15;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM nutrition_information WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT id, meal_time FROM nutrition_information WHERE calories > 500;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM meal_plans WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT id, plan_name FROM meal_plans WHERE plan_name LIKE '%Healthy%';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM nutrition_information JOIN meal_plans ON nutrition_information.user_id = meal_plans.user_id;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT nutrition_information.id, nutrition_information.meal_time, meal_plans.plan_name FROM nutrition_information JOIN meal_plans ON nutrition_information.user_id = meal_plans.user_id;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(calories) as total_calories FROM nutrition_information GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT plan_name, COUNT(user_id) as total_users FROM meal_plans GROUP BY plan_name;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT plan_name, AVG(calories) as avg_calories FROM nutrition_information JOIN meal_plans ON nutrition_information.user_id = meal_plans.user_id GROUP BY plan_name HAVING avg_calories > 400;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(DISTINCT plan_name) as total_meal_plans FROM nutrition_information JOIN meal_plans ON nutrition_information.user_id = meal_plans.user_id GROUP BY user_id HAVING total_meal_plans > 2;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(protein) as max_protein FROM nutrition_information GROUP BY user_id ORDER BY max_protein DESC;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(fat) as min_fat FROM nutrition_information GROUP BY user_id ORDER BY min_fat ASC;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(protein) as avg_protein, AVG(fat) as avg_fat FROM nutrition_information GROUP BY user_id HAVING avg_protein > 20 AND avg_fat < 10;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) as total_meals FROM nutrition_information WHERE protein >= 10 AND fat < 5 GROUP BY user_id HAVING total_meals > 2;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM nutrition_information WHERE calories < 300 AND meal_time < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM nutrition_information WHERE protein > 15 AND fat < 5 AND calories BETWEEN 400 AND 600;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(protein) as max_protein FROM nutrition_information WHERE fat < 5 GROUP BY user_id HAVING max_protein > 20;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, plan_description FROM meal_plans WHERE LENGTH(plan_description) > 100;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT plan_name, COUNT(user_id) as total_users FROM meal_plans WHERE plan_name IN ('Breakfast', 'Lunch', 'Dinner') GROUP BY plan_name;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_information (\n  id INT PRIMARY KEY,\n  user_id INT,\n  meal_time TIMESTAMP,\n  calories INT,\n  protein FLOAT,\n  fat FLOAT\n);\n\nCREATE TABLE meal_plans (\n  id INT PRIMARY KEY,\n  user_id INT,\n  plan_name VARCHAR,\n  plan_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(protein) as avg_protein, AVG(fat) as avg_fat FROM nutrition_information WHERE meal_time >= '2022-01-01' GROUP BY user_id HAVING avg_protein > 15 AND avg_fat < 10;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, email FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, date_joined FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Nutrition;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT calories, protein, carbohydrates FROM Nutrition;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT nutrition_id, user_id, fats FROM Nutrition;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM MealPlans;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT plan_id, user_id, plan_name FROM MealPlans;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT plan_id, plan_name, start_date, end_date FROM MealPlans;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, email, date_joined FROM Users WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT plan_name, start_date, end_date FROM MealPlans WHERE user_id = '123e4567-e89b-12d3-a456-426655440000';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Nutrition WHERE user_id = '123e4567-e89b-12d3-a456-426655440000';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Users ORDER BY date_joined DESC;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE date_joined > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT plan_name, start_date, end_date FROM MealPlans WHERE start_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Nutrition WHERE calories > 500 AND protein < 30;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM MealPlans GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(calories), MIN(calories), AVG(calories) FROM Nutrition;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(protein) AS total_protein FROM Nutrition GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS meal_count FROM MealPlans GROUP BY user_id HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM Users WHERE username = 'JohnDoe';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Nutrition WHERE calories > 200 AND protein < 50;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT plan_id, plan_name, start_date, end_date FROM MealPlans WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT Users.username, MealPlans.plan_name FROM Users INNER JOIN MealPlans ON Users.user_id = MealPlans.user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(calories), SUM(protein) FROM Nutrition GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(calories) AS max_calories FROM Nutrition GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Users WHERE date_joined BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(calories) AS total_calories FROM Nutrition WHERE log_date = '2022-02-15' GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(protein) AS avg_protein FROM Nutrition GROUP BY user_id HAVING AVG(protein) > 30;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS num_meal_plans FROM MealPlans GROUP BY user_id HAVING COUNT(*) >= 3;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE user_id IN (SELECT user_id FROM Nutrition WHERE calories < 100);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT username FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(protein) AS total_protein FROM Nutrition WHERE log_date BETWEEN '2022-02-01' AND '2022-02-28' GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM MealPlans WHERE plan_name LIKE '%Fitness%';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(calories) AS avg_calories FROM Nutrition WHERE log_date BETWEEN '2022-03-01' AND '2022-03-31' GROUP BY user_id HAVING AVG(calories) > 300;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(protein) AS min_protein FROM Nutrition GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE email LIKE '%gmail.com%';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT plan_id, plan_name, COUNT(user_id) AS num_users FROM MealPlans GROUP BY plan_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(calories) AS min_calories FROM Nutrition GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    date_joined TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Nutrition (\n    nutrition_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    calories INT NOT NULL,\n    protein INT NOT NULL,\n    carbohydrates INT NOT NULL,\n    fats INT NOT NULL,\n    log_date DATE NOT NULL\n);\n\n\nCREATE TABLE MealPlans (\n    plan_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES Users(user_id),\n    plan_name VARCHAR(50) NOT NULL,\n    plan_description VARCHAR(200),\n    start_date DATE NOT NULL,\n    end_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, date_joined, COUNT(plan_id) AS num_plans FROM Users LEFT JOIN MealPlans ON Users.user_id = MealPlans.user_id GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM User;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM User WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT meal_id, meal_name, meal_time FROM Meal WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Nutrition WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT plan_name, start_date, end_date FROM Plan WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT plan_name, start_date, end_date FROM Plan WHERE plan_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT username, email FROM User WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT calories, protein, carbs, fat FROM Nutrition WHERE nutrition_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, calories, protein, carbs, fat FROM Nutrition WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, calories, protein, carbs, fat FROM Nutrition WHERE user_id = 3 AND calories > 2000;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM User WHERE username LIKE '%doe%';",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Meal WHERE meal_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Plan WHERE start_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT meal_name, meal_time FROM Meal WHERE user_id IN (1, 2);",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT plan_name, start_date, end_date FROM Plan WHERE user_id IN (3, 4);",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Nutrition WHERE protein < 50;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT username, email FROM User WHERE user_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Meal WHERE meal_name LIKE '%breakfast%';",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Plan WHERE end_date < '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM User WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT username FROM User WHERE email = 'example@example.com';",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM User WHERE username LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Nutrition WHERE user_id = 1 AND calories > 2000;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT meal_name, meal_time FROM Meal WHERE user_id = 2 ORDER BY meal_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT plan_name, start_date, end_date FROM Plan WHERE user_id = 3 AND start_date >= '2022-01-01' AND end_date <= '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM User;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(calories), MAX(protein) FROM Nutrition;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(calories) AS total_calories FROM Nutrition GROUP BY user_id HAVING total_calories > 2500;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(DISTINCT meal_id) AS total_meals FROM Meal GROUP BY user_id HAVING total_meals < 5;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT meal_name, SUM(calories) AS total_calories FROM Meal WHERE meal_time BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY meal_name;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, plan_name, COUNT(*) AS total_days FROM Plan WHERE end_date >= '2022-07-01' GROUP BY user_id, plan_name;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, meal_name, COUNT(*) AS total_meals FROM Meal WHERE meal_time BETWEEN '2022-04-01' AND '2022-06-30' GROUP BY user_id, meal_name;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_plans FROM Plan GROUP BY user_id HAVING total_plans > 1;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT SUM(calories) AS total_calories, AVG(protein) AS avg_protein FROM Nutrition;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(calories) AS max_calories, MIN(fat) AS min_fat FROM Nutrition GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT meal_name, COUNT(*) AS total_occurrences FROM Meal GROUP BY meal_name HAVING total_occurrences > 1;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT plan_name, DATEDIFF(end_date, start_date) AS plan_duration FROM Plan WHERE user_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(protein) AS total_protein FROM Nutrition WHERE protein > 20 GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE User (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Nutrition (\n\tnutrition_id INT PRIMARY KEY,\n\tuser_id INT,\n\tcalories INT,\n\tprotein INT,\n\tcarbs INT,\n\tfat INT\n);\n\nCREATE TABLE Meal (\n\tmeal_id INT PRIMARY KEY,\n\tuser_id INT,\n\tmeal_name VARCHAR(255) NOT NULL,\n\tmeal_time TIMESTAMP\n);\n\nCREATE TABLE Plan (\n\tplan_id INT PRIMARY KEY,\n\tuser_id INT,\n\tplan_name VARCHAR(255) NOT NULL,\n\tstart_date DATE,\n\tend_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_meals FROM Meal WHERE DATE(meal_time) = CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM nutrition_info;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, calorie_count, protein_count, carb_count, fat_count FROM nutrition_info;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM meal_plans;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT plan_id, user_id, plan_name, plan_description FROM meal_plans;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM meals;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT meal_id, plan_id, meal_name, calories, proteins, carbs, fats FROM meals;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_logs;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT log_id, user_id, log_date, log_description FROM user_logs;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, calorie_count, protein_count, carb_count, fat_count FROM nutrition_info WHERE calorie_count > 500;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT plan_id, user_id, plan_name, plan_description FROM meal_plans WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT meal_id, plan_id, meal_name, calories, proteins, carbs, fats FROM meals WHERE calories < 300;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE username LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_logs WHERE log_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(calories) AS total_calories FROM meals GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(calories) AS avg_calories FROM meals GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(meal_id) AS total_meals FROM meals GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(calories) AS max_calories FROM meals GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM nutrition_info;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT plan_id, COUNT(meal_id) AS total_meals FROM meals GROUP BY plan_id HAVING COUNT(meal_id) > 2;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM nutrition_info WHERE calorie_count > 200 AND protein_count < 50;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT plan_name, plan_description FROM meal_plans WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT meal_name, calories FROM meals WHERE plan_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT username, email, log_description FROM users JOIN user_logs ON users.user_id = user_logs.user_id;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM meal_plans JOIN users ON meal_plans.user_id = users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT meal_name, calories, proteins FROM meals WHERE carbs = 20 AND fats < 10;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, plan_name, plan_description, meal_name FROM meal_plans JOIN meals ON meal_plans.plan_id = meals.plan_id;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_logs WHERE log_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT username FROM users;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT plan_name, COUNT(meal_id) AS meal_count FROM meal_plans JOIN meals ON meal_plans.plan_id = meals.plan_id GROUP BY plan_name;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(calories) AS total_calories FROM meals GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT username, COUNT(DISTINCT meal_id) AS unique_meals FROM users JOIN meal_plans ON users.user_id = meal_plans.user_id JOIN meals ON meal_plans.plan_id = meals.plan_id GROUP BY username;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT plan_name, AVG(calories) AS avg_calories FROM meal_plans JOIN meals ON meal_plans.plan_id = meals.plan_id GROUP BY plan_name HAVING AVG(calories) > 300;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM users UNION SELECT user_id, email FROM user_logs;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE user_id IN (SELECT distinct user_id FROM meal_plans);",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM meals WHERE proteins = (SELECT MAX(proteins) FROM meals);",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT meal_name, calories, proteins, carbs, fats, plan_name FROM meals JOIN meal_plans ON meals.plan_id = meal_plans.plan_id;",
  "### TABLEDATA\n\nCREATE TABLE nutrition_info (\n    user_id INT PRIMARY KEY,\n    calorie_count INT,\n    protein_count INT,\n    carb_count INT,\n    fat_count INT\n);\n\n\nCREATE TABLE meal_plans (\n    plan_id INT PRIMARY KEY,\n    user_id INT,\n    plan_name TEXT,\n    plan_description TEXT\n);\n\n\nCREATE TABLE meals (\n    meal_id INT PRIMARY KEY,\n    plan_id INT,\n    meal_name TEXT,\n    calories INT,\n    proteins INT,\n    carbs INT,\n    fats INT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    email TEXT\n);\n\n\nCREATE TABLE user_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_date DATE,\n    log_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(log_id) AS log_count, MAX(log_date) AS latest_log_date FROM user_logs GROUP BY user_id HAVING COUNT(log_id) > 1;"
]