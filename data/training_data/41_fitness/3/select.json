[
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name FROM exercise_plans WHERE duration_in_weeks > 10;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_plans WHERE goal_name = 'Build Muscle';",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_description FROM exercise_plans WHERE duration_in_weeks <= 8;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, duration_in_weeks FROM exercise_plans WHERE goal_name LIKE '%Weight Loss%';",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name FROM exercise_plans WHERE duration_in_weeks BETWEEN 4 AND 8;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, JSON_LENGTH(exercises) AS num_exercises FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name FROM exercise_plans WHERE JSON_CONTAINS(exercises, '\"exercise\": \"Push-ups\"');",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT DISTINCT goal_name FROM exercise_plans ORDER BY goal_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT AVG(duration_in_weeks) FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, plan_description FROM exercise_plans WHERE JSON_CONTAINS(exercises, '\"exercise\": \"Squats\"') AND duration_in_weeks > 6;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, duration_in_weeks FROM exercise_plans WHERE JSON_EXTRACT(exercises, '$.exercise[0]') = 'Pull-ups';",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT CONCAT(goal_name, ' Plan') AS plan_name FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name FROM exercise_plans WHERE JSON_LENGTH(exercises) > 3;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name FROM exercise_plans ORDER BY duration_in_weeks DESC;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, plan_description FROM exercise_plans WHERE JSON_CONTAINS(exercises, '\"exercise\": \"Running\"');",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT goal_name, COUNT(plan_id) AS num_plans FROM exercise_plans GROUP BY goal_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT AVG(duration_in_weeks) AS avg_duration, COUNT(*) AS num_plans FROM exercise_plans GROUP BY goal_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT goal_name, MAX(duration_in_weeks) AS max_duration FROM exercise_plans GROUP BY goal_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_plans WHERE duration_in_weeks > 10;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name FROM exercise_plans WHERE duration_in_weeks = 12;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_plans WHERE plan_description LIKE '%strength%';",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, duration_in_weeks FROM exercise_plans WHERE duration_in_weeks < 6;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_plans WHERE JSON_LENGTH(exercises) > 5;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, JSON_EXTRACT(exercises, '$.exercise[0]') AS first_exercise FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_plans WHERE JSON_CONTAINS(exercises, 'chest', '$.muscle_groups');",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, JSON_UNQUOTE(JSON_EXTRACT(exercises, '$.exercise[2].name')) AS third_exercise_name FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_plans WHERE JSON_CONTAINS(exercises, NULL, '$.rest_day');",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, JSON_ARRAY_LENGTH(exercises->'exercise') AS total_exercises FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, plan_description FROM exercise_plans WHERE EXTRACT(MONTH FROM CURRENT_DATE()) > 6;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, DATEDIFF(CURRENT_DATE(), DATE_SUB(CURRENT_DATE(), INTERVAL duration_in_weeks WEEK)) AS days_remaining FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, JSON_EXTRACT(exercises, '$.exercise[*].category') AS exercise_categories FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, ROUND(AVG(duration_in_weeks), 2) AS avg_duration FROM exercise_plans GROUP BY goal_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, COUNT(*) AS total_plans FROM exercise_plans GROUP BY goal_name HAVING total_plans > 1;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, plan_description, JSON_UNQUOTE(JSON_SEARCH(exercises, 'one', 'all', NULL, '$.exercise[*].sets')) AS sets_found FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, COALESCE(duration_in_weeks, 0) AS duration_weeks FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_name, JSON_OBJECT_KEYS(exercises) AS exercise_keys FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE exercise_plans (\n    plan_id INT PRIMARY KEY,\n    goal_name VARCHAR(50),\n    plan_description TEXT,\n    duration_in_weeks INT,\n    exercises JSON\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_plans ORDER BY duration_in_weeks DESC;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT * FROM ExercisePlans;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT plan_name, description FROM ExercisePlans WHERE difficulty_level = 'Beginner';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT * FROM FitnessGoals;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT goal_name, target FROM FitnessGoals WHERE duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT plan_id, description FROM ExercisePlans WHERE difficulty_level = 'Intermediate';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT goal_name, duration FROM FitnessGoals WHERE target = 'Weight Loss';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT plan_name, difficulty_level FROM ExercisePlans WHERE plan_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT * FROM FitnessGoals WHERE duration >= 60;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT * FROM ExercisePlans WHERE difficulty_level = 'Advanced';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ExercisePlans;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT MAX(duration) FROM FitnessGoals;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT MIN(duration) FROM FitnessGoals;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT AVG(duration) FROM FitnessGoals;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT plan_id, description FROM ExercisePlans WHERE plan_name LIKE '%Cardio%';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT goal_name, duration FROM FitnessGoals WHERE goal_name LIKE '%Muscle%';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT plan_name, difficulty_level FROM ExercisePlans WHERE description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT difficulty_level) FROM ExercisePlans;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT AVG(duration) FROM FitnessGoals WHERE duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT plan_name, description, difficulty_level FROM ExercisePlans WHERE difficulty_level = 'Intermediate' AND description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT goal_name, target, duration FROM FitnessGoals WHERE target = 'Weight Loss' AND duration >= 60;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT * FROM ExercisePlans WHERE difficulty_level='Intermediate';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT plan_name, description FROM ExercisePlans WHERE difficulty_level='Advanced';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT goal_name, target FROM FitnessGoals WHERE duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT plan_id, plan_name, description, difficulty_level FROM ExercisePlans WHERE difficulty_level='Beginner';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT goal_name, duration FROM FitnessGoals WHERE target='Weight loss';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT * FROM ExercisePlans WHERE plan_name LIKE '%Full Body%';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT difficulty_level FROM ExercisePlans;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT plan_id, plan_name, description FROM ExercisePlans WHERE difficulty_level IN ('Beginner', 'Intermediate');",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ExercisePlans;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT AVG(duration) FROM FitnessGoals;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT goal_name, duration FROM FitnessGoals ORDER BY duration DESC;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT plan_name, description, difficulty_level FROM ExercisePlans WHERE plan_id IN (SELECT plan_id FROM FitnessGoals WHERE duration < 30);",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT plan_id, plan_name, description FROM ExercisePlans WHERE LENGTH(description) > 50;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT difficulty_level) FROM ExercisePlans;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT plan_name, description FROM ExercisePlans WHERE difficulty_level='Advanced' OR difficulty_level='Intermediate';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT AVG(duration) FROM FitnessGoals WHERE target='Strength training';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT plan_name, description FROM ExercisePlans WHERE plan_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT MIN(duration), MAX(duration) FROM FitnessGoals;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT plan_name, description FROM ExercisePlans WHERE difficulty_level='Advanced' LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE ExercisePlans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  description TEXT,\n  difficulty_level VARCHAR(20)\n);\n\n\nCREATE TABLE FitnessGoals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  target VARCHAR(20),\n  duration INT\n);\n\n### STATEMENT\n\nSELECT goal_name, duration FROM FitnessGoals WHERE duration BETWEEN 20 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM fitness_goals;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT goal_id, goal_name FROM fitness_goals;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT goal_id, description FROM fitness_goals;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT plan_id, plan_name FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT plan_id, goal_id, duration FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM user_workouts;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT workout_id, user_id, workout_date FROM user_workouts;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT workout_id, plan_id, workout_date FROM user_workouts;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, plan_id, workout_date FROM user_workouts;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT g.goal_name, p.plan_name, u.workout_date FROM fitness_goals g JOIN exercise_plans p ON g.goal_id = p.goal_id JOIN user_workouts u ON u.plan_id = p.plan_id;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT g.goal_name, p.plan_name, u.workout_date FROM fitness_goals g, exercise_plans p, user_workouts u WHERE g.goal_id = p.goal_id AND u.plan_id = p.plan_id;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM fitness_goals WHERE goal_id = 'abc-123';",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT plan_name FROM exercise_plans WHERE duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT workout_id FROM user_workouts WHERE workout_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT goal_name, description FROM fitness_goals WHERE goal_name LIKE '%weight%';",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT g.goal_name, p.plan_name FROM fitness_goals g LEFT JOIN exercise_plans p ON g.goal_id = p.goal_id;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT plan_id, COUNT(workout_id) AS workout_count FROM user_workouts GROUP BY plan_id;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT plan_id FROM user_workouts;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT workout_date FROM user_workouts ORDER BY workout_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM fitness_goals WHERE goal_name='Weight Loss';",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT goal_id, description FROM fitness_goals WHERE description LIKE '%strength%';",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT plan_name, duration FROM exercise_plans WHERE duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM user_workouts WHERE workout_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT u.user_id, e.plan_name FROM user_workouts u JOIN exercise_plans e ON u.plan_id = e.plan_id;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT f.goal_name, e.duration FROM fitness_goals f JOIN exercise_plans e ON f.goal_id = e.goal_id;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT u.user_id, p.plan_name, w.workout_date FROM user_workouts w JOIN exercise_plans p ON w.plan_id = p.plan_id JOIN fitness_goals f ON p.goal_id = f.goal_id WHERE f.goal_name='Endurance';",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM fitness_goals WHERE goal_id IN (SELECT DISTINCT goal_id FROM exercise_plans WHERE duration > 60);",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT plan_id) FROM user_workouts;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(duration) FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(duration) FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(duration) FROM exercise_plans;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM user_workouts WHERE workout_date='2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT goal_name, COUNT(plan_id) AS plan_count FROM fitness_goals JOIN exercise_plans ON fitness_goals.goal_id = exercise_plans.goal_id GROUP BY goal_name;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT goal_name, AVG(duration) AS avg_duration FROM fitness_goals JOIN exercise_plans ON fitness_goals.goal_id = exercise_plans.goal_id GROUP BY goal_name;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT goal_id, COUNT(*) AS total_workouts FROM exercise_plans JOIN user_workouts ON exercise_plans.plan_id = user_workouts.plan_id GROUP BY goal_id;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM fitness_goals WHERE goal_id IN (SELECT goal_id FROM user_workouts GROUP BY goal_id HAVING COUNT(*) > 1);",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT goal_id FROM exercise_plans WHERE goal_id NOT IN (SELECT goal_id FROM user_workouts);",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT f.goal_name, e.plan_name, u.workout_date FROM fitness_goals f LEFT JOIN exercise_plans e ON f.goal_id = e.goal_id LEFT JOIN user_workouts u ON e.plan_id = u.plan_id;",
  "### TABLEDATA\n\nCREATE TABLE fitness_goals (\n  goal_id UUID PRIMARY KEY,\n  goal_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE exercise_plans (\n  plan_id UUID PRIMARY KEY,\n  plan_name VARCHAR(50) NOT NULL,\n  goal_id UUID REFERENCES fitness_goals(goal_id),\n  duration INT\n);\n\n\nCREATE TABLE user_workouts (\n  workout_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  plan_id UUID REFERENCES exercise_plans(plan_id),\n  workout_date DATE\n);\n\n### STATEMENT\n\nSELECT f.goal_name, COUNT(DISTINCT u.user_id) AS unique_users FROM fitness_goals f LEFT JOIN exercise_plans e ON f.goal_id = e.goal_id LEFT JOIN user_workouts u ON e.plan_id = u.plan_id GROUP BY f.goal_name HAVING COUNT(DISTINCT u.user_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT * FROM FitnessGoals;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT goal_name, difficulty_level FROM FitnessGoals;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT goal_name, description FROM FitnessGoals WHERE difficulty_level='Easy';",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT exercise_name, muscle_group FROM Exercises;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT exercise_name, equipment_required FROM Exercises WHERE muscle_group='Abs';",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT * FROM ExercisePlans;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT plan_name, cost FROM ExercisePlans WHERE duration_in_weeks=12;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT plan_name, goal_id FROM ExercisePlans WHERE cost<100;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT progress_id, user_id FROM UserProgress;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT user_id, progress_status FROM UserProgress WHERE progress_id=5;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT goal_name, description, difficulty_level FROM FitnessGoals WHERE difficulty_level='Intermediate';",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT exercise_name, muscle_group, equipment_required FROM Exercises WHERE muscle_group='Legs';",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT plan_name, cost, goal_id FROM ExercisePlans WHERE duration_in_weeks>8;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT plan_name, goal_id FROM ExercisePlans WHERE cost BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT user_id, plan_id, progress_status FROM UserProgress WHERE progress_status='Completed';",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT goal_name, description, difficulty_level FROM FitnessGoals WHERE difficulty_level='Hard';",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT exercise_name, muscle_group, equipment_required FROM Exercises WHERE muscle_group='Arms';",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT plan_name, cost, goal_id FROM ExercisePlans WHERE duration_in_weeks<=6;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT plan_name, goal_id FROM ExercisePlans WHERE cost>150;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT user_id, progress_status FROM UserProgress WHERE plan_id=3;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT * FROM FitnessGoals WHERE difficulty_level='beginner';",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT goal_name, description FROM FitnessGoals WHERE difficulty_level='intermediate';",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT * FROM FitnessGoals JOIN ExercisePlans ON FitnessGoals.goal_id = ExercisePlans.goal_id WHERE ExercisePlans.cost < 50;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT plan_name, duration_in_weeks, cost FROM ExercisePlans WHERE goal_id IN (SELECT goal_id FROM FitnessGoals WHERE difficulty_level='advanced');",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT user_id, plan_name, progress_status FROM UserProgress JOIN ExercisePlans ON UserProgress.plan_id = ExercisePlans.plan_id WHERE progress_status='completed';",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT exercise_name, muscle_group FROM Exercises WHERE equipment_required='none';",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT exercise_name, muscle_group FROM Exercises WHERE equipment_required='dumbbells';",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT * FROM FitnessGoals LEFT JOIN ExercisePlans ON FitnessGoals.goal_id = ExercisePlans.goal_id;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT * FROM FitnessGoals RIGHT JOIN ExercisePlans ON FitnessGoals.goal_id = ExercisePlans.goal_id;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT * FROM FitnessGoals CROSS JOIN ExercisePlans;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT COUNT(*) FROM FitnessGoals;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT AVG(duration_in_weeks) FROM ExercisePlans;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT MAX(cost) FROM ExercisePlans;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT goal_name, COUNT(*) FROM FitnessGoals JOIN ExercisePlans ON FitnessGoals.goal_id = ExercisePlans.goal_id GROUP BY goal_name;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT user_id, AVG(duration_in_weeks) FROM UserProgress JOIN ExercisePlans ON UserProgress.plan_id = ExercisePlans.plan_id GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT DISTINCT muscle_group FROM Exercises;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT AVG(cost) FROM ExercisePlans WHERE goal_id IN (SELECT goal_id FROM FitnessGoals WHERE difficulty_level='intermediate');",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT goal_name, COUNT(*) FROM FitnessGoals JOIN ExercisePlans ON FitnessGoals.goal_id = ExercisePlans.goal_id WHERE ExercisePlans.duration_in_weeks > 12 GROUP BY goal_name;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT user_id, progress_status, COUNT(*) FROM UserProgress GROUP BY user_id, progress_status;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals (goal_id INT PRIMARY KEY, goal_name VARCHAR(255) NOT NULL, description TEXT, difficulty_level VARCHAR(50) NOT NULL);\n\nCREATE TABLE Exercises (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(50), equipment_required VARCHAR(100));\n\nCREATE TABLE ExercisePlans (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, duration_in_weeks INT, cost DECIMAL(10, 2), goal_id INT REFERENCES FitnessGoals(goal_id));\n\nCREATE TABLE UserProgress (progress_id SERIAL PRIMARY KEY, user_id INT REFERENCES Users(user_id), plan_id INT REFERENCES ExercisePlans(plan_id), progress_status VARCHAR(50));\n\n### STATEMENT\n\nSELECT * FROM FitnessGoals WHERE description LIKE '%weight%';",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT * FROM FitnessGoals;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT goal_name, description FROM FitnessGoals;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT * FROM ExercisePlans;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT plan_name, start_date, end_date FROM ExercisePlans;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT * FROM Exercises;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT exercise_name, description, equipment_needed FROM Exercises;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT * FROM Workouts;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT workout_name, repetitions, duration_minutes FROM Workouts;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT * FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT username, email, date_of_birth FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT FitnessGoals.goal_name, ExercisePlans.plan_name, Exercises.exercise_name, Workouts.workout_name, Users.username FROM FitnessGoals, ExercisePlans, Exercises, Workouts, Users;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT FitnessGoals.goal_name, Exercises.calories_burned_per_hour FROM FitnessGoals INNER JOIN Exercises ON FitnessGoals.goal_id = Exercises.exercise_id;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT Users.username, ExercisePlans.plan_name FROM Users INNER JOIN ExercisePlans ON Users.user_id = ExercisePlans.plan_id;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT Workouts.workout_name, Exercises.description FROM Workouts INNER JOIN Exercises ON Workouts.exercise_id = Exercises.exercise_id;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT ExercisePlans.plan_name, Users.email FROM ExercisePlans INNER JOIN Users ON ExercisePlans.plan_id = Users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT Users.username, FitnessGoals.goal_name, ExercisePlans.plan_name, Exercises.exercise_name, Workouts.workout_name FROM FitnessGoals, ExercisePlans, Exercises, Workouts, Users WHERE FitnessGoals.goal_id = ExercisePlans.goal_id AND ExercisePlans.plan_id = Workouts.plan_id AND Workouts.exercise_id = Exercises.exercise_id AND Users.user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT * FROM FitnessGoals WHERE target_duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT goal_name, description FROM FitnessGoals WHERE target_duration < 60;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT * FROM Exercises WHERE calories_burned_per_hour > 200;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT exercise_name, description, equipment_needed FROM Exercises WHERE calories_burned_per_hour < 100;",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT * FROM FitnessGoals WHERE target_duration > 30 ORDER BY goal_id DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT plan_name, start_date, end_date FROM ExercisePlans WHERE start_date BETWEEN '2023-01-01' AND '2023-12-31'",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT exercise_name, description, calories_burned_per_hour FROM Exercises WHERE equipment_needed = 'Dumbbells'",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT workout_name, repetitions, duration_minutes FROM Workouts WHERE repetitions >= 10 AND duration_minutes < 30",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE date_of_birth <= '1995-01-01'",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT DISTINCT goal_name FROM FitnessGoals",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT plan_name, goal_name FROM ExercisePlans INNER JOIN FitnessGoals ON ExercisePlans.goal_id = FitnessGoals.goal_id",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT exercise_name, description, plan_name FROM Exercises INNER JOIN Workouts ON Exercises.exercise_id = Workouts.exercise_id INNER JOIN ExercisePlans ON Workouts.plan_id = ExercisePlans.plan_id",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT workout_name, repetitions, duration_minutes, username FROM Workouts INNER JOIN Users ON Workouts.user_id = Users.user_id",
  "### TABLEDATA\n\nCREATE TABLE FitnessGoals ( goal_id INT PRIMARY KEY, goal_name VARCHAR(100) NOT NULL, description TEXT, target_duration INT )\nCREATE TABLE ExercisePlans ( plan_id INT PRIMARY KEY, plan_name VARCHAR(100) NOT NULL, goal_id INT REFERENCES FitnessGoals(goal_id), start_date DATE, end_date DATE )\nCREATE TABLE Exercises ( exercise_id INT PRIMARY KEY, exercise_name VARCHAR(100) NOT NULL, description TEXT, equipment_needed VARCHAR(100), calories_burned_per_hour INT )\nCREATE TABLE Workouts ( workout_id INT PRIMARY KEY, workout_name VARCHAR(100) NOT NULL, plan_id INT REFERENCES ExercisePlans(plan_id), exercise_id INT REFERENCES Exercises(exercise_id), repetitions INT, duration_minutes INT )\nCREATE TABLE Users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, date_of_birth DATE )\n\n### STATEMENT\n\nSELECT goal_name, start_date, end_date FROM FitnessGoals LEFT JOIN ExercisePlans ON FitnessGoals.goal_id = ExercisePlans.goal_id"
]