[
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine;",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, exercise_name, sets FROM WorkoutRoutine;",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT exercise_name, reps FROM WorkoutRoutine WHERE sets >= 3;",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, exercise_name, weight FROM WorkoutRoutine WHERE date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine WHERE weight > 50;",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, reps FROM WorkoutRoutine WHERE sets = 5;",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT exercise_name, weight FROM WorkoutRoutine WHERE reps < 10;",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, sets FROM WorkoutRoutine WHERE exercise_name LIKE '%squat%';",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT exercise_name, weight FROM WorkoutRoutine WHERE sets = 3 AND reps = 10;",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine WHERE date < '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, reps FROM WorkoutRoutine WHERE sets IN (3, 5);",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT exercise_name, reps FROM WorkoutRoutine WHERE weight < 30;",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine WHERE date > '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, exercise_name FROM WorkoutRoutine WHERE date = CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT exercise_name, weight FROM WorkoutRoutine WHERE date = DATE_ADD(CURDATE(), INTERVAL -7 DAY);",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine WHERE date = DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, sets, reps FROM WorkoutRoutine WHERE exercise_name = 'push-up';",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine WHERE date = DATE_FORMAT('2022-01-01', '%Y-%m-%d');",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine WHERE sets >= 3 AND reps >= 10 AND weight > 50",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, exercise_name, date FROM WorkoutRoutine ORDER BY date DESC",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT exercise_name, AVG(weight) FROM WorkoutRoutine GROUP BY exercise_name",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine WHERE date BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT exercise_name, SUM(sets) AS total_sets FROM WorkoutRoutine GROUP BY exercise_name HAVING total_sets > 20",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_workouts FROM WorkoutRoutine",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(weight) AS max_weight FROM WorkoutRoutine WHERE exercise_name = 'Squats'",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT exercise_name, AVG(weight) AS avg_weight FROM WorkoutRoutine WHERE reps = 12 GROUP BY exercise_name",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine WHERE weight > (SELECT AVG(weight) FROM WorkoutRoutine)",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT exercise_name FROM WorkoutRoutine",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine WHERE exercise_name LIKE '%Chest%' AND weight >= 60 ORDER BY reps DESC",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT id, exercise_name, sets, reps FROM WorkoutRoutine WHERE date = (SELECT MAX(date) FROM WorkoutRoutine)",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT exercise_name, MIN(sets) AS min_sets FROM WorkoutRoutine GROUP BY exercise_name HAVING min_sets < 3",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT exercise_name, SUM(weight) AS total_weight FROM WorkoutRoutine WHERE date >= '2022-01-01' GROUP BY exercise_name",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT YEAR(date) AS workout_year FROM WorkoutRoutine ORDER BY workout_year ASC",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT exercise_name, MAX(reps) AS max_reps FROM WorkoutRoutine GROUP BY exercise_name ORDER BY max_reps DESC",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine WHERE id IN (1, 3, 5, 7)",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine WHERE weight < (SELECT MAX(weight) FROM WorkoutRoutine)",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(weight) AS avg_weight, COUNT(*) AS total_workouts FROM WorkoutRoutine GROUP BY exercise_name",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM WorkoutRoutine WHERE exercise_name = 'Deadlifts' AND date = '2022-03-15'",
  "### TABLEDATA\n\nCREATE TABLE WorkoutRoutine (\n  id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  sets INT,\n  reps INT,\n  weight FLOAT,\n  date DATE\n)\n\n### STATEMENT\n\nSELECT exercise_name, MIN(reps) AS min_reps, MAX(reps) AS max_reps FROM WorkoutRoutine GROUP BY exercise_name",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_routines;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date FROM workout_routines;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_id, workout_duration_minutes FROM workout_routines;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_progress;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_id, progress_date FROM workout_progress;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT progress_id, calories_burned FROM workout_progress;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date, calories_burned FROM workout_routines, workout_progress WHERE routine_id = progress_id;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_routines WHERE routine_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_progress WHERE progress_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date FROM workout_routines WHERE workout_duration_minutes > 30;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_id, progress_date FROM workout_progress WHERE calories_burned > 500;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date, workout_intensity FROM workout_routines, workout_progress WHERE routine_id = progress_id AND calories_burned > 500;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_routines ORDER BY workout_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_progress ORDER BY calories_burned ASC;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date, calories_burned FROM workout_routines, workout_progress WHERE routine_id = progress_id ORDER BY calories_burned DESC;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(workout_duration_minutes) AS average_duration FROM workout_routines;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(calories_burned) AS max_calories_burned FROM workout_progress;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(routine_id) AS total_routines FROM workout_routines;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT routine_name FROM workout_routines;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date FROM workout_routines WHERE workout_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_routines WHERE workout_duration_minutes > 30;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date FROM workout_routines WHERE routine_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, COUNT(*) AS num_workouts FROM workout_routines GROUP BY routine_name;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_progress WHERE calories_burned > 500;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, calories_burned FROM workout_routines JOIN workout_progress ON workout_routines.routine_id = workout_progress.routine_id;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date FROM workout_routines WHERE workout_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(workout_duration_minutes) AS max_duration FROM workout_routines;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, SUM(calories_burned) AS total_calories FROM workout_routines JOIN workout_progress ON workout_routines.routine_id = workout_progress.routine_id GROUP BY routine_name;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, AVG(calories_burned) AS avg_calories FROM workout_routines JOIN workout_progress ON workout_routines.routine_id = workout_progress.routine_id GROUP BY routine_name;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date, workout_intensity FROM workout_routines JOIN workout_progress ON workout_routines.routine_id = workout_progress.routine_id WHERE workout_intensity = 'High';",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date FROM workout_routines WHERE routine_name LIKE '%Upper Body%';",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date FROM workout_routines WHERE workout_duration_minutes > 45 AND workout_date = '2022-07-15';",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date, calories_burned FROM workout_routines JOIN workout_progress ON workout_routines.routine_id = workout_progress.routine_id WHERE calories_burned < 300;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date, SUM(calories_burned) AS total_calories FROM workout_routines JOIN workout_progress ON workout_routines.routine_id = workout_progress.routine_id GROUP BY routine_name HAVING total_calories > 1000;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date, workout_duration_minutes FROM workout_routines WHERE workout_duration_minutes BETWEEN 20 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date, COUNT(*) AS num_workouts FROM workout_routines GROUP BY routine_name HAVING num_workouts > 5;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT routine_name FROM workout_routines;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date, workout_intensity FROM workout_routines JOIN workout_progress ON workout_routines.routine_id = workout_progress.routine_id WHERE workout_intensity = 'Moderate';",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, AVG(calories_burned) AS avg_calories FROM workout_routines JOIN workout_progress ON workout_routines.routine_id = workout_progress.routine_id GROUP BY routine_name HAVING avg_calories > 250;",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, workout_date, calories_burned FROM workout_routines JOIN workout_progress ON workout_routines.routine_id = workout_progress.routine_id WHERE workout_intensity = 'Low';",
  "### TABLEDATA\n\nCREATE TABLE workout_routines (\n    routine_id INT,\n    routine_name VARCHAR(255),\n    workout_date DATE,\n    workout_duration_minutes INT\n);\n\n\nCREATE TABLE workout_progress (\n    progress_id INT,\n    routine_id INT,\n    progress_date DATE,\n    calories_burned INT,\n    workout_intensity VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT routine_name, MAX(calories_burned) AS max_calories FROM workout_routines JOIN workout_progress ON workout_routines.routine_id = workout_progress.routine_id GROUP BY routine_name HAVING max_calories > 400;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM daily_workouts;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_id, workout_date, workout_type FROM daily_workouts WHERE workout_date = '2022-08-10';",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_id, workout_type, workout_duration FROM daily_workouts WHERE workout_duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_progress;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT progress_id, workout_id, progress_date, progress_weight FROM workout_progress WHERE workout_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_progress WHERE progress_weight > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT progress_id, progress_date, progress_notes FROM workout_progress WHERE workout_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_stats;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_id, total_sets, total_reps, avg_weight_lifted FROM workout_stats WHERE total_sets >= 4;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_id, avg_weight_lifted FROM workout_stats WHERE avg_weight_lifted < 100.00;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_id, total_sets, total_reps FROM workout_stats WHERE workout_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM daily_workouts WHERE workout_type = 'Cardio';",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_id, workout_duration FROM daily_workouts WHERE workout_type = 'Strength';",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM daily_workouts WHERE workout_date BETWEEN '2022-08-01' AND '2022-08-15';",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_progress WHERE progress_date = '2022-08-10';",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_id, progress_id, progress_weight FROM workout_progress WHERE progress_weight >= 60.00;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_stats WHERE total_reps < 10;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_id, total_sets, avg_weight_lifted FROM workout_stats WHERE total_sets = 5;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM daily_workouts ORDER BY workout_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_progress ORDER BY progress_weight ASC;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM daily_workouts WHERE workout_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_date, workout_type FROM daily_workouts WHERE workout_duration > 60;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_date, workout_type, avg_weight_lifted FROM daily_workouts JOIN workout_stats ON daily_workouts.workout_id = workout_stats.workout_id;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT progress_date, progress_weight, progress_notes FROM workout_progress WHERE workout_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_date, total_sets, total_reps, avg_weight_lifted FROM workout_stats JOIN daily_workouts ON workout_stats.workout_id = daily_workouts.workout_id;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_date, workout_duration, progress_weight FROM daily_workouts JOIN workout_progress ON daily_workouts.workout_id = workout_progress.workout_id;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM workout_stats WHERE total_sets >= 4 AND total_reps >= 10;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_date, workout_duration, progress_notes FROM daily_workouts JOIN workout_progress ON daily_workouts.workout_id = workout_progress.workout_id WHERE workout_duration < 30;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT progress_date, progress_weight, progress_notes FROM workout_progress WHERE progress_weight > 50;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_workouts FROM daily_workouts;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_date, SUM(progress_weight) AS total_weight_lifted FROM daily_workouts JOIN workout_progress ON daily_workouts.workout_id = workout_progress.workout_id GROUP BY workout_date;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_date, workout_type, progress_weight FROM daily_workouts JOIN workout_progress ON daily_workouts.workout_id = workout_progress.workout_id WHERE workout_type = 'Cardio';",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_date, workout_type, avg(avg_weight_lifted) AS average_weight FROM daily_workouts JOIN workout_stats ON daily_workouts.workout_id = workout_stats.workout_id GROUP BY workout_type;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_date, workout_type, total_sets, total_reps, avg_weight_lifted FROM daily_workouts JOIN workout_stats ON daily_workouts.workout_id = workout_stats.workout_id WHERE total_sets > 3 AND total_reps > 8;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT AVG(progress_weight) AS average_weight_lifted FROM workout_progress;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT COUNT(progress_id) AS total_progress_entries FROM workout_progress WHERE workout_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_date, progress_date, progress_weight FROM daily_workouts JOIN workout_progress ON daily_workouts.workout_id = workout_progress.workout_id WHERE progress_weight <= 40;",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_date, workout_type, total_sets, total_reps, avg_weight_lifted FROM daily_workouts JOIN workout_stats ON daily_workouts.workout_id = workout_stats.workout_id WHERE workout_type = 'Strength Training';",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_date, workout_type, total_sets, total_reps, avg_weight_lifted FROM daily_workouts JOIN workout_stats ON daily_workouts.workout_id = workout_stats.workout_id WHERE workout_date BETWEEN '2022-01-01' AND '2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE daily_workouts (\n    workout_id INT PRIMARY KEY,\n    workout_date DATE,\n    workout_type VARCHAR(50),\n    workout_duration INT\n);\n\nCREATE TABLE workout_progress (\n    progress_id INT PRIMARY KEY,\n    workout_id INT,\n    progress_date DATE,\n    progress_weight DECIMAL(10, 2),\n    progress_notes TEXT\n);\n\nCREATE TABLE workout_stats (\n    stats_id INT PRIMARY KEY,\n    workout_id INT,\n    total_sets INT,\n    total_reps INT,\n    avg_weight_lifted DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT workout_date, workout_type, progress_weight FROM daily_workouts JOIN workout_progress ON daily_workouts.workout_id = workout_progress.workout_id WHERE workout_type = 'Running' AND workout_duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM workout;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT workout_name, workout_duration FROM workout;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM exercise;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT exercise_name, exercise_category FROM exercise;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM workout_log;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT log_id, sets, reps FROM workout_log;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM progress;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT exercise_id, weight FROM progress;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM workout WHERE workout_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM exercise WHERE exercise_category = 'Cardio';",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM workout_log WHERE workout_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM progress WHERE weight > 50;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT workout_name, workout_duration FROM workout WHERE workout_duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT exercise_name, exercise_category FROM exercise WHERE exercise_category = 'Strength';",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT log_id, sets FROM workout_log WHERE sets >= 3;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT exercise_name, weight, notes FROM progress WHERE weight < 100;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT workout_id, exercise_id FROM workout_log WHERE log_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM workout WHERE workout_name LIKE '%Full Body%';",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM exercise WHERE exercise_name LIKE '%Squats%';",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM progress WHERE exercise_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM progress WHERE notes LIKE '%improvement%';",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM workout;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT workout_id, workout_name, workout_duration FROM workout WHERE workout_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT exercise_name, exercise_category FROM exercise WHERE exercise_description LIKE '%strength%';",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT w.workout_name, e.exercise_name FROM workout w JOIN workout_log wl ON w.workout_id = wl.workout_id JOIN exercise e ON wl.exercise_id = e.exercise_id;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT w.workout_name, e.exercise_name, wl.sets, wl.reps FROM workout w JOIN workout_log wl ON w.workout_id = wl.workout_id JOIN exercise e ON wl.exercise_id = e.exercise_id WHERE wl.sets >= 3 AND wl.reps >= 10;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT e.exercise_name, p.weight, p.notes FROM exercise e JOIN progress p ON e.exercise_id = p.exercise_id WHERE p.weight > 50;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT w.workout_id, COUNT(wl.log_id) AS num_exercises FROM workout w LEFT JOIN workout_log wl ON w.workout_id = wl.workout_id GROUP BY w.workout_id HAVING num_exercises >= 3;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT e.exercise_name, AVG(p.weight) AS avg_weight FROM exercise e JOIN progress p ON e.exercise_id = p.exercise_id GROUP BY e.exercise_name;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT workout_name, SUM(workout_duration) AS total_duration FROM workout GROUP BY workout_name;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT e.exercise_category, COUNT(w.workout_id) AS num_workouts FROM exercise e JOIN workout_log wl ON e.exercise_id = wl.exercise_id JOIN workout w ON wl.workout_id = w.workout_id GROUP BY e.exercise_category;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT w.workout_id, w.workout_name, e.exercise_name, p.weight FROM workout w JOIN workout_log wl ON w.workout_id = wl.workout_id JOIN exercise e ON wl.exercise_id = e.exercise_id JOIN progress p ON p.exercise_id = e.exercise_id WHERE p.weight > 60 ORDER BY p.weight DESC;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT e.exercise_name, p.notes FROM exercise e JOIN progress p ON e.exercise_id = p.exercise_id WHERE p.notes IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT w.workout_id, w.workout_name, COUNT(wl.log_id) AS num_exercises FROM workout w JOIN workout_log wl ON w.workout_id = wl.workout_id GROUP BY w.workout_id HAVING num_exercises >= 2;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT e.exercise_name, AVG(p.weight) AS avg_weight FROM exercise e JOIN progress p ON e.exercise_id = p.exercise_id GROUP BY e.exercise_name HAVING avg_weight >= 50;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT workout_name, SUM(workout_duration) AS total_duration FROM workout WHERE workout_date >= '2023-01-01' GROUP BY workout_name;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT e.exercise_category, COUNT(w.workout_id) AS num_workouts FROM exercise e JOIN workout_log wl ON e.exercise_id = wl.exercise_id JOIN workout w ON wl.workout_id = w.workout_id WHERE w.workout_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY e.exercise_category;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT w.workout_id, w.workout_name, e.exercise_name, p.weight FROM workout w JOIN workout_log wl ON w.workout_id = wl.workout_id JOIN exercise e ON wl.exercise_id = e.exercise_id JOIN progress p ON p.exercise_id = e.exercise_id WHERE workout_date >= '2022-06-01' ORDER BY p.weight DESC;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT e.exercise_name, p.notes FROM exercise e JOIN progress p ON e.exercise_id = p.exercise_id WHERE p.notes LIKE '%improve%' OR p.notes LIKE '%progress%';",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT w.workout_id, w.workout_name, COUNT(wl.log_id) AS num_exercises FROM workout w JOIN workout_log wl ON w.workout_id = wl.workout_id GROUP BY w.workout_id HAVING num_exercises >= 1;",
  "### TABLEDATA\n\nCREATE TABLE workout (\n  workout_id INT PRIMARY KEY,\n  workout_date DATE,\n  workout_name VARCHAR(50),\n  workout_duration INT\n);\n\n\nCREATE TABLE exercise (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(50),\n  exercise_category VARCHAR(50),\n  exercise_description TEXT\n);\n\n\nCREATE TABLE workout_log (\n  log_id INT PRIMARY KEY,\n  workout_id INT,\n  exercise_id INT,\n  sets INT,\n  reps INT\n);\n\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  exercise_id INT,\n  weight DECIMAL,\n  notes TEXT\n);\n\n### STATEMENT\n\nSELECT e.exercise_name, AVG(p.weight) AS avg_weight FROM exercise e JOIN progress p ON e.exercise_id = p.exercise_id GROUP BY e.exercise_name HAVING avg_weight <= 70;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM workouts;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT workout_id, date, exercise_name FROM workouts WHERE sets > 3;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(weight) FROM workouts;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_logs;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, workout_id, exercise_name FROM exercise_logs WHERE sets_completed < 5;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(weight_used) FROM exercise_logs;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE username LIKE 'john%';",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM progress_tracking;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, date, weight FROM progress_tracking WHERE weight > 70;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM achievements;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, achievement_name FROM achievements WHERE date_accomplished > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM workouts JOIN exercise_logs ON workouts.workout_id = exercise_logs.workout_id;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_logs JOIN users ON exercise_logs.workout_id = users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM progress_tracking JOIN users ON progress_tracking.user_id = users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM achievements JOIN users ON achievements.user_id = users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM achievements JOIN progress_tracking ON achievements.user_id = progress_tracking.user_id;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM users JOIN progress_tracking ON users.user_id = progress_tracking.user_id;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM users JOIN achievements ON users.user_id = achievements.user_id;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, workout_id, log_id FROM users JOIN exercise_logs ON users.user_id = exercise_logs.workout_id LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM workouts WHERE date = '2022-01-01' AND sets >= 3",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT workout_id, exercise_name, sets FROM workouts WHERE weight > 50",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_logs WHERE sets_completed > reps_completed",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE email LIKE '%gmail.com'",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, date, weight FROM progress_tracking WHERE user_id = 1",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM achievements WHERE achievement_name = 'First Place'",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM workouts w JOIN exercise_logs el ON w.workout_id = el.workout_id",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT username FROM users WHERE user_id IN (SELECT user_id FROM achievements)",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_logs WHERE workout_id IN (SELECT workout_id FROM workouts WHERE date = '2022-01-01')",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, e.log_id, e.sets_completed FROM users u JOIN exercise_logs e ON u.user_id = e.workout_id",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM achievements WHERE DATE_PART('year', date_accomplished) = 2022",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, COUNT(*) FROM users u JOIN progress_tracking pt ON u.user_id = pt.user_id GROUP BY u.username",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM workouts WHERE workout_id NOT IN (SELECT workout_id FROM exercise_logs)",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM progress_tracking WHERE weight > (SELECT MAX(weight) FROM progress_tracking)",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(weight) AS total_weight FROM progress_tracking GROUP BY user_id HAVING SUM(weight) > 100",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT a.achievement_name, u.username FROM achievements a JOIN users u ON a.user_id = u.user_id",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, MAX(weight) AS max_weight FROM progress_tracking pt JOIN users u ON pt.user_id = u.user_id GROUP BY username",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM workouts WHERE date BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM progress_tracking pt1 WHERE date = (SELECT MAX(date) FROM progress_tracking pt2 WHERE pt1.user_id = pt2.user_id)",
  "### TABLEDATA\n\nCREATE TABLE workouts (\n   workout_id SERIAL PRIMARY KEY,\n   date DATE NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets INT NOT NULL,\n   reps INT NOT NULL,\n   weight DECIMAL NOT NULL\n);\n\nCREATE TABLE exercise_logs (\n   log_id SERIAL PRIMARY KEY,\n   workout_id INT NOT NULL,\n   exercise_name VARCHAR(50) NOT NULL,\n   sets_completed INT NOT NULL,\n   reps_completed INT NOT NULL,\n   weight_used DECIMAL NOT NULL\n);\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50) UNIQUE NOT NULL,\n   email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE progress_tracking (\n   tracking_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   date DATE NOT NULL,\n   weight DECIMAL NOT NULL,\n   body_fat DECIMAL NOT NULL\n);\n\nCREATE TABLE achievements (\n   achievement_id SERIAL PRIMARY KEY,\n   user_id INT NOT NULL,\n   achievement_name VARCHAR(100) NOT NULL,\n   date_accomplished DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(weight) AS avg_weight FROM progress_tracking GROUP BY user_id HAVING AVG(weight) < 50"
]