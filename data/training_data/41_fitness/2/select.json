[
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, sets_completed FROM exercise_history;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, reps_completed, weight_lifted FROM exercise_history;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history WHERE exercise_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, sets_completed FROM exercise_history WHERE exercise_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history WHERE sets_completed >= 10;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, reps_completed, weight_lifted FROM exercise_history WHERE exercise_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history WHERE reps_completed < 8;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, sets_completed FROM exercise_history WHERE exercise_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, reps_completed, weight_lifted FROM exercise_history WHERE sets_completed >= 15;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history WHERE weight_lifted > 50.0;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, sets_completed FROM exercise_history WHERE exercise_date < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history WHERE exercise_name LIKE '%Squat%';",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, reps_completed, weight_lifted FROM exercise_history WHERE sets_completed <= 5;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history WHERE weight_lifted BETWEEN 30.0 AND 40.0;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, sets_completed FROM exercise_history WHERE exercise_date > '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history WHERE sets_completed = 12;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, reps_completed, weight_lifted FROM exercise_history WHERE exercise_date BETWEEN '2022-02-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history WHERE reps_completed >= 12;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, sets_completed FROM exercise_history WHERE weight_lifted <= 60.0;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, SUM(sets_completed) AS total_sets_completed FROM exercise_history GROUP BY exercise_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, MAX(reps_completed) AS max_reps_completed FROM exercise_history GROUP BY exercise_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, AVG(weight_lifted) AS avg_weight_lifted FROM exercise_history GROUP BY exercise_name HAVING AVG(weight_lifted) > 50;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history WHERE exercise_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, COUNT(*) AS total_records FROM exercise_history;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, COUNT(DISTINCT exercise_date) AS distinct_dates FROM exercise_history;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, AVG(sets_completed) AS avg_sets, AVG(reps_completed) AS avg_reps FROM exercise_history GROUP BY exercise_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, SUM(weight_lifted) AS total_weight_lifted FROM exercise_history WHERE exercise_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY exercise_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, MAX(weight_lifted) AS max_weight_lifted FROM exercise_history GROUP BY exercise_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT DISTINCT exercise_name FROM exercise_history ORDER BY exercise_name ASC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history ORDER BY exercise_date DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(weight_lifted) AS overall_avg_weight_lifted FROM exercise_history;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, exercise_date, sets_completed, reps_completed, weight_lifted FROM exercise_history WHERE weight_lifted > 75;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, exercise_date, sets_completed, reps_completed, weight_lifted FROM exercise_history WHERE exercise_name LIKE 'S%' AND reps_completed >= 10;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, COUNT(*) AS total_records FROM exercise_history WHERE weight_lifted IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, exercise_date, SUM(sets_completed) AS total_sets_completed FROM exercise_history WHERE exercise_date BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY exercise_name HAVING total_sets_completed >= 20;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, MAX(weight_lifted) AS max_weight_lifted FROM exercise_history WHERE exercise_name = 'Squats';",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, AVG(weight_lifted) AS avg_weight_lifted FROM exercise_history WHERE exercise_name = 'Deadlifts';",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, COUNT(*) AS total_records FROM exercise_history WHERE reps_completed = 15;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n  exercise_id INT PRIMARY KEY,\n  exercise_name VARCHAR(255),\n  exercise_date DATE,\n  sets_completed INT,\n  reps_completed INT,\n  weight_lifted DECIMAL\n);\n\n### STATEMENT\n\nSELECT exercise_name, COUNT(*) AS total_records FROM exercise_history WHERE weight_lifted > 100;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_logs;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, exercise_name FROM exercise_logs WHERE weight IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT type_name, muscle_group FROM exercise_types;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT exercise_name, sets, reps FROM exercise_logs WHERE sets >= 3;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_logs WHERE exercise_name = 'Squats';",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT exercise_name, weight FROM exercise_logs WHERE weight > 50;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT exercise_name FROM exercise_logs;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT type_name FROM exercise_types WHERE muscle_group = 'Legs';",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT avg(sets) AS avg_sets FROM exercise_logs;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT sum(reps) AS total_reps FROM exercise_logs;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT exercise_name, sets, reps, weight FROM exercise_logs WHERE sets > 3 AND reps >= 10;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT count(*) AS total_entries FROM exercise_logs;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT type_name, muscle_group FROM exercise_types WHERE type_name LIKE '%push%';",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT max(sets) AS max_sets FROM exercise_logs;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT min(weight) AS min_weight FROM exercise_logs;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT type_name, muscle_group, count(*) AS total_exercises FROM exercise_types GROUP BY type_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT exercise_name, SUM(sets) AS total_sets FROM exercise_logs GROUP BY exercise_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT exercise_name, AVG(weight) AS avg_weight FROM exercise_logs GROUP BY exercise_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(reps) AS avg_reps, AVG(weight) AS avg_weight FROM exercise_logs;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT type_name, COUNT(*) AS total_exercises FROM exercise_logs INNER JOIN exercise_types ON exercise_logs.log_id = exercise_types.type_id GROUP BY type_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, exercise_name, sets, reps, weight FROM exercise_logs WHERE sets >= 5 AND reps >= 10;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.log_id, e.exercise_name, e.weight, t.type_name FROM exercise_logs e JOIN exercise_types t ON e.exercise_name = t.type_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, exercise_name, sets, reps, weight FROM exercise_logs WHERE sets > 3 OR reps > 6;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, exercise_name, sets, reps, weight FROM exercise_logs WHERE weight IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, exercise_name, sets, reps, weight FROM exercise_logs WHERE exercise_name LIKE 'Squat%';",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, exercise_name, sets, reps, weight FROM exercise_logs WHERE log_id IN (SELECT log_id FROM exercise_types WHERE muscle_group = 'Legs');",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, exercise_name, sets, reps, weight FROM exercise_logs WHERE weight > 50 AND (sets * reps) > 20;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, exercise_name, sets, reps, weight FROM exercise_logs WHERE exercise_name = 'Deadlift' AND sets >= 3;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, exercise_name, sets, reps, weight FROM exercise_logs WHERE exercise_name = 'Bench Press' ORDER BY weight DESC;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, exercise_name, sets, reps, weight FROM exercise_logs WHERE reps BETWEEN 8 AND 12;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, exercise_name, sets, reps, weight FROM exercise_logs WHERE sets = reps;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, exercise_name, sets, reps, weight FROM exercise_logs WHERE sets * reps >= 30;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT count(*) AS total_logs FROM exercise_logs;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(weight) AS avg_weight FROM exercise_logs;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT e.log_id, e.exercise_name, e.weight, t.muscle_group FROM exercise_logs e JOIN exercise_types t ON e.exercise_name = t.type_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT t.type_name, sum(e.sets) AS total_sets FROM exercise_logs e JOIN exercise_types t ON e.exercise_name = t.type_name GROUP BY t.type_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT t.type_name, AVG(e.reps) AS avg_reps FROM exercise_logs e JOIN exercise_types t ON e.exercise_name = t.type_name GROUP BY t.type_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT t.muscle_group, MAX(e.weight) AS max_weight FROM exercise_logs e JOIN exercise_types t ON e.exercise_name = t.type_name GROUP BY t.muscle_group;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT t.type_name, COUNT(*) AS total_logs FROM exercise_logs e JOIN exercise_types t ON e.exercise_name = t.type_name GROUP BY t.type_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_logs (\n  log_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(100) NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight DECIMAL\n);\n\nCREATE TABLE exercise_types (\n  type_id UUID PRIMARY KEY,\n  type_name VARCHAR(100) NOT NULL,\n  muscle_group VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, exercise_name, sets, reps, weight FROM exercise_logs WHERE sets IN (SELECT MAX(sets) FROM exercise_logs);",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, date, sets FROM exercise_history;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT exercise_id, exercise_name FROM exercises;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, username, age FROM users;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT exercise_id, muscle_group FROM exercises;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, date, sets, reps, weight FROM exercise_history WHERE user_id = '12345';",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE age > 25;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM exercises WHERE muscle_group = 'Legs';",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history ORDER BY date DESC;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, username, age FROM users ORDER BY age ASC;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT AVG(age) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT MAX(weight) AS max_weight FROM exercise_history;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_entries FROM exercise_history GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT username, MAX(weight) AS max_weight FROM exercise_history INNER JOIN users ON exercise_history.user_id = users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT DISTINCT muscle_group FROM exercises;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM exercises WHERE exercise_name LIKE '%Squats%';",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(weight) AS total_weight_lifted FROM exercise_history GROUP BY user_id HAVING SUM(weight) > 1000;",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE username LIKE 'john%' AND email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history WHERE user_id = '123456'",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE age > 30",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT exercise_name, muscle_group FROM exercises",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM exercise_history",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM exercise_history",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT exercise_name, AVG(weight) FROM exercises GROUP BY exercise_name",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(sets) FROM exercise_history WHERE date BETWEEN '2022-01-01' AND '2022-03-31'",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE username LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_history WHERE sets > 5 AND reps > 10",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(weight) FROM exercise_history GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT exercise_name, COUNT(*) AS total_exercises FROM exercises GROUP BY exercise_name",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(weight) FROM exercise_history GROUP BY user_id HAVING SUM(weight) > 100",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT exercise_name, MAX(weight) FROM exercise_history INNER JOIN exercises ON exercise_history.exercise_id = exercises.exercise_id GROUP BY exercise_name",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(reps) FROM exercise_history GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, exercise_name FROM exercise_history INNER JOIN exercises ON exercise_history.exercise_id = exercises.exercise_id",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, exercise_name, SUM(weight) FROM exercise_history INNER JOIN exercises ON exercise_history.exercise_id = exercises.exercise_id GROUP BY user_id, exercise_name",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(sets) FROM exercise_history GROUP BY user_id HAVING AVG(sets) > 3",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT exercise_name, MAX(reps) FROM exercise_history INNER JOIN exercises ON exercise_history.exercise_id = exercises.exercise_id GROUP BY exercise_name",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_exercises FROM exercise_history GROUP BY user_id HAVING COUNT(*) > 10",
  "### TABLEDATA\n\nCREATE TABLE exercise_history (\n    user_id UUID,\n    exercise_id UUID,\n    date DATE,\n    sets INT,\n    reps INT,\n    weight INT\n);\n\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR,\n    age INT\n);\n\n\nCREATE TABLE exercises (\n    exercise_id UUID PRIMARY KEY,\n    exercise_name VARCHAR,\n    muscle_group VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, exercise_name, AVG(weight) FROM exercise_history INNER JOIN exercises ON exercise_history.exercise_id = exercises.exercise_id GROUP BY user_id, exercise_name",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_records;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT exercise_id, exercise_name, exercise_date FROM exercise_records;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT exercise_name FROM exercise_records;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT exercise_name, sets, reps FROM exercise_records WHERE weight > 0;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_records WHERE exercise_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT category_name FROM exercise_categories;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_categories WHERE category_id = 'a1b2c3';",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT session_date, duration_minutes FROM exercise_sessions;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT username, email, age FROM user_profiles;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT user_id, height, weight FROM user_profiles WHERE weight > height;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT exercise_name, sets, reps, weight FROM exercise_records WHERE sets >= 3;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_records WHERE reps BETWEEN 8 AND 12;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT MAX(weight) FROM exercise_records;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT MIN(sets) FROM exercise_records;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT AVG(sets) FROM exercise_records;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM user_profiles;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT exercise_name, COUNT(*) AS total_records FROM exercise_records GROUP BY exercise_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_profiles WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_records WHERE weight IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT exercise_name, session_date FROM exercise_records JOIN exercise_sessions ON exercise_records.exercise_id = exercise_sessions.session_id;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT e.exercise_name, c.category_name FROM exercise_records e JOIN exercise_categories c ON e.exercise_id = c.category_id;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_records;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT exercise_name, sets, reps FROM exercise_records WHERE weight > 50;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT exercise_name, exercise_date FROM exercise_records WHERE sets >= 3 AND reps >= 10;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT exercise_id, exercise_name, exercise_date FROM exercise_records WHERE exercise_name LIKE '%squat%';",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT category_name FROM exercise_categories;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_records WHERE exercise_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT * FROM exercise_sessions WHERE duration_minutes > 30 AND notes IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM user_profiles WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT category_name, COUNT(*) FROM exercise_records INNER JOIN exercise_categories ON exercise_records.exercise_id = exercise_categories.category_id GROUP BY category_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT exercise_name, MAX(weight) FROM exercise_records GROUP BY exercise_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT user_id, username, age FROM user_profiles WHERE height > 160 AND weight < 70;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM user_profiles WHERE username LIKE 'j%';",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM exercise_records;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM user_profiles WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT exercise_categories.category_name, exercise_records.exercise_name FROM exercise_categories INNER JOIN exercise_records ON exercise_categories.category_id = exercise_records.exercise_id;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT exercise_name, SUM(reps) AS total_reps FROM exercise_records WHERE exercise_date = '2022-08-15' GROUP BY exercise_name;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT username, height, weight FROM user_profiles WHERE age BETWEEN 25 AND 35;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT category_name, COUNT(*) FROM exercise_records INNER JOIN exercise_categories ON exercise_records.exercise_id = exercise_categories.category_id GROUP BY category_name HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT exercise_name, AVG(sets) AS avg_sets FROM exercise_records GROUP BY exercise_name HAVING AVG(sets) > 3;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_profiles WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE exercise_records (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(255) NOT NULL,\n  exercise_date DATE NOT NULL,\n  sets INT NOT NULL,\n  reps INT NOT NULL,\n  weight INT\n);\n\nCREATE TABLE exercise_categories (\n  category_id UUID PRIMARY KEY,\n  category_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE exercise_sessions (\n  session_id UUID PRIMARY KEY,\n  session_date DATE NOT NULL,\n  duration_minutes INT NOT NULL,\n  notes TEXT\n);\n\nCREATE TABLE user_profiles (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE,\n  age INT,\n  height INT,\n  weight INT\n);\n\n### STATEMENT\n\nSELECT exercise_name, weight FROM exercise_records WHERE weight IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM exercises;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT exercise_name, exercise_category FROM exercises;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT exercise_id, exercise_name, exercise_description FROM exercises;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM workouts;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT workout_id, workout_date FROM workouts;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT workout_id, workout_duration FROM workouts;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM sets;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT set_id, exercise_id, workout_id FROM sets;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT set_repetitions, set_weight FROM sets;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_name, user_email FROM users;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, user_name FROM users;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM progress;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT progress_id, user_id, progress_date FROM progress;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT progress_id, weight, body_fat FROM progress;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT exercise_name, set_repetitions FROM exercises JOIN sets ON exercises.exercise_id = sets.exercise_id;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_name, workout_date FROM users JOIN workouts ON users.user_id = workouts.user_id;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT exercise_name, workout_date FROM exercises JOIN sets ON exercises.exercise_id = sets.exercise_id JOIN workouts ON sets.workout_id = workouts.workout_id;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_name, weight, body_fat FROM users JOIN progress ON users.user_id = progress.user_id;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_name, workout_date, weight, body_fat FROM users JOIN workouts ON users.user_id = workouts.user_id JOIN progress ON users.user_id = progress.user_id;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM exercises WHERE exercise_category = 'Cardio';",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT exercise_name, exercise_description FROM exercises WHERE exercise_category = 'Strength';",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT exercise_name, COUNT(*) AS total_sets FROM exercises JOIN sets ON exercises.exercise_id = sets.exercise_id GROUP BY exercise_name;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT users.user_name, progress.weight, progress.body_fat FROM users INNER JOIN progress ON users.user_id = progress.user_id;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT workout_date, SUM(set_weight) AS total_weight_lifted FROM workouts JOIN sets ON workouts.workout_id = sets.workout_id GROUP BY workout_date;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_name, COUNT(*) AS total_workouts FROM users LEFT JOIN workouts ON users.user_id = workouts.user_id GROUP BY user_name;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT users.user_name, AVG(progress.weight) AS avg_weight FROM users INNER JOIN progress ON users.user_id = progress.user_id GROUP BY users.user_name;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT workout_date, COUNT(*) AS total_sets FROM workouts LEFT JOIN sets ON workouts.workout_id = sets.workout_id GROUP BY workout_date;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT exercise_name, MAX(set_weight) AS max_weight_lifted FROM exercises JOIN sets ON exercises.exercise_id = sets.exercise_id GROUP BY exercise_name;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM progress WHERE body_fat > 20 ORDER BY progress_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_name, AVG(weight) AS avg_weight FROM progress JOIN users ON progress.user_id = users.user_id GROUP BY user_name HAVING AVG(weight) > 50;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT exercise_category, COUNT(*) AS total_exercises FROM exercises GROUP BY exercise_category;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM workouts WHERE workout_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_name, MAX(weight) AS max_weight_lifted FROM progress JOIN users ON progress.user_id = users.user_id GROUP BY user_name;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT workout_date, AVG(set_repetitions) AS avg_repetitions FROM workouts JOIN sets ON workouts.workout_id = sets.workout_id GROUP BY workout_date;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_name, SUM(weight) AS total_weight_lifted FROM progress JOIN users ON progress.user_id = users.user_id GROUP BY user_name;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT exercise_name, MIN(set_weight) AS min_weight_lifted FROM exercises JOIN sets ON exercises.exercise_id = sets.exercise_id GROUP BY exercise_name;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT users.user_name, COUNT(*) AS total_progress_entries FROM users LEFT JOIN progress ON users.user_id = progress.user_id GROUP BY user_name;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT workout_date, MAX(set_repetitions) AS max_repetitions FROM workouts JOIN sets ON workouts.workout_id = sets.workout_id GROUP BY workout_date;",
  "### TABLEDATA\n\nCREATE TABLE exercises (\n  exercise_id UUID PRIMARY KEY,\n  exercise_name VARCHAR(50) NOT NULL,\n  exercise_category VARCHAR(50) NOT NULL,\n  exercise_description TEXT\n);\n\nCREATE TABLE workouts (\n  workout_id UUID PRIMARY KEY,\n  workout_date DATE NOT NULL,\n  workout_duration INTERVAL NOT NULL,\n  user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE sets (\n  set_id UUID PRIMARY KEY,\n  exercise_id UUID REFERENCES exercises(exercise_id),\n  workout_id UUID REFERENCES workouts(workout_id),\n  set_repetitions INT NOT NULL,\n  set_weight DECIMAL(5,2)\n);\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  user_name VARCHAR(50) NOT NULL,\n  user_email VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE progress (\n  progress_id UUID PRIMARY KEY,\n  user_id UUID REFERENCES users(user_id),\n  progress_date DATE NOT NULL,\n  weight DECIMAL(5,2) NOT NULL,\n  body_fat DECIMAL(5,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_name, SUM(body_fat) AS total_body_fat FROM progress JOIN users ON progress.user_id = users.user_id GROUP BY user_name;"
]