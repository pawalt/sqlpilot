[
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT username, age, weight FROM user_fitness_data WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT username, height FROM user_fitness_data WHERE weight < 70;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE activity_level = 'active';",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT username, target_calories FROM user_fitness_data WHERE activity_level = 'moderate';",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE target_calories < 2000;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE target_calories BETWEEN 1800 AND 2200;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE target_exercise IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT activity_level FROM user_fitness_data;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM user_fitness_data;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(weight) FROM user_fitness_data;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MIN(height) FROM user_fitness_data;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(weight) FROM user_fitness_data;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT SUM(target_calories) FROM user_fitness_data;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data ORDER BY weight ASC;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE username LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT username, age, weight FROM user_fitness_data WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE weight BETWEEN 60 AND 80;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT username, target_calories FROM user_fitness_data WHERE activity_level = 'active';",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, target_calories FROM user_fitness_data WHERE username LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE target_calories > 2000 AND target_exercise = 'Running';",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT username, weight, height FROM user_fitness_data WHERE activity_level = 'moderate' ORDER BY weight DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, age, target_calories FROM user_fitness_data WHERE height > 170 AND activity_level = 'active';",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE weight < 70 OR height > 160;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, target_calories FROM user_fitness_data WHERE activity_level = 'sedentary' AND target_calories < 1500;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE age BETWEEN 20 AND 40 AND height < 180;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT username, weight, target_exercise FROM user_fitness_data WHERE activity_level = 'active' AND target_calories > 2500;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE activity_level = 'active' OR activity_level = 'moderate';",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT username, weight, target_calories FROM user_fitness_data WHERE activity_level <> 'sedentary';",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE age > 50 AND target_calories < 1800 ORDER BY age ASC;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT username, target_exercise FROM user_fitness_data WHERE weight > 70 AND height < 160;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT user_id, age, weight, height FROM user_fitness_data WHERE activity_level = 'active' AND target_calories > 2000;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE activity_level IN ('moderate', 'active');",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT username, age, weight, height FROM user_fitness_data WHERE weight >= 70 AND height <= 180;",
  "### TABLEDATA\n\nCREATE TABLE user_fitness_data (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    weight DECIMAL(5,2),\n    height DECIMAL(5,2),\n    activity_level ENUM('sedentary', 'moderate', 'active'),\n    target_calories INT,\n    target_exercise VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_data WHERE age < 30 AND target_calories > 2200;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM User;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT name, age FROM User;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, weight, height FROM User;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM FitnessLog;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT date, steps FROM FitnessLog;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT log_id, calories_burned, workout_duration FROM FitnessLog;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM FitnessRecommendations;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT recommendation, recommendation_type FROM FitnessRecommendations;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, recommendation_date FROM FitnessRecommendations;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name, FitnessLog.steps FROM User INNER JOIN FitnessLog ON User.user_id = FitnessLog.user_id;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name, FitnessLog.workout_duration FROM User INNER JOIN FitnessLog ON User.user_id = FitnessLog.user_id;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name, FitnessRecommendations.recommendation FROM User INNER JOIN FitnessRecommendations ON User.user_id = FitnessRecommendations.user_id;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.age, FitnessRecommendations.recommendation_date FROM User INNER JOIN FitnessRecommendations ON User.user_id = FitnessRecommendations.user_id;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name, FitnessLog.calories_burned, FitnessRecommendations.recommendation FROM User INNER JOIN FitnessLog ON User.user_id = FitnessLog.user_id INNER JOIN FitnessRecommendations ON User.user_id = FitnessRecommendations.user_id;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.age, FitnessLog.steps, FitnessRecommendations.recommendation_type FROM User INNER JOIN FitnessLog ON User.user_id = FitnessLog.user_id INNER JOIN FitnessRecommendations ON User.user_id = FitnessRecommendations.user_id;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT name AS User_Name, age AS User_Age FROM User;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id AS UserID, weight AS Weight FROM User;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT log_id AS LogID, date AS LogDate FROM FitnessLog;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT recommendation_id AS RecommendationID, recommendation AS Recommendation FROM FitnessRecommendations;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name AS UserName, FitnessLog.calories_burned AS CaloriesBurned, FitnessLog.workout_duration AS WorkoutDuration FROM User INNER JOIN FitnessLog ON User.user_id = FitnessLog.user_id;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM User;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, name, age FROM User WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM FitnessLog WHERE date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name, FitnessLog.steps, FitnessLog.calories_burned FROM User INNER JOIN FitnessLog ON User.user_id = FitnessLog.user_id;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name, User.gender, FitnessRecommendations.recommendation FROM User INNER JOIN FitnessRecommendations ON User.user_id = FitnessRecommendations.user_id;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name, FitnessLog.calories_burned FROM User INNER JOIN FitnessLog ON User.user_id = FitnessLog.user_id WHERE FitnessLog.workout_duration > 60;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM User;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(age) FROM User;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT SUM(calories_burned) FROM FitnessLog WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name, FitnessLog.date FROM User INNER JOIN FitnessLog ON User.user_id = FitnessLog.user_id WHERE FitnessLog.steps > 10000;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT recommendation_id, recommendation, recommendation_type FROM FitnessRecommendations WHERE recommendation_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name, FitnessLog.calories_burned FROM User INNER JOIN FitnessLog ON User.user_id = FitnessLog.user_id WHERE User.age >= 18 AND User.gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(workout_duration) FROM FitnessLog WHERE user_id IN (SELECT user_id FROM User WHERE age > 30);",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name, FitnessLog.steps FROM User INNER JOIN FitnessLog ON User.user_id = FitnessLog.user_id WHERE FitnessLog.workout_duration < 30;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name, FitnessRecommendations.recommendation_type FROM User INNER JOIN FitnessRecommendations ON User.user_id = FitnessRecommendations.user_id WHERE FitnessRecommendations.recommendation_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT user_id) FROM FitnessLog WHERE date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name, FitnessLog.date FROM User INNER JOIN FitnessLog ON User.user_id = FitnessLog.user_id WHERE User.gender = 'Male' AND FitnessLog.calories_burned > 500;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name, FitnessLog.date FROM User LEFT JOIN FitnessLog ON User.user_id = FitnessLog.user_id WHERE FitnessLog.log_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT recommendation_id, recommendation_type FROM FitnessRecommendations GROUP BY recommendation_type;",
  "### TABLEDATA\n\nCREATE TABLE User (\n    user_id UUID PRIMARY KEY,\n    name STRING,\n    age INT,\n    gender STRING,\n    weight DECIMAL,\n    height DECIMAL\n);\n\nCREATE TABLE FitnessLog (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    date DATE,\n    steps INT,\n    calories_burned DECIMAL,\n    workout_duration INT\n);\n\nCREATE TABLE FitnessRecommendations (\n    recommendation_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES User(user_id),\n    recommendation TEXT,\n    recommendation_type STRING,\n    recommendation_date DATE\n);\n\n### STATEMENT\n\nSELECT User.name, FitnessLog.calories_burned FROM User INNER JOIN FitnessLog ON User.user_id = FitnessLog.user_id ORDER BY FitnessLog.calories_burned DESC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT age, gender FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT * FROM user_activities;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT activity_name, activity_type FROM user_activities;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT * FROM user_preferences;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT fitness_level, goal FROM user_preferences;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, preference_id FROM user_preferences;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, preferred_activities FROM user_preferences;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT activity_name, calories_burned FROM user_activities;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT activity_name, duration FROM user_activities;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT username, age, gender FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT activity_name, activity_type, duration, calories_burned FROM user_activities;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE age > 25;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT * FROM user_activities WHERE duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT * FROM user_activities WHERE calories_burned > 100;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, activity_name, duration FROM user_activities WHERE duration < 60;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, goal, preferred_activities FROM user_preferences WHERE fitness_level = 'Intermediate';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT * FROM user_preferences WHERE goal = 'Weight Loss';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT username, age FROM users WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, activity_name, calories_burned FROM user_activities WHERE duration > 60;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, fitness_level, goal FROM user_preferences WHERE fitness_level = 'Intermediate';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT users.username, user_activities.activity_name FROM users JOIN user_activities ON users.user_id = user_activities.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT users.username, user_preferences.goal FROM users JOIN user_preferences ON users.user_id = user_preferences.user_id WHERE user_preferences.fitness_level = 'Beginner';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT users.username, user_activities.activity_name FROM users LEFT JOIN user_activities ON users.user_id = user_activities.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(duration) AS total_duration FROM user_activities GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(calories_burned) AS avg_calories FROM user_activities GROUP BY user_id HAVING avg_calories > 100;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, array_length(preferred_activities, 1) AS num_activities FROM user_preferences;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, JSONB_ARRAY_LENGTH(schedule->'days') AS days_count FROM user_preferences WHERE JSONB_ARRAY_LENGTH(schedule->'days') > 3;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, fitness_level FROM user_preferences WHERE preferred_activities @> ARRAY['Yoga'];",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, preference_id FROM user_preferences WHERE schedule->>'preferred_time' = 'Morning';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, activity_name, calories_burned FROM user_activities WHERE activity_type LIKE '%Cardio%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, array_to_json(preferred_activities) AS json_activities FROM user_preferences;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, jsonb_array_elements_text(schedule->'days') AS day FROM user_preferences WHERE day = 'Monday';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, age, height, weight, SUM(calories_burned) AS total_calories FROM users JOIN user_activities ON users.user_id = user_activities.user_id GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, json_agg(activity_name) AS activities FROM user_activities GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(age) AS max_age, MIN(age) AS min_age FROM users GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n);\n\n\nCREATE TABLE user_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(100),\n    activity_type VARCHAR(50),\n    duration INT,\n    calories_burned FLOAT\n);\n\n\nCREATE TABLE user_preferences (\n    preference_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    fitness_level VARCHAR(20),\n    goal VARCHAR(50),\n    preferred_activities VARCHAR[],\n    schedule JSON\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS activity_count FROM user_activities GROUP BY user_id HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, age, height, weight FROM users WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM fitness_activities;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT activity_id, activity_name, duration_min FROM fitness_activities WHERE duration_min > 60;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_goals;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT goal_id, goal_description FROM user_fitness_goals WHERE target_calories_burned >= 500;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_history;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT history_id, user_id, date FROM user_fitness_history WHERE completed = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.user_id, u.username, f.activity_name FROM users u JOIN fitness_activities f ON u.user_id = f.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, f.activity_name, h.date FROM users u JOIN fitness_activities f ON u.user_id = f.user_id JOIN user_fitness_history h ON f.activity_id = h.activity_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.user_id, u.username, SUM(calories_burned) AS total_calories FROM users u JOIN fitness_activities f ON u.user_id = f.user_id JOIN user_fitness_history h ON f.activity_id = h.activity_id GROUP BY u.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, COUNT(*) AS total_activities FROM users u JOIN fitness_activities f ON u.user_id = f.user_id JOIN user_fitness_history h ON f.activity_id = h.activity_id GROUP BY u.username HAVING total_activities > 5;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, AVG(duration_min) AS avg_duration FROM users u JOIN fitness_activities f ON u.user_id = f.user_id JOIN user_fitness_history h ON f.activity_id = h.activity_id GROUP BY u.username HAVING avg_duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, MAX(weight) AS max_weight FROM users u;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT f.activity_name, MIN(calories_burned) AS min_calories FROM fitness_activities f;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, MAX(age) AS max_age, MIN(age) AS min_age FROM users u;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, SUM(target_calories_burned) AS total_target_calories FROM users u JOIN user_fitness_goals g ON u.user_id = g.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, AVG(weight) AS avg_weight, AVG(height) AS avg_height FROM users u;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, COUNT(distinct f.activity_name) AS unique_activities FROM users u JOIN fitness_activities f ON u.user_id = f.user_id JOIN user_fitness_history h ON f.activity_id = h.activity_id GROUP BY u.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, age FROM users WHERE height > 170 AND weight < 70;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, username, age FROM users JOIN fitness_activities ON users.user_id = fitness_activities.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT activity_name, duration_min FROM fitness_activities WHERE calories_burned > 100;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, goal_description FROM user_fitness_goals WHERE target_calories_burned > 500;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_fitness_history WHERE completed = true;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, activity_name, date FROM fitness_activities JOIN user_fitness_history ON fitness_activities.activity_id = user_fitness_history.activity_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT users.user_id, username, goal_description FROM users JOIN user_fitness_goals ON users.user_id = user_fitness_goals.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.user_id, u.username, f.activity_name FROM users u JOIN fitness_activities f ON u.user_id = f.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, f.activity_name, h.completed FROM users u JOIN fitness_activities f ON u.user_id = f.user_id JOIN user_fitness_history h ON f.activity_id = h.activity_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, activity_name, date FROM fitness_activities JOIN user_fitness_history USING (activity_id);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, username, goal_description, target_calories_burned FROM users CROSS JOIN user_fitness_goals;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, username, activity_name, date FROM users u, fitness_activities f, user_fitness_history h WHERE u.user_id = f.user_id AND f.activity_id = h.activity_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.user_id, u.username, g.goal_description, h.completed FROM users u, user_fitness_goals g, user_fitness_history h WHERE u.user_id = g.user_id AND g.goal_id = h.goal_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, f.activity_name, h.date, h.completed FROM users u JOIN fitness_activities f ON u.user_id = f.user_id JOIN user_fitness_history h ON f.activity_id = h.activity_id WHERE u.age > 25;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, f.activity_name, g.goal_description, h.target_calories_burned FROM users u JOIN fitness_activities f ON u.user_id = f.user_id JOIN user_fitness_goals g ON u.user_id = g.user_id JOIN user_fitness_history h ON f.activity_id = h.activity_id AND u.age < 40;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, f.activity_name, g.target_calories_burned, h.date FROM users u JOIN fitness_activities f ON u.user_id = f.user_id JOIN user_fitness_goals g ON f.activity_id = g.user_id JOIN user_fitness_history h ON g.goal_id = h.goal_id AND u.weight < 80;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, f.activity_name, g.goal_description, h.date FROM users u JOIN fitness_activities f ON u.user_id = f.user_id JOIN user_fitness_goals g ON u.user_id = g.user_id JOIN user_fitness_history h ON f.activity_id = h.activity_id AND u.height > 160;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, f.activity_name, h.completed FROM users u JOIN fitness_activities f ON u.user_id = f.user_id JOIN user_fitness_history h ON f.activity_id = h.activity_id WHERE u.age BETWEEN 30 AND 50;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT NOT NULL,\n    height FLOAT NOT NULL,\n    weight FLOAT NOT NULL\n);\n\nCREATE TABLE fitness_activities (\n    activity_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_name VARCHAR(50) NOT NULL,\n    duration_min INT NOT NULL,\n    calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_goals (\n    goal_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    goal_description VARCHAR(100) NOT NULL,\n    target_calories_burned FLOAT NOT NULL\n);\n\nCREATE TABLE user_fitness_history (\n    history_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    activity_id UUID REFERENCES fitness_activities(activity_id),\n    date DATE NOT NULL,\n    completed BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT u.username, f.activity_name, g.goal_description, h.target_calories_burned FROM users u JOIN fitness_activities f ON u.user_id = f.user_id JOIN user_fitness_goals g ON f.user_id = g.user_id JOIN user_fitness_history h ON u.age > 30 AND u.age < 50;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM users",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT user_id, username FROM users",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT user_id, age FROM users WHERE age > 30",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM activities",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT activity_name, duration_minutes FROM activities WHERE calories_burned > 200",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM workouts",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT workout_name, intensity_level FROM workouts WHERE duration_minutes > 60",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM meals",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT meal_name, protein, carbs FROM meals WHERE calories < 500",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM meal_logs",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT meal_id, date FROM meal_logs WHERE user_id = '123e4567-e89b-12d3-a456-426614174000'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT u.username, m.meal_name FROM meal_logs ml JOIN users u ON u.user_id = ml.user_id JOIN meals m ON m.meal_id = ml.meal_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE age < 25 AND gender = 'Male'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM activities WHERE duration_minutes >= 45 AND duration_minutes <= 60",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM workouts WHERE user_id = '123e4567-e89b-12d3-a456-426614174000'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM meals WHERE calories > 500 AND fats < 20",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM meal_logs WHERE date BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT u.username, w.workout_name FROM workouts w JOIN users u ON w.user_id = u.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users FROM users",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(calories_burned) AS max_calories_burned FROM activities",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(weight) AS avg_weight FROM users",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT username, age, gender FROM users WHERE gender = 'Male' AND age BETWEEN 25 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT username, height, weight FROM users WHERE height >= 170 AND weight < 70;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT u.username, a.activity_name, a.calories_burned FROM users u INNER JOIN activities a ON u.user_id = a.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT u.username, w.workout_name, w.intensity_level FROM users u INNER JOIN workouts w ON u.user_id = w.user_id WHERE w.duration_minutes > 60;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT meal_name, calories, protein, carbs, fats FROM meals WHERE calories > 500 AND protein >= 20 AND userid = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT m.meal_name, ml.date FROM meals m INNER JOIN meal_logs ml ON m.meal_id = ml.meal_id WHERE m.calories <= 400 AND ml.date = '2023-09-15';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT u.username, m.meal_name, ml.date FROM users u INNER JOIN meal_logs ml ON u.user_id = ml.user_id INNER JOIN meals m ON ml.meal_id = m.meal_id WHERE u.age < 40 AND u.gender = 'Female' AND ml.date BETWEEN '2023-09-01' AND '2023-09-30';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT u.username, a.activity_name, w.workout_name FROM users u LEFT JOIN activities a ON u.user_id = a.user_id LEFT JOIN workouts w ON u.user_id = w.user_id WHERE a.calories_burned > 200 OR w.duration_minutes > 45;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT username, gender FROM users WHERE age IS NOT NULL ORDER BY gender DESC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT user_id) AS user_count FROM workouts WHERE intensity_level = 'High';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(calories) AS avg_calories, AVG(duration_minutes) AS avg_duration FROM workouts WHERE intensity_level = 'Medium';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT SUM(calories) AS total_calories FROM activities WHERE user_id = '123e4567-e89b-12d3-a456-426614174000' AND duration_minutes > 30;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT gender, AVG(age) AS avg_age FROM users GROUP BY gender HAVING COUNT(user_id) > 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT username, height, weight, (weight / (height * height)) AS bmi FROM users WHERE weight IS NOT NULL AND height IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT meal_name, SUM(calories) AS total_calories FROM meal_logs ml INNER JOIN meals m ON ml.meal_id = m.meal_id AND ml.user_id = '123e4567-e89b-12d3-a456-426614174000' GROUP BY meal_name;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT u.username, w.workout_name, a.activity_name FROM users u CROSS JOIN workouts w CROSS JOIN activities a WHERE u.user_id = '123e4567-e89b-12d3-a456-426614174000' AND w.user_id = u.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(ml.log_id) AS log_count FROM users u LEFT JOIN meal_logs ml ON u.user_id = ml.user_id GROUP BY u.username HAVING COUNT(ml.log_id) >= 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT meal_name, carbs, (carbs * 4) AS total_calories FROM meals WHERE user_id IN (SELECT user_id FROM users WHERE age > 30);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    height FLOAT,\n    weight FLOAT\n)\n\nCREATE TABLE activities (\n    activity_id UUID PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    calories_burned INT,\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE workouts (\n    workout_id UUID PRIMARY KEY,\n    workout_name VARCHAR(50) NOT NULL,\n    intensity_level VARCHAR(20),\n    duration_minutes INT,\n    user_id UUID REFERENCES users(user_id)\n)\n\nCREATE TABLE meals (\n    meal_id UUID PRIMARY KEY,\n    meal_name VARCHAR(50) NOT NULL,\n    calories INT,\n    protein FLOAT,\n    carbs FLOAT,\n    fats FLOAT\n)\n\nCREATE TABLE meal_logs (\n    log_id UUID PRIMARY KEY,\n    meal_id UUID REFERENCES meals(meal_id),\n    user_id UUID REFERENCES users(user_id),\n    date DATE\n)\n\n### STATEMENT\n\nSELECT username, MAX(age) AS max_age, MIN(age) AS min_age FROM users GROUP BY username HAVING COUNT(user_id) >= 1;"
]