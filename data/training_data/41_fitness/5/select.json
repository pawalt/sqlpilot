[
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM gym_equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM gym_equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name, quantity FROM gym_equipment_inventory WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM gym_equipment_inventory WHERE last_maintenance_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name FROM gym_equipment_inventory WHERE quantity >= 5;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_equipment FROM gym_equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT SUM(quantity) AS total_quantity FROM gym_equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(quantity) AS avg_quantity FROM gym_equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, MAX(quantity) AS max_quantity FROM gym_equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_name, MIN(quantity) AS min_quantity FROM gym_equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name FROM gym_equipment_inventory ORDER BY equipment_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM gym_equipment_inventory ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM gym_equipment_inventory LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name, quantity FROM gym_equipment_inventory LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name FROM gym_equipment_inventory WHERE equipment_name LIKE 'Treadmill%';",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name, last_maintenance_date FROM gym_equipment_inventory WHERE last_maintenance_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name, quantity FROM gym_equipment_inventory WHERE last_maintenance_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name, quantity FROM gym_equipment_inventory WHERE equipment_id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name, quantity FROM gym_equipment_inventory WHERE equipment_name LIKE '%Dumbbell%';",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT quantity FROM gym_equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM gym_equipment_inventory WHERE quantity > 10",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name FROM gym_equipment_inventory ORDER BY equipment_name ASC",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, quantity FROM gym_equipment_inventory WHERE last_maintenance_date < '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM gym_equipment_inventory WHERE quantity BETWEEN 5 AND 10",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(quantity) AS avg_quantity FROM gym_equipment_inventory",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_equipment FROM gym_equipment_inventory",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_name, DATE_ADD(last_maintenance_date, INTERVAL 30 DAY) AS next_maintenance_date FROM gym_equipment_inventory",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT quantity FROM gym_equipment_inventory",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM gym_equipment_inventory WHERE equipment_name LIKE 'Treadmill%'",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name, quantity FROM gym_equipment_inventory WHERE last_maintenance_date IS NULL",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name FROM gym_equipment_inventory WHERE quantity = (SELECT MAX(quantity) FROM gym_equipment_inventory)",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM gym_equipment_inventory WHERE equipment_name IN ('Dumbbells', 'Treadmill')",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name FROM gym_equipment_inventory WHERE last_maintenance_date >= '2022-06-01'",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM gym_equipment_inventory WHERE quantity < (SELECT AVG(quantity) FROM gym_equipment_inventory)",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_name, EXTRACT(YEAR FROM last_maintenance_date) AS year_maintenance FROM gym_equipment_inventory",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM gym_equipment_inventory WHERE equipment_name NOT LIKE 'Bench%'",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM gym_equipment_inventory WHERE quantity = 0",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT equipment_name FROM gym_equipment_inventory",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_id, quantity FROM gym_equipment_inventory WHERE last_maintenance_date > '2023-01-01'",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment_inventory (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL,\n  last_maintenance_date DATE\n)\n\n### STATEMENT\n\nSELECT equipment_name, quantity FROM gym_equipment_inventory WHERE last_maintenance_date IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_id, equip_name FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM maintenance_records;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT record_id, equip_id FROM maintenance_records;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, equip_quantity FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT maintenance_date, maintenance_details FROM maintenance_records;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory WHERE equip_quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM maintenance_records WHERE maintenance_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_id, equip_name, equip_quantity FROM equipment_inventory WHERE equip_quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT record_id, equip_id, maintenance_date FROM maintenance_records WHERE maintenance_date < '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory INNER JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory LEFT JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, maintenance_details FROM equipment_inventory RIGHT JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, maintenance_date FROM equipment_inventory JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id WHERE equip_quantity >= 5;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, maintenance_details FROM equipment_inventory JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id WHERE maintenance_date <= '2022-05-31';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_id, COUNT(record_id) AS maintenance_count FROM equipment_inventory LEFT JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id GROUP BY equip_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, SUM(equip_quantity) AS total_quantity FROM equipment_inventory GROUP BY equip_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, AVG(equip_quantity) AS avg_quantity FROM equipment_inventory WHERE equip_quantity > 0 GROUP BY equip_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_id, MAX(maintenance_date) AS latest_maintenance_date FROM maintenance_records GROUP BY equip_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, MIN(equip_quantity) AS min_quantity, MAX(equip_quantity) AS max_quantity FROM equipment_inventory GROUP BY equip_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_id, equip_name, equip_quantity FROM equipment_inventory WHERE equip_quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_id, equip_name, COUNT(*) AS total_maintenance_records FROM equipment_inventory JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id GROUP BY equip_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, maintenance_date FROM equipment_inventory JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id WHERE maintenance_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, COUNT(*) AS total_maintenance_records FROM equipment_inventory JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id GROUP BY equip_name HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, AVG(equip_quantity) AS avg_quantity FROM equipment_inventory GROUP BY equip_name HAVING AVG(equip_quantity) > 15;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT equip_id) AS total_equipment, MAX(equip_quantity) AS max_quantity FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, SUM(equip_quantity) AS total_quantity FROM equipment_inventory GROUP BY equip_name ORDER BY total_quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, maintenance_date FROM equipment_inventory LEFT JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, MAX(maintenance_date) AS last_maintenance_date FROM equipment_inventory LEFT JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id GROUP BY equip_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, COUNT(*) AS total_maintenance_records FROM equipment_inventory LEFT JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id GROUP BY equip_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, AVG(equip_quantity) AS avg_quantity FROM equipment_inventory LEFT JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id GROUP BY equip_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, COUNT(*) AS total_maintenance_records FROM equipment_inventory INNER JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id GROUP BY equip_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, AVG(equip_quantity) AS avg_quantity FROM equipment_inventory INNER JOIN maintenance_records ON equipment_inventory.equip_id = maintenance_records.equip_id GROUP BY equip_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, maintenance_date FROM equipment_inventory UNION ALL SELECT equip_name, maintenance_date FROM maintenance_records;",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory WHERE equip_id IN (SELECT equip_id FROM maintenance_records WHERE maintenance_date >= '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, maintenance_date FROM equipment_inventory WHERE equip_id IN (SELECT equip_id FROM maintenance_records GROUP BY equip_id HAVING COUNT(*) > 2);",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, maintenance_date FROM equipment_inventory WHERE equip_id NOT IN (SELECT equip_id FROM maintenance_records);",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, maintenance_date FROM equipment_inventory WHERE equip_id = (SELECT equip_id FROM maintenance_records WHERE maintenance_date = '2022-08-15');",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, maintenance_date FROM equipment_inventory WHERE equip_id = ANY (SELECT equip_id FROM maintenance_records);",
  "### TABLEDATA\n\nCREATE TABLE equipment_inventory (\n  equip_id INT PRIMARY KEY,\n  equip_name VARCHAR(255) NOT NULL,\n  equip_quantity INT NOT NULL\n);\n\n\nCREATE TABLE maintenance_records (\n  record_id INT PRIMARY KEY,\n  equip_id INT NOT NULL,\n  maintenance_date DATE NOT NULL,\n  maintenance_details TEXT\n);\n\n### STATEMENT\n\nSELECT equip_name, maintenance_date FROM equipment_inventory WHERE equip_id = ALL (SELECT equip_id FROM maintenance_records);",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM gym_equipment;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, manufacturer FROM gym_equipment;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, purchase_date FROM gym_equipment;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_id, maintenance_status FROM gym_equipment;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_id, quantity FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT quantity, location FROM equipment_inventory;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM maintenance_records;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_id, maintenance_date FROM maintenance_records;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT maintenance_type, maintenance_cost FROM maintenance_records;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, location FROM gym_equipment, equipment_inventory WHERE gym_equipment.equipment_id = equipment_inventory.equipment_id;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, maintenance_type FROM gym_equipment JOIN maintenance_records ON gym_equipment.equipment_id = maintenance_records.equipment_id;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_id, equipment_name, manufacturer FROM gym_equipment WHERE manufacturer = 'XYZ Corp';",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM gym_equipment WHERE maintenance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, location FROM gym_equipment, equipment_inventory WHERE gym_equipment.equipment_id = equipment_inventory.equipment_id AND location = 'Main Gym';",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT maintenance_date, maintenance_cost FROM maintenance_records WHERE maintenance_type = 'Preventive Maintenance';",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_id, quantity, last_inventory_date FROM equipment_inventory WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM maintenance_records WHERE maintenance_cost > 500;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, quantity, location FROM gym_equipment JOIN equipment_inventory ON gym_equipment.equipment_id = equipment_inventory.equipment_id;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, purchase_date, maintenance_date FROM gym_equipment, maintenance_records WHERE gym_equipment.equipment_id = maintenance_records.equipment_id;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM gym_equipment;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, manufacturer FROM gym_equipment WHERE maintenance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM gym_equipment JOIN equipment_inventory ON gym_equipment.equipment_id = equipment_inventory.equipment_id;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, COUNT(*) AS total_quantity FROM gym_equipment JOIN equipment_inventory ON gym_equipment.equipment_id = equipment_inventory.equipment_id GROUP BY equipment_name;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, maintenance_date FROM gym_equipment JOIN maintenance_records ON gym_equipment.equipment_id = maintenance_records.equipment_id;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, location FROM gym_equipment JOIN equipment_inventory ON gym_equipment.equipment_id = equipment_inventory.equipment_id WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, manufacturer, purchase_date FROM gym_equipment WHERE purchase_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, maintenance_cost FROM gym_equipment JOIN maintenance_records ON gym_equipment.equipment_id = maintenance_records.equipment_id WHERE maintenance_cost > 100;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, maintenance_date, maintenance_type FROM gym_equipment JOIN maintenance_records ON gym_equipment.equipment_id = maintenance_records.equipment_id WHERE maintenance_type = 'Routine';",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, manufacturer, purchase_date, maintenance_cost FROM gym_equipment JOIN maintenance_records ON gym_equipment.equipment_id = maintenance_records.equipment_id WHERE maintenance_cost > 500;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, location, last_inventory_date FROM gym_equipment JOIN equipment_inventory ON gym_equipment.equipment_id = equipment_inventory.equipment_id WHERE last_inventory_date < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, maintenance_date, maintenance_cost FROM gym_equipment JOIN maintenance_records ON gym_equipment.equipment_id = maintenance_records.equipment_id WHERE maintenance_cost BETWEEN 100 AND 500;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, quantity, location FROM gym_equipment JOIN equipment_inventory ON gym_equipment.equipment_id = equipment_inventory.equipment_id WHERE quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, manufacturer, last_inventory_date FROM gym_equipment JOIN equipment_inventory ON gym_equipment.equipment_id = equipment_inventory.equipment_id WHERE location = 'Main Gym';",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, maintenance_type FROM gym_equipment JOIN maintenance_records ON gym_equipment.equipment_id = maintenance_records.equipment_id WHERE maintenance_type = 'Emergency';",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, maintenance_date, maintenance_cost FROM gym_equipment JOIN maintenance_records ON gym_equipment.equipment_id = maintenance_records.equipment_id WHERE maintenance_cost < 50;",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, manufacturer, purchase_date FROM gym_equipment WHERE manufacturer LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, manufacturer, maintenance_type FROM gym_equipment JOIN maintenance_records ON gym_equipment.equipment_id = maintenance_records.equipment_id WHERE maintenance_type IN ('Preventive', 'Corrective');",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, maintenance_date, maintenance_cost FROM gym_equipment JOIN maintenance_records ON gym_equipment.equipment_id = maintenance_records.equipment_id WHERE maintenance_cost > 200 AND maintenance_type = 'Routine';",
  "### TABLEDATA\n\nCREATE TABLE gym_equipment (\n    equipment_id SERIAL PRIMARY KEY,\n    equipment_name VARCHAR(50) NOT NULL,\n    manufacturer VARCHAR(50),\n    purchase_date DATE,\n    maintenance_status BOOLEAN\n);\n\n\nCREATE TABLE equipment_inventory (\n    inventory_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    quantity INT,\n    location VARCHAR(50),\n    last_inventory_date DATE\n);\n\n\nCREATE TABLE maintenance_records (\n    record_id SERIAL PRIMARY KEY,\n    equipment_id INT REFERENCES gym_equipment(equipment_id),\n    maintenance_date DATE,\n    maintenance_type VARCHAR(50),\n    maintenance_cost DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT equipment_name, maintenance_date, maintenance_cost FROM gym_equipment JOIN maintenance_records ON gym_equipment.equipment_id = maintenance_records.equipment_id WHERE maintenance_date < '2022-09-01';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM equipment;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_name, purchase_date FROM equipment;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM maintenance_records;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT maintenance_date, technician_name, comments FROM maintenance_records;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT quantity, location FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_location;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_id, location_name FROM equipment_location;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_name, purchase_date, last_maintenance_date FROM equipment;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT record_id, equipment_id, maintenance_date, technician_name FROM maintenance_records;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, quantity FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT location_id, equipment_id, location_name FROM equipment_location;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM equipment WHERE equipment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_name, last_maintenance_date FROM equipment WHERE purchase_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM maintenance_records WHERE equipment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT technician_name, comments FROM maintenance_records WHERE maintenance_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_name, location FROM inventory WHERE location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM equipment_location WHERE capacity >= 100;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT location_name, capacity FROM equipment_location WHERE equipment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_name, purchase_date FROM equipment WHERE equipment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_name FROM equipment WHERE purchase_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_id, MAX(purchase_date) AS last_purchase_date FROM equipment GROUP BY equipment_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_name, purchase_date, comments FROM equipment INNER JOIN maintenance_records ON equipment.equipment_id = maintenance_records.equipment_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_name, COUNT(record_id) AS maintenance_count FROM equipment LEFT JOIN maintenance_records ON equipment.equipment_id = maintenance_records.equipment_id GROUP BY equipment_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_name, quantity FROM inventory WHERE location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_name FROM inventory WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_name, SUM(quantity) AS total_quantity FROM inventory GROUP BY item_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_name, location_name FROM equipment INNER JOIN equipment_location ON equipment.equipment_id = equipment_location.equipment_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT location_name, AVG(capacity) AS average_capacity FROM equipment_location GROUP BY location_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT technician_name, COUNT(record_id) AS maintenance_count FROM maintenance_records GROUP BY technician_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_name, MAX(purchase_date) AS latest_purchase_date FROM equipment GROUP BY equipment_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_name, MAX(quantity) AS max_quantity FROM inventory GROUP BY item_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_name, purchase_date, comments FROM equipment LEFT JOIN maintenance_records ON equipment.equipment_id = maintenance_records.equipment_id WHERE maintenance_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT location_name, SUM(capacity) AS total_capacity FROM equipment_location GROUP BY location_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_name, purchase_date, last_maintenance_date FROM equipment WHERE purchase_date < last_maintenance_date;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_name, purchase_date, comments FROM equipment INNER JOIN maintenance_records ON equipment.equipment_id = maintenance_records.equipment_id WHERE maintenance_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_name, location FROM inventory INNER JOIN equipment_location ON inventory.item_id = equipment_location.equipment_id;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_name, purchase_date FROM equipment WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n    equipment_id INT PRIMARY KEY,\n    equipment_name VARCHAR(50),\n    purchase_date DATE,\n    last_maintenance_date DATE\n);\n\nCREATE TABLE maintenance_records (\n    record_id INT PRIMARY KEY,\n    equipment_id INT,\n    maintenance_date DATE,\n    technician_name VARCHAR(50),\n    comments TEXT\n);\n\nCREATE TABLE inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT,\n    location VARCHAR(50)\n);\n\nCREATE TABLE equipment_location (\n    location_id INT PRIMARY KEY,\n    equipment_id INT,\n    location_name VARCHAR(50),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT equipment_name, MAX(purchase_date) AS last_purchase_date FROM equipment WHERE purchase_date < '2022-01-01' GROUP BY equipment_name;",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM equipment",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, equipment_type FROM equipment",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM maintenance_records",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_id, maintenance_date FROM maintenance_records",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT technician_name, description FROM maintenance_records",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM technicians",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT technician_name, specialization FROM technicians",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM locations",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT location_name, address FROM locations",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM maintenance_types",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT type_name, description FROM maintenance_types",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment WHERE location='Warehouse'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, purchase_date FROM equipment WHERE purchase_date > '2021-01-01'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT maintenance_date, technician_name FROM maintenance_records WHERE maintenance_date < '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT location_name, address FROM locations WHERE location_name='Headquarters'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment WHERE equipment_type='Machine'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, last_maintenance FROM equipment ORDER BY last_maintenance DESC",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT technician_name, description FROM maintenance_records ORDER BY maintenance_date ASC",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT location_name, address FROM locations WHERE location_name='Warehouse' ORDER BY address",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, equipment_type FROM equipment LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, purchase_date FROM equipment WHERE purchase_date >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, location FROM equipment WHERE location = 'Warehouse A'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, last_maintenance FROM equipment WHERE last_maintenance BETWEEN '2022-01-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, type_name FROM equipment INNER JOIN maintenance_records ON equipment.equipment_id = maintenance_records.equipment_id INNER JOIN maintenance_types ON maintenance_records.type_id = maintenance_types.type_id LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, maintenance_date FROM equipment INNER JOIN maintenance_records ON equipment.equipment_id = maintenance_records.equipment_id WHERE technician_name = 'John Doe'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, location_name FROM equipment INNER JOIN locations ON equipment.location = locations.location_name WHERE locations.address LIKE '%Street%'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM equipment WHERE equipment_name LIKE '%machine%'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, maintenance_date, technician_name FROM equipment INNER JOIN maintenance_records ON equipment.equipment_id = maintenance_records.equipment_id INNER JOIN technicians ON maintenance_records.technician_id = technicians.technician_id LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT technician_name, specialization FROM technicians ORDER BY specialization ASC",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT technician_name, specialization FROM technicians WHERE specialization = 'Electrical'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, location_name, address FROM equipment INNER JOIN locations ON equipment.location = locations.location_name WHERE locations.address = '123 Main St'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, maintenance_date, description FROM equipment INNER JOIN maintenance_records ON equipment.equipment_id = maintenance_records.equipment_id WHERE maintenance_records.description LIKE '%fault%'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, purchase_date, equipment_type, technician_name FROM equipment INNER JOIN maintenance_records ON equipment.equipment_id = maintenance_records.equipment_id INNER JOIN technicians ON maintenance_records.technician_id = technicians.technician_id WHERE technicians.specialization = 'Mechanical'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT location_name, COUNT(equipment_id) AS total_equipment FROM locations INNER JOIN equipment ON locations.location_name = equipment.location GROUP BY location_name ORDER BY total_equipment DESC",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, purchase_date FROM equipment WHERE purchase_date BETWEEN '2021-01-01' AND '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT location_name FROM locations",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, description FROM equipment LEFT JOIN maintenance_records ON equipment.equipment_id = maintenance_records.equipment_id AND maintenance_records.description IS NOT NULL LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, technician_name FROM equipment LEFT JOIN maintenance_records ON equipment.equipment_id = maintenance_records.equipment_id AND maintenance_records.description IS NULL LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE equipment (\n  equipment_id INT PRIMARY KEY,\n  equipment_name VARCHAR(255),\n  equipment_type VARCHAR(50),\n  purchase_date DATE,\n  location VARCHAR(100),\n  last_maintenance DATE\n)\n\nCREATE TABLE maintenance_records (\n  maintenance_id INT PRIMARY KEY,\n  equipment_id INT,\n  maintenance_date DATE,\n  technician_name VARCHAR(100),\n  description TEXT,\n  FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id)\n)\n\nCREATE TABLE technicians (\n  technician_id INT PRIMARY KEY,\n  technician_name VARCHAR(100),\n  specialization VARCHAR(100)\n)\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(100),\n  address VARCHAR(255)\n)\n\nCREATE TABLE maintenance_types (\n  type_id INT PRIMARY KEY,\n  type_name VARCHAR(50),\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT equipment_name, SUM(CASE WHEN technician_name = 'John Doe' THEN 1 ELSE 0 END) AS john_doe_maintenance_count, SUM(CASE WHEN technician_name = 'Alice Smith' THEN 1 ELSE 0 END) AS alice_smith_maintenance_count FROM equipment INNER JOIN maintenance_records ON equipment.equipment_id = maintenance_records.equipment_id GROUP BY equipment_name HAVING john_doe_maintenance_count > 0 AND alice_smith_maintenance_count > 0"
]