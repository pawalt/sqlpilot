<t>CREATE TABLE FitnessData ( 
 id INT PRIMARY KEY, 
 user_id INT, 
 workout_type VARCHAR(50), 
 workout_duration INT, 
 calories_burned INT 
);</t><s>REVOKE INSERT, UPDATE ON FitnessData TO user_role1;</s>
<t>CREATE TABLE FitnessData ( 
 id INT PRIMARY KEY, 
 user_id INT, 
 workout_type VARCHAR(50), 
 workout_duration INT, 
 calories_burned INT 
);</t><s>revoke insert, update on fitnessdata to user_role1;</s>
<t>CREATE TABLE FitnessData ( 
 id INT PRIMARY KEY, 
 user_id INT, 
 workout_type VARCHAR(50), 
 workout_duration INT, 
 calories_burned INT 
);</t><s>REVOKE SELECT ON FitnessData TO user_role2;</s>
<t>CREATE TABLE FitnessData ( 
 id INT PRIMARY KEY, 
 user_id INT, 
 workout_type VARCHAR(50), 
 workout_duration INT, 
 calories_burned INT 
);</t><s>revoke select on fitnessdata to user_role2;</s>
<t>CREATE TABLE FitnessData ( 
 id INT PRIMARY KEY, 
 user_id INT, 
 workout_type VARCHAR(50), 
 workout_duration INT, 
 calories_burned INT 
);</t><s>REVOKE DELETE ON FitnessData TO user_role3;</s>
<t>CREATE TABLE FitnessData ( 
 id INT PRIMARY KEY, 
 user_id INT, 
 workout_type VARCHAR(50), 
 workout_duration INT, 
 calories_burned INT 
);</t><s>revoke delete on fitnessdata to user_role3;</s>
<t>CREATE TABLE FitnessUser ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, gender VARCHAR(10) NOT NULL, height FLOAT, weight FLOAT )

CREATE TABLE FitnessActivity ( activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(50) NOT NULL, activity_date DATE, duration_minutes INT, calories_burned FLOAT, FOREIGN KEY (user_id) REFERENCES FitnessUser(user_id) )</t><s>REVOKE SELECT ON FitnessUser FROM user1</s>
<t>CREATE TABLE FitnessUser ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, gender VARCHAR(10) NOT NULL, height FLOAT, weight FLOAT )

CREATE TABLE FitnessActivity ( activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(50) NOT NULL, activity_date DATE, duration_minutes INT, calories_burned FLOAT, FOREIGN KEY (user_id) REFERENCES FitnessUser(user_id) )</t><s>revoke select on fitnessuser from user1</s>
<t>CREATE TABLE FitnessActivity ( activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(50) NOT NULL, activity_date DATE, duration_minutes INT, calories_burned FLOAT, FOREIGN KEY (user_id) REFERENCES FitnessUser(user_id) )

CREATE TABLE FitnessUser ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, gender VARCHAR(10) NOT NULL, height FLOAT, weight FLOAT )</t><s>REVOKE SELECT ON FitnessUser FROM user1</s>
<t>CREATE TABLE FitnessActivity ( activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(50) NOT NULL, activity_date DATE, duration_minutes INT, calories_burned FLOAT, FOREIGN KEY (user_id) REFERENCES FitnessUser(user_id) )

CREATE TABLE FitnessUser ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, gender VARCHAR(10) NOT NULL, height FLOAT, weight FLOAT )</t><s>revoke select on fitnessuser from user1</s>
<t>CREATE TABLE FitnessUser ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, gender VARCHAR(10) NOT NULL, height FLOAT, weight FLOAT )

CREATE TABLE FitnessActivity ( activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(50) NOT NULL, activity_date DATE, duration_minutes INT, calories_burned FLOAT, FOREIGN KEY (user_id) REFERENCES FitnessUser(user_id) )</t><s>REVOKE UPDATE ON FitnessActivity FROM user2</s>
<t>CREATE TABLE FitnessUser ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, gender VARCHAR(10) NOT NULL, height FLOAT, weight FLOAT )

CREATE TABLE FitnessActivity ( activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(50) NOT NULL, activity_date DATE, duration_minutes INT, calories_burned FLOAT, FOREIGN KEY (user_id) REFERENCES FitnessUser(user_id) )</t><s>revoke update on fitnessactivity from user2</s>
<t>CREATE TABLE FitnessActivity ( activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(50) NOT NULL, activity_date DATE, duration_minutes INT, calories_burned FLOAT, FOREIGN KEY (user_id) REFERENCES FitnessUser(user_id) )

CREATE TABLE FitnessUser ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, gender VARCHAR(10) NOT NULL, height FLOAT, weight FLOAT )</t><s>REVOKE UPDATE ON FitnessActivity FROM user2</s>
<t>CREATE TABLE FitnessActivity ( activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(50) NOT NULL, activity_date DATE, duration_minutes INT, calories_burned FLOAT, FOREIGN KEY (user_id) REFERENCES FitnessUser(user_id) )

CREATE TABLE FitnessUser ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, gender VARCHAR(10) NOT NULL, height FLOAT, weight FLOAT )</t><s>revoke update on fitnessactivity from user2</s>
<t>CREATE TABLE FitnessUser ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, gender VARCHAR(10) NOT NULL, height FLOAT, weight FLOAT )

CREATE TABLE FitnessActivity ( activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(50) NOT NULL, activity_date DATE, duration_minutes INT, calories_burned FLOAT, FOREIGN KEY (user_id) REFERENCES FitnessUser(user_id) )</t><s>REVOKE DELETE ON FitnessUser FROM user3</s>
<t>CREATE TABLE FitnessUser ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, gender VARCHAR(10) NOT NULL, height FLOAT, weight FLOAT )

CREATE TABLE FitnessActivity ( activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(50) NOT NULL, activity_date DATE, duration_minutes INT, calories_burned FLOAT, FOREIGN KEY (user_id) REFERENCES FitnessUser(user_id) )</t><s>revoke delete on fitnessuser from user3</s>
<t>CREATE TABLE FitnessActivity ( activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(50) NOT NULL, activity_date DATE, duration_minutes INT, calories_burned FLOAT, FOREIGN KEY (user_id) REFERENCES FitnessUser(user_id) )

CREATE TABLE FitnessUser ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, gender VARCHAR(10) NOT NULL, height FLOAT, weight FLOAT )</t><s>REVOKE DELETE ON FitnessUser FROM user3</s>
<t>CREATE TABLE FitnessActivity ( activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(50) NOT NULL, activity_date DATE, duration_minutes INT, calories_burned FLOAT, FOREIGN KEY (user_id) REFERENCES FitnessUser(user_id) )

CREATE TABLE FitnessUser ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, gender VARCHAR(10) NOT NULL, height FLOAT, weight FLOAT )</t><s>revoke delete on fitnessuser from user3</s>
<t>CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);</t><s>REVOKE SELECT, UPDATE ON workout_plan FROM public</s>
<t>CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);</t><s>revoke select, update on workout_plan from public</s>
<t>CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));</t><s>REVOKE SELECT, UPDATE ON workout_plan FROM public</s>
<t>CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));</t><s>revoke select, update on workout_plan from public</s>
<t>CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);</t><s>REVOKE SELECT, UPDATE ON workout_plan FROM public</s>
<t>CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);</t><s>revoke select, update on workout_plan from public</s>
<t>CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);</t><s>REVOKE SELECT, UPDATE ON workout_plan FROM public</s>
<t>CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);</t><s>revoke select, update on workout_plan from public</s>
<t>CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));</t><s>REVOKE SELECT, UPDATE ON workout_plan FROM public</s>
<t>CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));</t><s>revoke select, update on workout_plan from public</s>
<t>CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);</t><s>REVOKE SELECT, UPDATE ON workout_plan FROM public</s>
<t>CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);</t><s>revoke select, update on workout_plan from public</s>
<t>CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);</t><s>REVOKE DELETE ON exercise FROM public</s>
<t>CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);</t><s>revoke delete on exercise from public</s>
<t>CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));</t><s>REVOKE DELETE ON exercise FROM public</s>
<t>CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));</t><s>revoke delete on exercise from public</s>
<t>CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);</t><s>REVOKE DELETE ON exercise FROM public</s>
<t>CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);</t><s>revoke delete on exercise from public</s>
<t>CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);</t><s>REVOKE DELETE ON exercise FROM public</s>
<t>CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);</t><s>revoke delete on exercise from public</s>
<t>CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));</t><s>REVOKE DELETE ON exercise FROM public</s>
<t>CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));</t><s>revoke delete on exercise from public</s>
<t>CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);</t><s>REVOKE DELETE ON exercise FROM public</s>
<t>CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);</t><s>revoke delete on exercise from public</s>
<t>CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);</t><s>REVOKE INSERT, UPDATE, DELETE ON user_statistics FROM public</s>
<t>CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);</t><s>revoke insert, update, delete on user_statistics from public</s>
<t>CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));</t><s>REVOKE INSERT, UPDATE, DELETE ON user_statistics FROM public</s>
<t>CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));</t><s>revoke insert, update, delete on user_statistics from public</s>
<t>CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);</t><s>REVOKE INSERT, UPDATE, DELETE ON user_statistics FROM public</s>
<t>CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);</t><s>revoke insert, update, delete on user_statistics from public</s>
<t>CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);</t><s>REVOKE INSERT, UPDATE, DELETE ON user_statistics FROM public</s>
<t>CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);</t><s>revoke insert, update, delete on user_statistics from public</s>
<t>CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));</t><s>REVOKE INSERT, UPDATE, DELETE ON user_statistics FROM public</s>
<t>CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));</t><s>revoke insert, update, delete on user_statistics from public</s>
<t>CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);</t><s>REVOKE INSERT, UPDATE, DELETE ON user_statistics FROM public</s>
<t>CREATE TABLE user_statistics (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, age INT, height FLOAT, weight FLOAT, workout_days INT);

CREATE TABLE exercise (exercise_id INT PRIMARY KEY, exercise_name VARCHAR(255) NOT NULL, muscle_group VARCHAR(100), difficulty_level ENUM('Beginner', 'Intermediate', 'Advanced'));

CREATE TABLE workout_plan (plan_id INT PRIMARY KEY, plan_name VARCHAR(255) NOT NULL, plan_description TEXT, plan_duration INT);</t><s>revoke insert, update, delete on user_statistics from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE INSERT ON workouts FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke insert on workouts from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>REVOKE UPDATE ON exercises FROM public</s>
<t>CREATE TABLE fitness_logs (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_id UUID REFERENCES workouts(id),
  exercise_id UUID REFERENCES exercises(id),
  date DATE NOT NULL,
  sets INT,
  reps INT
);

CREATE TABLE exercises (
  id UUID PRIMARY KEY,
  exercise_name VARCHAR(50) NOT NULL,
  muscle_group VARCHAR(50) NOT NULL
);

CREATE TABLE workouts (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES users(id),
  workout_type VARCHAR(50) NOT NULL,
  duration INTERVAL
);

CREATE TABLE users (
  id UUID PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  age INT
);</t><s>revoke update on exercises from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE INSERT, UPDATE ON users FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke insert, update on users from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE SELECT, DELETE ON activities FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke select, delete on activities from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>REVOKE ALL ON workouts FROM public</s>
<t>CREATE TABLE progress (
    progress_id SERIAL PRIMARY KEY,
    goal_id INT NOT NULL,
    progress INT,
    date DATE NOT NULL,
    FOREIGN KEY (goal_id) REFERENCES goals(goal_id)
);

CREATE TABLE goals (
    goal_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    target INT,
    deadline DATE,
    created_at TIMESTAMP NOT NULL,
    completed BOOLEAN NOT NULL
);

CREATE TABLE workouts (
    workout_id SERIAL PRIMARY KEY,
    user_id UUID NOT NULL,
    activity_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    duration INTERVAL,
    calories_burned INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (activity_id) REFERENCES activities(activity_id)
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    activity_name VARCHAR(50) NOT NULL,
    description TEXT,
    difficulty_level INT,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age INT,
    gender VARCHAR(10),
    created_at TIMESTAMP NOT NULL
);</t><s>revoke all on workouts from public</s>
