[
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (1, 'John Doe', 'john.doe@example.com', 'Standard', '2022-01-01') ON CONFLICT (member_id) DO UPDATE SET member_name = 'John Doe', member_email = 'john.doe@example.com', membership_type = 'Standard', join_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (2, 'Jane Smith', 'jane.smith@example.com', 'Premium', '2022-02-01') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Jane Smith', member_email = 'jane.smith@example.com', membership_type = 'Premium', join_date = '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', 'Standard', '2022-03-01') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Alice Johnson', member_email = 'alice.johnson@example.com', membership_type = 'Standard', join_date = '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (4, 'Bob Williams', 'bob.williams@example.com', 'Premium', '2022-04-01') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Bob Williams', member_email = 'bob.williams@example.com', membership_type = 'Premium', join_date = '2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (5, 'Eve Brown', 'eve.brown@example.com', 'Standard', '2022-05-01') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Eve Brown', member_email = 'eve.brown@example.com', membership_type = 'Standard', join_date = '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (6, 'Charlie Davis', 'charlie.davis@example.com', 'Premium', '2022-06-01') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Charlie Davis', member_email = 'charlie.davis@example.com', membership_type = 'Premium', join_date = '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (7, 'Grace Lee', 'grace.lee@example.com', 'Standard', '2022-07-01') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Grace Lee', member_email = 'grace.lee@example.com', membership_type = 'Standard', join_date = '2022-07-01';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (8, 'Sam Taylor', 'sam.taylor@example.com', 'Premium', '2022-08-01') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Sam Taylor', member_email = 'sam.taylor@example.com', membership_type = 'Premium', join_date = '2022-08-01';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (9, 'Olivia Martin', 'olivia.martin@example.com', 'Standard', '2022-09-01') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Olivia Martin', member_email = 'olivia.martin@example.com', membership_type = 'Standard', join_date = '2022-09-01';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (10, 'Mike Rodriguez', 'mike.rodriguez@example.com', 'Premium', '2022-10-01') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Mike Rodriguez', member_email = 'mike.rodriguez@example.com', membership_type = 'Premium', join_date = '2022-10-01';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (11, 'Sarah Garcia', 'sarah.garcia@example.com', 'Standard', '2022-01-11') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Sarah Garcia', member_email = 'sarah.garcia@example.com', membership_type = 'Standard', join_date = '2022-01-11';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (12, 'Peter Martinez', 'peter.martinez@example.com', 'Premium', '2022-01-12') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Peter Martinez', member_email = 'peter.martinez@example.com', membership_type = 'Premium', join_date = '2022-01-12';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (13, 'Emily Hernandez', 'emily.hernandez@example.com', 'Standard', '2022-01-13') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Emily Hernandez', member_email = 'emily.hernandez@example.com', membership_type = 'Standard', join_date = '2022-01-13';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (14, 'David Lopez', 'david.lopez@example.com', 'Premium', '2022-01-14') ON CONFLICT (member_id) DO UPDATE SET member_name = 'David Lopez', member_email = 'david.lopez@example.com', membership_type = 'Premium', join_date = '2022-01-14';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (15, 'Natalie Young', 'natalie.young@example.com', 'Standard', '2022-01-15') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Natalie Young', member_email = 'natalie.young@example.com', membership_type = 'Standard', join_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (16, 'Alexis Scott', 'alexis.scott@example.com', 'Premium', '2022-01-16') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Alexis Scott', member_email = 'alexis.scott@example.com', membership_type = 'Premium', join_date = '2022-01-16';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (17, 'Ryan King', 'ryan.king@example.com', 'Standard', '2022-01-17') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Ryan King', member_email = 'ryan.king@example.com', membership_type = 'Standard', join_date = '2022-01-17';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (18, 'Megan Baker', 'megan.baker@example.com', 'Premium', '2022-01-18') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Megan Baker', member_email = 'megan.baker@example.com', membership_type = 'Premium', join_date = '2022-01-18';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (19, 'Kevin Hill', 'kevin.hill@example.com', 'Standard', '2022-01-19') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Kevin Hill', member_email = 'kevin.hill@example.com', membership_type = 'Standard', join_date = '2022-01-19';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (20, 'Jessica Adams', 'jessica.adams@example.com', 'Premium', '2022-01-20') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Jessica Adams', member_email = 'jessica.adams@example.com', membership_type = 'Premium', join_date = '2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (1, 'John Doe', 'john.doe@example.com', 'Premium', '2022-01-01') ON CONFLICT (member_id) DO UPDATE SET member_name='John Doe', member_email='john.doe@example.com', membership_type='Premium', join_date='2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (2, 'Alice Smith', 'alice.smith@example.com', 'Standard', '2022-02-15') ON CONFLICT (member_id) DO UPDATE SET member_name='Alice Smith', member_email='alice.smith@example.com', membership_type='Standard', join_date='2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (3, 'Bob Johnson', 'bob.johnson@example.com', 'Premium', '2022-03-10') ON CONFLICT (member_id) DO UPDATE SET member_name='Bob Johnson', member_email='bob.johnson@example.com', membership_type='Premium', join_date='2022-03-10';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (4, 'Sarah Brown', 'sarah.brown@example.com', 'Standard', '2022-04-20') ON CONFLICT (member_id) DO UPDATE SET member_name='Sarah Brown', member_email='sarah.brown@example.com', membership_type='Standard', join_date='2022-04-20';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (5, 'Michael Davis', 'michael.davis@example.com', 'Premium', '2022-05-05') ON CONFLICT (member_id) DO UPDATE SET member_name='Michael Davis', member_email='michael.davis@example.com', membership_type='Premium', join_date='2022-05-05';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (6, 'Emma Wilson', 'emma.wilson@example.com', 'Standard', '2022-06-12') ON CONFLICT (member_id) DO UPDATE SET member_name='Emma Wilson', member_email='emma.wilson@example.com', membership_type='Standard', join_date='2022-06-12';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (7, 'Mark Thompson', 'mark.thompson@example.com', 'Premium', '2022-07-30') ON CONFLICT (member_id) DO UPDATE SET member_name='Mark Thompson', member_email='mark.thompson@example.com', membership_type='Premium', join_date='2022-07-30';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (8, 'Linda Rodriguez', 'linda.rodriguez@example.com', 'Standard', '2022-08-18') ON CONFLICT (member_id) DO UPDATE SET member_name='Linda Rodriguez', member_email='linda.rodriguez@example.com', membership_type='Standard', join_date='2022-08-18';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (9, 'Kevin Lee', 'kevin.lee@example.com', 'Premium', '2022-09-25') ON CONFLICT (member_id) DO UPDATE SET member_name='Kevin Lee', member_email='kevin.lee@example.com', membership_type='Premium', join_date='2022-09-25';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (10, 'Jennifer Martinez', 'jennifer.martinez@example.com', 'Standard', '2022-10-10') ON CONFLICT (member_id) DO UPDATE SET member_name='Jennifer Martinez', member_email='jennifer.martinez@example.com', membership_type='Standard', join_date='2022-10-10';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (11, 'David Brown', 'david.brown@example.com', 'Premium', '2022-11-22') ON CONFLICT (member_id) DO UPDATE SET member_name='David Brown', member_email='david.brown@example.com', membership_type='Premium', join_date='2022-11-22';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (12, 'Jessica Garcia', 'jessica.garcia@example.com', 'Standard', '2022-12-05') ON CONFLICT (member_id) DO UPDATE SET member_name='Jessica Garcia', member_email='jessica.garcia@example.com', membership_type='Standard', join_date='2022-12-05';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (13, 'Brian Wilson', 'brian.wilson@example.com', 'Premium', '2022-01-15') ON CONFLICT (member_id) DO UPDATE SET member_name='Brian Wilson', member_email='brian.wilson@example.com', membership_type='Premium', join_date='2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (14, 'Karen Anderson', 'karen.anderson@example.com', 'Standard', '2022-02-28') ON CONFLICT (member_id) DO UPDATE SET member_name='Karen Anderson', member_email='karen.anderson@example.com', membership_type='Standard', join_date='2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (15, 'Paula Clark', 'paula.clark@example.com', 'Premium', '2022-03-08') ON CONFLICT (member_id) DO UPDATE SET member_name='Paula Clark', member_email='paula.clark@example.com', membership_type='Premium', join_date='2022-03-08';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (16, 'George Adams', 'george.adams@example.com', 'Standard', '2022-04-12') ON CONFLICT (member_id) DO UPDATE SET member_name='George Adams', member_email='george.adams@example.com', membership_type='Standard', join_date='2022-04-12';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (17, 'Caroline Perez', 'caroline.perez@example.com', 'Premium', '2022-05-20') ON CONFLICT (member_id) DO UPDATE SET member_name='Caroline Perez', member_email='caroline.perez@example.com', membership_type='Premium', join_date='2022-05-20';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (18, 'Scott Nelson', 'scott.nelson@example.com', 'Standard', '2022-06-30') ON CONFLICT (member_id) DO UPDATE SET member_name='Scott Nelson', member_email='scott.nelson@example.com', membership_type='Standard', join_date='2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (19, 'Diane Murphy', 'diane.murphy@example.com', 'Premium', '2022-07-10') ON CONFLICT (member_id) DO UPDATE SET member_name='Diane Murphy', member_email='diane.murphy@example.com', membership_type='Premium', join_date='2022-07-10';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO membership_info (member_id, member_name, member_email, membership_type, join_date) VALUES (20, 'Eric Taylor', 'eric.taylor@example.com', 'Standard', '2022-08-25') ON CONFLICT (member_id) DO UPDATE SET member_name='Eric Taylor', member_email='eric.taylor@example.com', membership_type='Standard', join_date='2022-08-25';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('1', 'Alice', 'alice@example.com', '123-456-7890') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Alice', member_email = 'alice@example.com', member_phone = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('2', 'Bob', 'bob@example.com', '987-654-3210') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Bob', member_email = 'bob@example.com', member_phone = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('3', 'Charlie', 'charlie@example.com', '555-555-5555') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Charlie', member_email = 'charlie@example.com', member_phone = '555-555-5555';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('4', 'David', 'david@example.com', '777-777-7777') ON CONFLICT (member_id) DO UPDATE SET member_name = 'David', member_email = 'david@example.com', member_phone = '777-777-7777';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('5', 'Eve', 'eve@example.com', '888-888-8888') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Eve', member_email = 'eve@example.com', member_phone = '888-888-8888';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('6', 'Frank', 'frank@example.com', '999-999-9999') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Frank', member_email = 'frank@example.com', member_phone = '999-999-9999';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('7', 'Grace', 'grace@example.com', '666-666-6666') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Grace', member_email = 'grace@example.com', member_phone = '666-666-6666';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('8', 'Harry', 'harry@example.com', '111-111-1111') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Harry', member_email = 'harry@example.com', member_phone = '111-111-1111';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('9', 'Ivy', 'ivy@example.com', '222-222-2222') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Ivy', member_email = 'ivy@example.com', member_phone = '222-222-2222';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('10', 'Jack', 'jack@example.com', '333-333-3333') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Jack', member_email = 'jack@example.com', member_phone = '333-333-3333';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('11', 'Kelly', 'kelly@example.com', '444-444-4444') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Kelly', member_email = 'kelly@example.com', member_phone = '444-444-4444';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('12', 'Leo', 'leo@example.com', '555-555-5555') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Leo', member_email = 'leo@example.com', member_phone = '555-555-5555';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('13', 'Mary', 'mary@example.com', '666-666-6666') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Mary', member_email = 'mary@example.com', member_phone = '666-666-6666';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('14', 'Nick', 'nick@example.com', '777-777-7777') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Nick', member_email = 'nick@example.com', member_phone = '777-777-7777';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('15', 'Olivia', 'olivia@example.com', '888-888-8888') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Olivia', member_email = 'olivia@example.com', member_phone = '888-888-8888';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('16', 'Peter', 'peter@example.com', '999-999-9999') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Peter', member_email = 'peter@example.com', member_phone = '999-999-9999';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('17', 'Quinn', 'quinn@example.com', '123-456-7890') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Quinn', member_email = 'quinn@example.com', member_phone = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('18', 'Rachel', 'rachel@example.com', '987-654-3210') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Rachel', member_email = 'rachel@example.com', member_phone = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('19', 'Sam', 'sam@example.com', '555-555-5555') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Sam', member_email = 'sam@example.com', member_phone = '555-555-5555';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('20', 'Tom', 'tom@example.com', '777-777-7777') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Tom', member_email = 'tom@example.com', member_phone = '777-777-7777';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('123e4567-e89b-12d3-a456-426614174001', 'Alice', 'alice@example.com', '123-456-7890') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Alice', member_email = 'alice@example.com', member_phone = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('223e4567-e89b-12d3-a456-426614174002', 'Bob', 'bob@example.com', '456-789-1234') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Bob', member_email = 'bob@example.com', member_phone = '456-789-1234';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('323e4567-e89b-12d3-a456-426614174003', 'Charlie', 'charlie@example.com', '789-123-4567') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Charlie', member_email = 'charlie@example.com', member_phone = '789-123-4567';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('423e4567-e89b-12d3-a456-426614174004', 'David', 'david@example.com', '111-222-3333') ON CONFLICT (member_id) DO UPDATE SET member_name = 'David', member_email = 'david@example.com', member_phone = '111-222-3333';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('523e4567-e89b-12d3-a456-426614174005', 'Eve', 'eve@example.com', '444-555-6666') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Eve', member_email = 'eve@example.com', member_phone = '444-555-6666';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('623e4567-e89b-12d3-a456-426614174006', 'Frank', 'frank@example.com', '777-888-9999') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Frank', member_email = 'frank@example.com', member_phone = '777-888-9999';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('723e4567-e89b-12d3-a456-426614174007', 'Grace', 'grace@example.com', '000-111-2222') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Grace', member_email = 'grace@example.com', member_phone = '000-111-2222';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('823e4567-e89b-12d3-a456-426614174008', 'Henry', 'henry@example.com', '333-444-5555') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Henry', member_email = 'henry@example.com', member_phone = '333-444-5555';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('923e4567-e89b-12d3-a456-426614174009', 'Isabel', 'isabel@example.com', '666-777-8888') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Isabel', member_email = 'isabel@example.com', member_phone = '666-777-8888';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('a23e4567-e89b-12d3-a456-426614174010', 'Jack', 'jack@example.com', '999-000-1111') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Jack', member_email = 'jack@example.com', member_phone = '999-000-1111';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('b23e4567-e89b-12d3-a456-426614174011', 'Katie', 'katie@example.com', '222-333-4444') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Katie', member_email = 'katie@example.com', member_phone = '222-333-4444';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('c23e4567-e89b-12d3-a456-426614174012', 'Liam', 'liam@example.com', '555-666-7777') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Liam', member_email = 'liam@example.com', member_phone = '555-666-7777';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('d23e4567-e89b-12d3-a456-426614174013', 'Mia', 'mia@example.com', '888-999-0000') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Mia', member_email = 'mia@example.com', member_phone = '888-999-0000';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('e23e4567-e89b-12d3-a456-426614174014', 'Noah', 'noah@example.com', '111-222-3333') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Noah', member_email = 'noah@example.com', member_phone = '111-222-3333';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('f23e4567-e89b-12d3-a456-426614174015', 'Olivia', 'olivia@example.com', '444-555-6666') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Olivia', member_email = 'olivia@example.com', member_phone = '444-555-6666';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('g23e4567-e89b-12d3-a456-426614174016', 'Peter', 'peter@example.com', '777-888-9999') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Peter', member_email = 'peter@example.com', member_phone = '777-888-9999';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('h23e4567-e89b-12d3-a456-426614174017', 'Quinn', 'quinn@example.com', '000-111-2222') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Quinn', member_email = 'quinn@example.com', member_phone = '000-111-2222';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('i23e4567-e89b-12d3-a456-426614174018', 'Ryan', 'ryan@example.com', '333-444-5555') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Ryan', member_email = 'ryan@example.com', member_phone = '333-444-5555';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('j23e4567-e89b-12d3-a456-426614174019', 'Sara', 'sara@example.com', '666-777-8888') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Sara', member_email = 'sara@example.com', member_phone = '666-777-8888';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, member_phone) VALUES ('k23e4567-e89b-12d3-a456-426614174020', 'Thomas', 'thomas@example.com', '999-000-1111') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Thomas', member_email = 'thomas@example.com', member_phone = '999-000-1111';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (1, 'John Doe', 'john.doe@example.com', '2022-01-01') ON CONFLICT (member_id) DO UPDATE SET member_name = excluded.member_name, member_email = excluded.member_email, membership_start_date = excluded.membership_start_date;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (1, 1, '2022-01-15', 100.00) ON CONFLICT (payment_id) DO UPDATE SET member_id = excluded.member_id, payment_date = excluded.payment_date, payment_amount = excluded.payment_amount;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (1, 1, 'Gold', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = excluded.member_id, membership_type = excluded.membership_type, membership_status = excluded.membership_status;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '2022-02-01') ON CONFLICT (member_id) DO UPDATE SET member_name = excluded.member_name, member_email = excluded.member_email, membership_start_date = excluded.membership_start_date;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (2, 2, '2022-02-15', 150.00) ON CONFLICT (payment_id) DO UPDATE SET member_id = excluded.member_id, payment_date = excluded.payment_date, payment_amount = excluded.payment_amount;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (2, 2, 'Silver', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = excluded.member_id, membership_type = excluded.membership_type, membership_status = excluded.membership_status;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (3, 'Alice Brown', 'alice.brown@example.com', '2022-03-01') ON CONFLICT (member_id) DO UPDATE SET member_name = excluded.member_name, member_email = excluded.member_email, membership_start_date = excluded.membership_start_date;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (3, 3, '2022-03-15', 200.00) ON CONFLICT (payment_id) DO UPDATE SET member_id = excluded.member_id, payment_date = excluded.payment_date, payment_amount = excluded.payment_amount;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (3, 3, 'Bronze', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = excluded.member_id, membership_type = excluded.membership_type, membership_status = excluded.membersship_status;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (4, 'David Johnson', 'david.johnson@example.com', '2022-04-01') ON CONFLICT (member_id) DO UPDATE SET member_name = excluded.member_name, member_email = excluded.member_email, membership_start_date = excluded.membership_start_date;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (4, 4, '2022-04-15', 120.00) ON CONFLICT (payment_id) DO UPDATE SET member_id = excluded.member_id, payment_date = excluded.payment_date, payment_amount = excluded.payment_amount;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (4, 4, 'Platinum', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = excluded.member_id, membership_type = excluded.membership_type, membership_status = excluded.membership_status;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (5, 'Emma Wilson', 'emma.wilson@example.com', '2022-05-01') ON CONFLICT (member_id) DO UPDATE SET member_name = excluded.member_name, member_email = excluded.member_email, membership_start_date = excluded.membership_start_date;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (5, 5, '2022-05-15', 180.00) ON CONFLICT (payment_id) DO UPDATE SET member_id = excluded.member_id, payment_date = excluded.payment_date, payment_amount = excluded.payment_amount;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (5, 5, 'Basic', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = excluded.member_id, membership_type = excluded.membership_type, membership_status = excluded.membership_status;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (6, 'Michael Brown', 'michael.brown@example.com', '2022-06-01') ON CONFLICT (member_id) DO UPDATE SET member_name = excluded.member_name, member_email = excluded.member_email, membership_start_date = excluded.membership_start_date;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (6, 6, '2022-06-15', 130.00) ON CONFLICT (payment_id) DO UPDATE SET member_id = excluded.member_id, payment_date = excluded.payment_date, payment_amount = excluded.payment_amount;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (6, 6, 'Gold', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = excluded.member_id, membership_type = excluded.membership_type, membership_status = excluded.membership_status;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (7, 'Olivia Smith', 'olivia.smith@example.com', '2022-07-01') ON CONFLICT (member_id) DO UPDATE SET member_name = excluded.member_name, member_email = excluded.member_email, membership_start_date = excluded.membership_start_date;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (7, 7, '2022-07-15', 140.00) ON CONFLICT (payment_id) DO UPDATE SET member_id = excluded.member_id, payment_date = excluded.payment_date, payment_amount = excluded.payment_amount;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (7, 7, 'Silver', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = excluded.member_id, membership_type = excluded.membership_type, membership_status = excluded.membership_status;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (8, 'James Wilson', 'james.wilson@example.com', '2022-08-01') ON CONFLICT (member_id) DO UPDATE SET member_name = excluded.member_name, member_email = excluded.member_email, membership_start_date = excluded.membership_start_date;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (8, 8, '2022-08-15', 160.00) ON CONFLICT (payment_id) DO UPDATE SET member_id = excluded.member_id, payment_date = excluded.payment_date, payment_amount = excluded.payment_amount;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (8, 8, 'Bronze', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = excluded.member_id, membership_type = excluded.membership_type, membership_status = excluded.membership_status;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (9, 'Sophia Johnson', 'sophia.johnson@example.com', '2022-09-01') ON CONFLICT (member_id) DO UPDATE SET member_name = excluded.member_name, member_email = excluded.member_email, membership_start_date = excluded.membership_start_date;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (9, 9, '2022-09-15', 190.00) ON CONFLICT (payment_id) DO UPDATE SET member_id = excluded.member_id, payment_date = excluded.payment_date, payment_amount = excluded.payment_amount;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (9, 9, 'Platinum', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = excluded.member_id, membership_type = excluded.membership_type, membership_status = excluded.membership_status;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (10, 'William Wilson', 'william.wilson@example.com', '2022-10-01') ON CONFLICT (member_id) DO UPDATE SET member_name = excluded.member_name, member_email = excluded.member_email, membership_start_date = excluded.membership_start_date;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (10, 10, '2022-10-15', 170.00) ON CONFLICT (payment_id) DO UPDATE SET member_id = excluded.member_id, payment_date = excluded.payment_date, payment_amount = excluded.payment_amount;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (10, 10, 'Silver', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = excluded.member_id, membership_type = excluded.membership_type, membership_status = excluded.membership_status;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (1, 'John Doe', 'john.doe@example.com', '2021-01-01') ON CONFLICT (member_id) DO UPDATE SET member_name = 'John Doe', member_email = 'john.doe@example.com', membership_start_date = '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (1, 1, '2021-01-01', 100.00) ON CONFLICT (payment_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (1, 1, 'Gold', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = 1, membership_type = 'Gold', membership_status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (2, 'Alice Smith', 'alice.smith@example.com', '2022-02-02') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Alice Smith', member_email = 'alice.smith@example.com', membership_start_date = '2022-02-02';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (2, 2, '2022-02-02', 150.00) ON CONFLICT (payment_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (2, 2, 'Silver', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = 2, membership_type = 'Silver', membership_status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (3, 'Emma Johnson', 'emma.johnson@example.com', '2023-03-03') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Emma Johnson', member_email = 'emma.johnson@example.com', membership_start_date = '2023-03-03';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (3, 3, '2023-03-03', 200.00) ON CONFLICT (payment_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (3, 3, 'Bronze', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = 3, membership_type = 'Bronze', membership_status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (4, 'Michael Brown', 'michael.brown@example.com', '2024-04-04') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Michael Brown', member_email = 'michael.brown@example.com', membership_start_date = '2024-04-04';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (4, 4, '2024-04-04', 250.00) ON CONFLICT (payment_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (4, 4, 'Platinum', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = 4, membership_type = 'Platinum', membership_status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO members (member_id, member_name, member_email, membership_start_date) VALUES (5, 'Sarah Wilson', 'sarah.wilson@example.com', '2025-05-05') ON CONFLICT (member_id) DO UPDATE SET member_name = 'Sarah Wilson', member_email = 'sarah.wilson@example.com', membership_start_date = '2025-05-05';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, member_id, payment_date, payment_amount) VALUES (5, 5, '2025-05-05', 300.00) ON CONFLICT (payment_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO memberships (membership_id, member_id, membership_type, membership_status) VALUES (5, 5, 'Basic', 'Active') ON CONFLICT (membership_id) DO UPDATE SET member_id = 5, membership_type = 'Basic', membership_status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nINSERT INTO members (id, name, email, join_date) VALUES (1, 'John Doe', 'johndoe@example.com', '2022-01-01') ON CONFLICT (id) DO UPDATE SET name = 'John Doe', email = 'johndoe@example.com', join_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nINSERT INTO subscriptions (subscription_id, member_id, start_date, end_date, payment_status) VALUES (1, 1, '2022-01-01', '2022-12-31', 'PAID') ON CONFLICT (subscription_id) DO UPDATE SET member_id = 1, start_date = '2022-01-01', end_date = '2022-12-31', payment_status = 'PAID';",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, subscription_id, amount, payment_date) VALUES (1, 1, 100.00, '2022-01-15') ON CONFLICT (payment_id) DO UPDATE SET subscription_id = 1, amount = 100.00, payment_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nINSERT INTO payment_logs (log_id, payment_id, log_date, log_message) VALUES (1, 1, '2022-01-15 10:00:00', 'Payment processed successfully') ON CONFLICT (log_id) DO UPDATE SET payment_id = 1, log_date = '2022-01-15 10:00:00', log_message = 'Payment processed successfully';",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nINSERT INTO members (id, name, email, join_date) VALUES (1, 'John Doe', 'john.doe@example.com', '2022-01-01') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com'",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nINSERT INTO subscriptions (subscription_id, member_id, start_date, end_date, payment_status) VALUES (1, 1, '2022-01-01', '2022-12-31', 'Paid') ON DUPLICATE KEY UPDATE member_id = 1, start_date = '2022-01-01', end_date = '2022-12-31', payment_status = 'Paid'",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, subscription_id, amount, payment_date) VALUES (1, 1, 100.00, '2022-01-15') ON DUPLICATE KEY UPDATE subscription_id = 1, amount = 100.00, payment_date = '2022-01-15'",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nINSERT INTO payment_logs (log_id, payment_id, log_date, log_message) VALUES (1, 1, '2022-01-15 10:00:00', 'Payment processed successfully') ON DUPLICATE KEY UPDATE payment_id = 1, log_date = '2022-01-15 10:00:00', log_message = 'Payment processed successfully'",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO members (first_name, last_name, email) VALUES ('John', 'Doe', 'john.doe@example.com') ON CONFLICT (email) DO UPDATE SET first_name = 'John', last_name = 'Doe';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO members (first_name, last_name, email) VALUES ('Jane', 'Smith', 'jane.smith@example.com') ON CONFLICT (email) DO UPDATE SET first_name = 'Jane', last_name = 'Smith';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO membership_levels (level_name, monthly_fee) VALUES ('Basic', 10.00) ON CONFLICT (level_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO membership_levels (level_name, monthly_fee) VALUES ('Premium', 20.00) ON CONFLICT (level_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO payments (member_id, amount, payment_date) VALUES (1, 50.00, '2022-06-15') ON CONFLICT DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO payments (member_id, amount, payment_date) VALUES (2, 100.00, '2022-06-20') ON CONFLICT DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO invoices (member_id, amount_due, status, due_date) VALUES (1, 25.00, 'Pending', '2022-07-01') ON CONFLICT DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO invoices (member_id, amount_due, status, due_date) VALUES (2, 50.00, 'Paid', '2022-06-30') ON CONFLICT DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO registration_history (member_id, registration_date, status) VALUES (1, '2022-06-01', 'Active') ON CONFLICT DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO registration_history (member_id, registration_date, status) VALUES (2, '2022-06-05', 'Active') ON CONFLICT DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO members (first_name, last_name, email) VALUES ('John', 'Doe', 'john.doe@example.com') ON CONFLICT (email) DO UPDATE SET first_name = 'John', last_name = 'Doe';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO membership_levels (level_name, monthly_fee) VALUES ('Gold', 50.00) ON CONFLICT (level_name) DO UPDATE SET monthly_fee = 50.00;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO payments (member_id, amount, payment_date) VALUES (1, 100.00, '2022-09-30') ON CONFLICT (member_id, payment_date) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO invoices (member_id, amount_due, status, due_date) VALUES (1, 50.00, 'Pending', '2022-10-15') ON CONFLICT (member_id) DO UPDATE SET amount_due = 50.00, status = 'Pending', due_date = '2022-10-15';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO registration_history (member_id, registration_date, status) VALUES (1, '2022-09-15', 'Active') ON CONFLICT (member_id, registration_date) DO UPDATE SET status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO members (first_name, last_name, email) VALUES ('Jane', 'Smith', 'jane.smith@example.com') ON CONFLICT (email) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO membership_levels (level_name, monthly_fee) VALUES ('Silver', 30.00) ON CONFLICT (level_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO payments (member_id, amount, payment_date) VALUES (2, 75.00, '2022-09-25') ON CONFLICT (member_id, payment_date) DO UPDATE SET amount = 75.00;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO invoices (member_id, amount_due, status, due_date) VALUES (2, 25.00, 'Paid', '2022-10-01') ON CONFLICT (member_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO registration_history (member_id, registration_date, status) VALUES (2, '2022-09-20', 'Active') ON CONFLICT (member_id, registration_date) DO UPDATE SET status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO members (first_name, last_name, email) VALUES ('Alice', 'Johnson', 'alice.johnson@example.com') ON CONFLICT (email) DO UPDATE SET first_name = 'Alice', last_name = 'Johnson';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO membership_levels (level_name, monthly_fee) VALUES ('Diamond', 100.00) ON CONFLICT (level_name) DO UPDATE SET monthly_fee = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO payments (member_id, amount, payment_date) VALUES (3, 200.00, '2022-09-28') ON CONFLICT (member_id, payment_date) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO invoices (member_id, amount_due, status, due_date) VALUES (3, 150.00, 'Pending', '2022-10-10') ON CONFLICT (member_id) DO UPDATE SET amount_due = 150.00, status = 'Pending', due_date = '2022-10-10';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO registration_history (member_id, registration_date, status) VALUES (3, '2022-09-18', 'Active') ON CONFLICT (member_id, registration_date) DO UPDATE SET status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO members (first_name, last_name, email) VALUES ('Chris', 'Brown', 'chris.brown@example.com') ON CONFLICT (email) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO membership_levels (level_name, monthly_fee) VALUES ('Bronze', 20.00) ON CONFLICT (level_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO payments (member_id, amount, payment_date) VALUES (4, 60.00, '2022-09-21') ON CONFLICT (member_id, payment_date) DO UPDATE SET amount = 60.00;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO invoices (member_id, amount_due, status, due_date) VALUES (4, 40.00, 'Paid', '2022-09-25') ON CONFLICT (member_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nINSERT INTO registration_history (member_id, registration_date, status) VALUES (4, '2022-09-25', 'Active') ON CONFLICT (member_id, registration_date) DO UPDATE SET status = 'Active';"
]