[
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM membership_info WHERE member_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM membership_info WHERE member_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM membership_info WHERE membership_type = 'premium';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM membership_info WHERE member_id = 101 AND join_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM membership_info WHERE membership_type = 'Premium' AND member_email LIKE '%@example.com%';",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nDELETE FROM membership_info WHERE member_id IN (SELECT member_id FROM membership_info WHERE membership_type = 'Basic' AND join_date < '2021-06-01');",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM members WHERE member_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM payments WHERE payment_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM payments WHERE member_id = '123e4567-e89b-12d3-a456-426614174002';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM members WHERE member_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM payments WHERE payment_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM members WHERE member_id IN (SELECT member_id FROM payments WHERE payment_amount > 1000);",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nDELETE FROM members WHERE member_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nDELETE FROM payments WHERE payment_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nDELETE FROM memberships WHERE membership_id = 200;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nDELETE FROM memberships WHERE member_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nDELETE FROM payments WHERE payment_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nDELETE FROM members WHERE membership_start_date < '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nDELETE FROM members WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nDELETE FROM subscriptions WHERE subscription_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nDELETE FROM payments WHERE payment_id = 500;",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nDELETE FROM members WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nDELETE FROM subscriptions WHERE payment_status = 'failed';",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nDELETE FROM payments WHERE payment_id IN (SELECT payment_id FROM payment_logs WHERE log_date < '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nDELETE FROM members WHERE member_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nDELETE FROM membership_levels WHERE level_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nDELETE FROM payments WHERE payment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nDELETE FROM payments WHERE payment_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nDELETE FROM invoices WHERE status = 'paid';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nDELETE FROM registration_history WHERE status = 'cancelled';"
]