[
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nUPDATE membership_info SET member_name = 'John Doe' WHERE member_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nUPDATE membership_info SET member_email = 'john.doe@example.com' WHERE member_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nUPDATE membership_info SET membership_type = 'Premium' WHERE member_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nUPDATE membership_info SET member_name = 'John Doe' WHERE member_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nUPDATE membership_info SET member_email = 'john.doe@example.com', join_date = '2022-01-15' WHERE member_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE membership_info (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_type VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nUPDATE membership_info SET membership_type = 'Premium', join_date = '2022-05-20' WHERE member_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE members SET member_name = 'John Doe' WHERE member_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE members SET member_email = 'john.doe@example.com' WHERE member_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE payments SET payment_amount = 100.00 WHERE payment_id = '223e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE members SET member_email = 'updated_email@example.com' WHERE member_id = '00000000-0000-0000-0000-000000000001';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE payments SET payment_amount = 150.50 WHERE payment_id = '11111111-1111-1111-1111-111111111111';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    member_phone VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    member_id UUID,\n    payment_amount DECIMAL(10, 2),\n    payment_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE members SET member_phone = '+1234567890' WHERE member_name LIKE 'John Smith%';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPDATE members SET member_name = 'John Doe' WHERE member_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPDATE payments SET payment_amount = 50.00 WHERE payment_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPDATE memberships SET membership_status = 'Active' WHERE membership_id = 200;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPDATE members SET member_name = 'John Doe' WHERE member_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPDATE payments SET payment_amount = 150.00 WHERE payment_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50),\n    member_email VARCHAR(100),\n    membership_start_date DATE\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE memberships (\n    membership_id INT PRIMARY KEY,\n    member_id INT REFERENCES members(member_id),\n    membership_type VARCHAR(20),\n    membership_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPDATE memberships SET membership_status = 'Active' WHERE membership_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nUPDATE members SET name = 'John Doe' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nUPDATE subscriptions SET payment_status = 'PAID' WHERE subscription_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nUPDATE payments SET amount = 50.99 WHERE payment_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nUPDATE members SET name='John Doe', email='john.doe@example.com' WHERE id=1;",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nUPDATE subscriptions SET payment_status='PAID' WHERE subscription_id=1001;",
  "### TABLEDATA\n\nCREATE TABLE members ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    email VARCHAR(255) UNIQUE, \n    join_date DATE \n); \n\n\nCREATE TABLE subscriptions ( \n    subscription_id INT PRIMARY KEY, \n    member_id INT REFERENCES members(id), \n    start_date DATE, \n    end_date DATE, \n    payment_status VARCHAR(50) \n); \n\n\nCREATE TABLE payments ( \n    payment_id INT PRIMARY KEY, \n    subscription_id INT REFERENCES subscriptions(subscription_id), \n    amount DECIMAL(10, 2), \n    payment_date DATE \n); \n\n\nCREATE TABLE payment_logs ( \n    log_id INT PRIMARY KEY, \n    payment_id INT REFERENCES payments(payment_id), \n    log_date TIMESTAMP, \n    log_message TEXT \n);\n\n### STATEMENT\n\nUPDATE payments SET amount=150.00 WHERE payment_id=5001;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nUPDATE members SET first_name = 'John' WHERE member_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nUPDATE membership_levels SET monthly_fee = 25.00 WHERE level_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nUPDATE payments SET amount = 50.00 WHERE payment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nUPDATE members SET first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com' WHERE member_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nUPDATE membership_levels SET monthly_fee = 50.00 WHERE level_name = 'Gold';",
  "### TABLEDATA\n\nCREATE TABLE members (\n    member_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE membership_levels (\n    level_id SERIAL PRIMARY KEY,\n    level_name VARCHAR(50) NOT NULL,\n    monthly_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    payment_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE invoices (\n    invoice_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    amount_due DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    due_date DATE NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\nCREATE TABLE registration_history (\n    history_id SERIAL PRIMARY KEY,\n    member_id INT NOT NULL,\n    registration_date DATE NOT NULL,\n    status VARCHAR(20) NOT NULL,\n    FOREIGN KEY (member_id) REFERENCES members (member_id)\n);\n\n### STATEMENT\n\nUPDATE payments SET amount = 100.00, payment_date = '2022-10-15' WHERE payment_id = 1;"
]