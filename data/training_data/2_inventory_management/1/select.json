[
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_name, item_quantity FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_name, item_location FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_quantity FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_location FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_name FROM Inventory WHERE item_quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_name FROM Inventory WHERE item_quantity <= 10;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE item_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_name, item_quantity FROM Inventory WHERE item_location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_quantity FROM Inventory WHERE item_location = 'Store';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_quantity FROM Inventory WHERE item_name = 'Hammer';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id FROM Inventory WHERE item_quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id FROM Inventory WHERE item_quantity = 0;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_name FROM Inventory WHERE item_quantity BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_quantity FROM Inventory ORDER BY item_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_name, item_quantity FROM Inventory ORDER BY item_quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_quantity FROM Inventory ORDER BY item_quantity ASC, item_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_items FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT SUM(item_quantity) AS total_quantity FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT AVG(item_quantity) AS average_quantity FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_quantity FROM Inventory WHERE item_quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE item_location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_name, item_quantity FROM Inventory WHERE item_location = 'Storage' AND item_quantity BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_location FROM Inventory WHERE item_quantity < 5 OR item_location = 'Shelf';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_quantity FROM Inventory WHERE item_name LIKE 'P%' ORDER BY item_quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_location FROM Inventory WHERE item_quantity = (SELECT MAX(item_quantity) FROM Inventory);",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT AVG(item_quantity) AS avg_quantity FROM Inventory WHERE item_location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT COUNT(item_id) AS total_items FROM Inventory WHERE item_quantity >= 5;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_name, SUM(item_quantity) AS total_quantity FROM Inventory GROUP BY item_name;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_name, COUNT(*) AS total_records FROM Inventory GROUP BY item_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_quantity FROM Inventory WHERE item_id IN (1, 3, 5, 7);",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE item_id BETWEEN 10 AND 20;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_quantity FROM Inventory WHERE item_quantity < (SELECT AVG(item_quantity) FROM Inventory);",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_name, item_quantity FROM Inventory WHERE item_quantity % 2 = 0;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_location, item_quantity FROM Inventory WHERE item_location LIKE '%Store';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_name, MIN(item_quantity) AS min_quantity FROM Inventory GROUP BY item_name HAVING MIN(item_quantity) > 0;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_quantity FROM Inventory WHERE item_name = 'Chair' UNION SELECT item_id, item_quantity FROM Inventory WHERE item_name = 'Table';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_name, SUM(item_quantity) AS total_quantity FROM Inventory WHERE item_location = 'Storage' GROUP BY item_name HAVING SUM(item_quantity) > 20;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_name, item_location FROM Inventory WHERE item_quantity IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_location VARCHAR(255),\n    item_quantity INT\n);\n\n### STATEMENT\n\nSELECT item_name, item_quantity FROM Inventory WHERE item_quantity IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_name FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_id, quantity FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Locations;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT location_name, manager_name FROM Locations;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT location_id, capacity FROM Locations;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Locations WHERE capacity > 100;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, quantity FROM Inventory WHERE item_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT location_name, manager_name, capacity FROM Locations WHERE location_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Locations ORDER BY capacity ASC;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, quantity FROM Inventory LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT location_name, manager_name, capacity FROM Locations LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT location_name, manager_name FROM Locations WHERE capacity < 50;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory INNER JOIN Locations ON Inventory.location = Locations.location_name;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory LEFT JOIN Locations ON Inventory.location = Locations.location_name;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory RIGHT JOIN Locations ON Inventory.location = Locations.location_name;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory INNER JOIN Locations ON Inventory.location = Locations.location_name;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity < 10 AND location = 'Storage';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, quantity FROM Inventory WHERE location = 'Warehouse' ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE item_name LIKE '%chair%';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT location_name, manager_name FROM Locations WHERE capacity > 100;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_name, location_name FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT location_name, SUM(quantity) AS total_quantity FROM Inventory GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT location_name, item_name, quantity FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name WHERE quantity > 20;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) AS avg_quantity, MAX(quantity) AS max_quantity FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE location IN ('Warehouse', 'Storage');",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE quantity > (SELECT AVG(quantity) FROM Inventory);",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT location_name FROM Locations;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE location = 'Warehouse' OR location = 'Storage';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT location_name, COUNT(item_id) AS total_items FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name GROUP BY location_name;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE item_name = 'Chair' AND (quantity < 5 OR location = 'Storage');",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name WHERE capacity > quantity;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT manager_name, SUM(quantity) AS total_quantity FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name GROUP BY manager_name;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    quantity INT,\n    location VARCHAR(255)\n);\nCREATE TABLE Locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255),\n    manager_name VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nSELECT item_name, location_name FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name WHERE quantity BETWEEN 5 AND 10;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT * FROM Inventory;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT id, item_name, location FROM Inventory;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity > 10;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE location = 'Warehouse';",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT * FROM InventoryLog;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_id, action, timestamp FROM InventoryLog;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT * FROM InventoryLog WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT location_name, capacity, occupied_capacity FROM Locations;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT location_name, capacity FROM Locations WHERE occupied_capacity < capacity;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, quantity, location FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, quantity, location_name FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name WHERE quantity < capacity;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, quantity, location_name, capacity FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name WHERE quantity < capacity AND occupied_capacity < capacity;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT id, item_name, quantity, location_name FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name WHERE quantity < capacity AND occupied_capacity < capacity;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory ORDER BY quantity DESC;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, SUM(quantity) AS total_quantity FROM Inventory GROUP BY item_name;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT location_name, COUNT(*) AS num_items FROM Inventory GROUP BY location;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT location_name, SUM(quantity) AS total_quantity FROM Inventory JOIN Locations ON Inventory.location = Locations.location_name GROUP BY location_name;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, action, timestamp FROM InventoryLog JOIN Inventory ON InventoryLog.item_id = Inventory.id;",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, action, timestamp FROM InventoryLog JOIN Inventory ON InventoryLog.item_id = Inventory.id WHERE action = 'ADD';",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity > 10",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE item_name = 'iPhone' AND location = 'Warehouse'",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT SUM(quantity) AS total_items FROM Inventory GROUP BY location",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, SUM(quantity) AS total_quantity FROM Inventory GROUP BY item_name HAVING total_quantity > 50",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT il.log_id, il.action, i.item_name FROM InventoryLog il JOIN Inventory i ON il.item_id = i.id",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT i.item_name, l.location_name FROM Inventory i JOIN Locations l ON i.location = l.location_name",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT i.item_name, il.log_id, il.timestamp FROM Inventory i JOIN InventoryLog il ON i.id = il.item_id",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT l.location_name, SUM(i.quantity) AS total_quantity FROM Inventory i JOIN Locations l ON i.location = l.location_name GROUP BY l.location_name",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_id, MAX(timestamp) AS latest_action_time FROM InventoryLog GROUP BY item_id",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, location_name FROM Inventory i JOIN Locations l ON i.location = l.location_name WHERE i.quantity >= l.capacity",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, AVG(quantity) AS avg_quantity FROM Inventory GROUP BY item_name HAVING avg_quantity > 30",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT il.log_id, il.action, i.item_name, l.location_name FROM InventoryLog il JOIN Inventory i ON il.item_id = i.id JOIN Locations l ON i.location = l.location_name",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT l.location_name, SUM(i.quantity) AS total_quantity, l.capacity, l.occupied_capacity FROM Inventory i JOIN Locations l ON i.location = l.location_name GROUP BY l.location_name",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, COUNT(*) AS total_logs FROM Inventory i JOIN InventoryLog il ON i.id = il.item_id GROUP BY item_name",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT i.item_name, l1.location_name AS source_location, l2.location_name AS destination_location FROM Inventory i JOIN Locations l1 ON i.location = l1.location_name JOIN Locations l2 ON i.quantity <= l2.capacity",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT l.location_name, MAX(i.quantity) AS max_quantity FROM Inventory i JOIN Locations l ON i.location = l.location_name GROUP BY l.location_name",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT il.action, COUNT(*) AS total_actions FROM InventoryLog il GROUP BY il.action",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, MAX(occupied_capacity) AS max_occupied_capacity FROM Inventory i JOIN Locations l ON i.location = l.location_name GROUP BY item_name",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT i.item_name, MIN(l.capacity) AS min_capacity FROM Inventory i JOIN Locations l ON i.location = l.location_name GROUP BY i.item_name",
  "### TABLEDATA\n\n'CREATE TABLE Inventory (\\n id INT PRIMARY KEY,\\n item_name VARCHAR(50),\\n quantity INT,\\n location VARCHAR(50)\\n)'\n\n'CREATE TABLE InventoryLog (\\n log_id INT PRIMARY KEY,\\n item_id INT,\\n action VARCHAR(50),\\n timestamp TIMESTAMP\\n)'\n\n'CREATE TABLE Locations (\\n location_id INT PRIMARY KEY,\\n location_name VARCHAR(50),\\n capacity INT,\\n occupied_capacity INT\\n)'\n\n### STATEMENT\n\nSELECT item_name, MAX(timestamp) - MIN(timestamp) AS time_difference FROM InventoryLog GROUP BY item_name",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE item_id = 1",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE location_id = 5",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT location_id, quantity FROM Inventory WHERE item_name = 'Book'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_id, item_name, quantity FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity > 10",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_id, item_name FROM Inventory WHERE quantity < 5",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE location_id IS NULL",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT item_name FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory ORDER BY item_name ASC",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory ORDER BY quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_id, item_name, quantity FROM Inventory WHERE item_name LIKE '%Computer%'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT location_id, SUM(quantity) AS total_quantity FROM Inventory GROUP BY location_id",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT location_id, AVG(quantity) AS avg_quantity FROM Inventory GROUP BY location_id",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT location_id, COUNT(*) AS item_count FROM Inventory GROUP BY location_id",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_items FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT MAX(quantity) AS max_quantity FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT MIN(quantity) AS min_quantity FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT location_id) AS unique_locations FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT MAX(item_id) AS max_item_id FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT MIN(item_id) AS min_item_id FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE location_id = 1 AND quantity > 10",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE item_name LIKE 'S%'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_id, item_name, quantity FROM Inventory WHERE location_id IN (1, 2, 3)",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, SUM(quantity) FROM Inventory GROUP BY item_name HAVING SUM(quantity) > 50",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory ORDER BY quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT location_id FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_id, item_name, location_id FROM Inventory WHERE quantity BETWEEN 10 AND 20",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_items FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE quantity = (SELECT MAX(quantity) FROM Inventory)",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE location_id = (SELECT location_id FROM Inventory WHERE item_id = 1)",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE location_id = 1 UNION SELECT item_name, quantity FROM Inventory WHERE location_id = 2",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_id, item_name, location_id FROM Inventory WHERE item_name = 'Chair'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE location_id = 1 AND quantity > 5 ORDER BY quantity DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE location_id = 1 AND quantity < (SELECT AVG(quantity) FROM Inventory)",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, SUM(quantity) FROM Inventory WHERE location_id = 1 GROUP BY item_name HAVING SUM(quantity) > 20",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE item_name LIKE '%desk%' AND quantity > 0",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_id, item_name, location_id FROM Inventory INNER JOIN OtherTable ON Inventory.item_id = OtherTable.item_id",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory LEFT JOIN OtherTable ON Inventory.item_id = OtherTable.item_id",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory RIGHT JOIN OtherTable ON Inventory.item_id = OtherTable.item_id",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    location_id INT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT item_id, item_name, location_id, quantity FROM Inventory WHERE item_id BETWEEN 1 AND 10",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE item_id = 1",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity > 10",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_name, location FROM Inventory WHERE item_id = 5",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_name, quantity, location FROM Inventory WHERE quantity <= 5",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE location LIKE '%Store%'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_id, item_name, quantity FROM Inventory WHERE location = 'Warehouse'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT MAX(quantity) FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_id, item_name FROM Inventory WHERE location = 'Main Store'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE item_id BETWEEN 10 AND 15",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT DISTINCT location FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT MIN(quantity) FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_name, location FROM Inventory WHERE quantity < 5",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_id, item_name FROM Inventory WHERE location NOT LIKE '%Back%'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT AVG(quantity) FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_id, item_name FROM Inventory WHERE quantity = 0",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT SUM(quantity) FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_id, item_name, location FROM Inventory WHERE quantity >= 20",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE location = 'Online Store'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE item_name LIKE '%book%' AND quantity > 10",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_name, location FROM Inventory WHERE quantity < 5",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_items FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE location = 'Warehouse A'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_name, quantity FROM Inventory WHERE location = 'Storage Room' AND quantity <= 20",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_id, item_name FROM Inventory WHERE quantity BETWEEN 5 AND 10",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT DISTINCT(location) FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_name, quantity*2 AS modified_quantity FROM Inventory WHERE quantity > 5",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_name, location FROM Inventory WHERE item_id IN (1, 3, 5)",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE item_name LIKE '%chair%' OR quantity < 20",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_id, SUM(quantity) AS total_quantity FROM Inventory GROUP BY item_id HAVING SUM(quantity) > 50",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_id, COUNT(*) AS total_records FROM Inventory GROUP BY item_id",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_name, location FROM Inventory ORDER BY quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_id, item_name FROM Inventory WHERE item_name = 'Desk' OR location = 'Office'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT AVG(quantity) AS avg_quantity FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity = (SELECT MAX(quantity) FROM Inventory)",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_name, CASE WHEN quantity < 10 THEN 'Low' ELSE 'High' END AS quantity_category FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT item_name, location FROM Inventory WHERE item_name = 'Chair' UNION SELECT item_name, location FROM Inventory WHERE item_name = 'Table'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    location VARCHAR(100) NOT NULL\n)\n\n### STATEMENT\n\nSELECT SUM(quantity) AS total_quantity FROM Inventory"
]