<t>CREATE TABLE Inventory (id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>GRANT SELECT ON Inventory TO sales_group</stat><divider><t>CREATE TABLE Inventory (id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>grant select on inventory to sales_group</stat><divider><t>CREATE TABLE Inventory (id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>GRANT INSERT, UPDATE ON Inventory TO manager_group</stat><divider><t>CREATE TABLE Inventory (id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>grant insert, update on inventory to manager_group</stat><divider><t>CREATE TABLE Inventory (id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>GRANT DELETE ON Inventory TO admin_group</stat><divider><t>CREATE TABLE Inventory (id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>grant delete on inventory to admin_group</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, order_date DATE, quantity INT, CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES products(id));</t><stat>GRANT SELECT, INSERT ON products TO user1;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, order_date DATE, quantity INT, CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES products(id));</t><stat>grant select, insert on products to user1;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, order_date DATE, quantity INT, CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES products(id));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), quantity INT);</t><stat>GRANT SELECT, INSERT ON products TO user1;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, order_date DATE, quantity INT, CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES products(id));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), quantity INT);</t><stat>grant select, insert on products to user1;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, order_date DATE, quantity INT, CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES products(id));</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user2;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, order_date DATE, quantity INT, CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES products(id));</t><stat>grant select, insert, update, delete on orders to user2;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, order_date DATE, quantity INT, CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES products(id));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), quantity INT);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user2;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, order_date DATE, quantity INT, CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES products(id));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), quantity INT);</t><stat>grant select, insert, update, delete on orders to user2;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, order_date DATE, quantity INT, CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES products(id));</t><stat>GRANT SELECT, UPDATE ON products TO user3;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), quantity INT);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, order_date DATE, quantity INT, CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES products(id));</t><stat>grant select, update on products to user3;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, order_date DATE, quantity INT, CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES products(id));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), quantity INT);</t><stat>GRANT SELECT, UPDATE ON products TO user3;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, order_date DATE, quantity INT, CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES products(id));

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10, 2), quantity INT);</t><stat>grant select, update on products to user3;</stat><divider><t>CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO marketing_group</stat><divider><t>CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to marketing_group</stat><divider><t>CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO marketing_group</stat><divider><t>CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)</t><stat>grant select, insert, update, delete on products to marketing_group</stat><divider><t>CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO marketing_group</stat><divider><t>CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to marketing_group</stat><divider><t>CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO marketing_group</stat><divider><t>CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)</t><stat>grant select, insert, update, delete on products to marketing_group</stat><divider><t>CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO marketing_group</stat><divider><t>CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)</t><stat>grant select, insert, update, delete on products to marketing_group</stat><divider><t>CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO marketing_group</stat><divider><t>CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)</t><stat>grant select, insert, update, delete on products to marketing_group</stat><divider><t>CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, UPDATE ON suppliers TO purchasing_group</stat><divider><t>CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)</t><stat>grant select, update on suppliers to purchasing_group</stat><divider><t>CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)</t><stat>GRANT SELECT, UPDATE ON suppliers TO purchasing_group</stat><divider><t>CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)</t><stat>grant select, update on suppliers to purchasing_group</stat><divider><t>CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, UPDATE ON suppliers TO purchasing_group</stat><divider><t>CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)</t><stat>grant select, update on suppliers to purchasing_group</stat><divider><t>CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)</t><stat>GRANT SELECT, UPDATE ON suppliers TO purchasing_group</stat><divider><t>CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)</t><stat>grant select, update on suppliers to purchasing_group</stat><divider><t>CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)</t><stat>GRANT SELECT, UPDATE ON suppliers TO purchasing_group</stat><divider><t>CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)</t><stat>grant select, update on suppliers to purchasing_group</stat><divider><t>CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)</t><stat>GRANT SELECT, UPDATE ON suppliers TO purchasing_group</stat><divider><t>CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)</t><stat>grant select, update on suppliers to purchasing_group</stat><divider><t>CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT ON orders TO sales_group</stat><divider><t>CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)</t><stat>grant select, insert on orders to sales_group</stat><divider><t>CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)</t><stat>GRANT SELECT, INSERT ON orders TO sales_group</stat><divider><t>CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)</t><stat>grant select, insert on orders to sales_group</stat><divider><t>CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT ON orders TO sales_group</stat><divider><t>CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)</t><stat>grant select, insert on orders to sales_group</stat><divider><t>CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)</t><stat>GRANT SELECT, INSERT ON orders TO sales_group</stat><divider><t>CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)</t><stat>grant select, insert on orders to sales_group</stat><divider><t>CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)</t><stat>GRANT SELECT, INSERT ON orders TO sales_group</stat><divider><t>CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)</t><stat>grant select, insert on orders to sales_group</stat><divider><t>CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)</t><stat>GRANT SELECT, INSERT ON orders TO sales_group</stat><divider><t>CREATE TABLE orders (order_id SERIAL PRIMARY KEY, product_id INT NOT NULL, supplier_id INT NOT NULL, quantity INT NOT NULL, order_date TIMESTAMP NOT NULL)

CREATE TABLE suppliers (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, contact_info VARCHAR(255) NOT NULL)

CREATE TABLE products (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, stock_quantity INT NOT NULL)</t><stat>grant select, insert on orders to sales_group</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10,2), quantity INT)</t><stat>GRANT SELECT ON products TO employees</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10,2), quantity INT)</t><stat>grant select on products to employees</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10,2), quantity INT)</t><stat>GRANT INSERT ON products TO managers</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10,2), quantity INT)</t><stat>grant insert on products to managers</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10,2), quantity INT)</t><stat>GRANT UPDATE ON products TO administrators</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), price DECIMAL(10,2), quantity INT)</t><stat>grant update on products to administrators</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT ON products TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select on products to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT INSERT, UPDATE ON categories TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant insert, update on categories to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO suppliers;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name STRING,
  customer_contact STRING
);

CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  order_date DATE,
  product_id INT,
  quantity INT,
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name STRING,
  supplier_contact STRING
);

CREATE TABLE categories (
  category_id INT PRIMARY KEY,
  category_name STRING
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name STRING,
  quantity INT
);</t><stat>grant select, insert, update, delete on orders to suppliers;</stat>