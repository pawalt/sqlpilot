[
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM StockReports WHERE report_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, revenue FROM StockReports WHERE sales_performance > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, stock_level FROM StockReports WHERE revenue >= 1000;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM StockReports WHERE report_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, sales_performance FROM StockReports WHERE stock_level < 50;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM StockReports WHERE revenue < 500;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, revenue FROM StockReports WHERE sales_performance > 0.5 AND stock_level > 100;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM StockReports WHERE report_date = '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, stock_level FROM StockReports WHERE revenue < 500 OR sales_performance < 0.5;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM StockReports WHERE revenue >= 100 AND stock_level < 20;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, sales_performance FROM StockReports WHERE revenue > 1000 AND stock_level >= 50;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM StockReports WHERE report_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, revenue FROM StockReports WHERE stock_level <= 30;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, stock_level FROM StockReports WHERE revenue > 5000;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM StockReports WHERE report_date = '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM StockReports WHERE revenue >= 5000 OR sales_performance > 0.9;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, sales_performance FROM StockReports WHERE revenue < 2000 AND stock_level < 50;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM StockReports WHERE report_date = '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, revenue FROM StockReports WHERE sales_performance < 0.3;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM StockReports WHERE revenue >= 2000 AND stock_level < 50;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM StockReports WHERE report_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, stock_level FROM StockReports WHERE revenue > 10000;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, report_date, stock_level FROM StockReports WHERE stock_level > 50 AND sales_performance > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT AVG(revenue) AS average_revenue FROM StockReports;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT MAX(stock_level) AS max_stock_level FROM StockReports;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT COUNT(report_id) AS total_reports FROM StockReports WHERE revenue > 5000;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT MIN(revenue) AS min_revenue, MAX(revenue) AS max_revenue FROM StockReports;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_date, SUM(revenue) AS total_revenue FROM StockReports GROUP BY report_date;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, AVG(sales_performance) AS avg_sales_performance FROM StockReports GROUP BY report_id HAVING AVG(sales_performance) > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, COUNT(*) AS total_records FROM StockReports GROUP BY report_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, report_date FROM StockReports WHERE revenue BETWEEN 5000 AND 10000;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, SUM(revenue) AS total_revenue FROM StockReports WHERE report_date < '2021-05-01' GROUP BY report_id HAVING SUM(revenue) > 8000;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, DATEDIFF(report_date, '2021-01-01') AS days_since_report FROM StockReports;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, report_date, revenue FROM StockReports WHERE report_date BETWEEN '2021-01-01' AND '2021-06-30';",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, SUM(revenue) AS total_revenue FROM StockReports WHERE MONTH(report_date) = 4 GROUP BY report_id;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, sales_performance, revenue FROM StockReports ORDER BY sales_performance DESC, revenue ASC;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, report_date, stock_level FROM StockReports WHERE YEAR(report_date) = 2021 AND MONTH(report_date) = 5;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, sales_performance, revenue FROM StockReports WHERE sales_performance < 0.5 OR revenue < 5000;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, report_date, revenue FROM StockReports WHERE report_date = '2021-03-15';",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, sales_performance, revenue FROM StockReports WHERE stock_level IN (50, 100, 150);",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM stock_levels;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM stock_levels WHERE quantity > 50;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT id, product_name FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM sales_performance WHERE revenue > 1000;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT id, product_name, sales_date FROM sales_performance WHERE sales_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM stock_levels GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(quantity) AS average_quantity FROM stock_levels GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(quantity) AS max_quantity FROM stock_levels GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, MIN(quantity) AS min_quantity FROM stock_levels GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, revenue FROM sales_performance ORDER BY revenue DESC;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, revenue FROM sales_performance ORDER BY revenue ASC;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, SUM(revenue) AS total_revenue FROM sales_performance GROUP BY product_name, sales_date;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, AVG(revenue) AS average_revenue FROM sales_performance GROUP BY product_name, sales_date;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, MAX(revenue) AS max_revenue FROM sales_performance GROUP BY product_name, sales_date;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, MIN(revenue) AS min_revenue FROM sales_performance GROUP BY product_name, sales_date;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, sum(quantity) AS total_quantity, sum(revenue) AS total_revenue FROM stock_levels JOIN sales_performance ON stock_levels.product_name = sales_performance.product_name GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT s.product_name, s.quantity, p.revenue FROM stock_levels s LEFT JOIN sales_performance p ON s.product_name = p.product_name;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT s.product_name, s.quantity, p.revenue FROM stock_levels s RIGHT JOIN sales_performance p ON s.product_name = p.product_name;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT s.product_name, s.quantity, p.revenue FROM stock_levels s INNER JOIN sales_performance p ON s.product_name = p.product_name;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT s.product_name, s.quantity, sp.revenue FROM stock_levels s JOIN sales_performance sp ON s.product_name = sp.product_name WHERE s.quantity > 50 AND sp.revenue > 1000;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT s.product_name, s.quantity, sp.revenue FROM stock_levels s JOIN sales_performance sp ON s.product_name = sp.product_name WHERE s.quantity < 10 OR sp.revenue < 500;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM stock_levels WHERE quantity > 100 ORDER BY product_name ASC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM stock_levels GROUP BY product_name HAVING total_quantity > 500",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT s.product_name, sp.sales_date, sp.revenue FROM stock_levels s LEFT JOIN sales_performance sp ON s.product_name = sp.product_name",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT s.product_name, s.quantity, sp.sales_date, sp.revenue FROM stock_levels s INNER JOIN sales_performance sp ON s.product_name = sp.product_name WHERE sp.revenue > 1000 ORDER BY sp.sales_date DESC",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(quantity) AS avg_quantity FROM stock_levels GROUP BY product_name HAVING avg_quantity >= 50",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS num_sales FROM sales_performance WHERE revenue > 500 GROUP BY product_name HAVING num_sales >= 3",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM stock_levels;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM stock_levels;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT id, last_updated FROM stock_levels;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, sales_amount FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT id, sales_date FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM revenue;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT total_revenue, revenue_date FROM revenue;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT id FROM stock_levels WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM stock_levels WHERE last_updated > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_performance WHERE sales_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, sales_date FROM sales_performance WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM revenue WHERE total_revenue < 5000;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT total_revenue, revenue_date FROM revenue WHERE revenue_date BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT id FROM stock_levels ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM stock_levels ORDER BY last_updated ASC;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_performance ORDER BY sales_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, sales_date FROM sales_performance ORDER BY product_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM revenue ORDER BY total_revenue DESC;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT total_revenue, revenue_date FROM revenue ORDER BY revenue_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity\nFROM stock_levels\nGROUP BY product_name\nORDER BY total_quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(sales_amount) AS total_sales_amount\nFROM sales_performance\nGROUP BY product_id\nORDER BY total_sales_amount DESC",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, last_updated\nFROM stock_levels\nWHERE quantity > 100\nORDER BY last_updated DESC",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT sales_date, SUM(sales_amount) AS total_sales_amount\nFROM sales_performance\nGROUP BY sales_date\nHAVING total_sales_amount > 1000",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, last_updated\nFROM stock_levels\nWHERE last_updated > '2021-01-01'\nORDER BY last_updated DESC",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT revenue_date, MAX(total_revenue) AS max_revenue\nFROM revenue\nGROUP BY revenue_date\nORDER BY max_revenue DESC",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity\nFROM stock_levels\nWHERE last_updated BETWEEN '2021-01-01' AND '2021-12-31'\nGROUP BY product_name\nORDER BY total_quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, last_updated\nFROM stock_levels\nWHERE product_name LIKE 'A%'\nORDER BY last_updated DESC",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_sales\nFROM sales_performance\nWHERE sales_date BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity\nFROM stock_levels\nGROUP BY product_name\nHAVING total_quantity < 50\nORDER BY total_quantity ASC",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, last_updated\nFROM stock_levels\nWHERE quantity > 0\nAND product_name IN ('Product A', 'Product B')",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT sales_date, AVG(sales_amount) AS avg_sales_amount\nFROM sales_performance\nGROUP BY sales_date\nORDER BY avg_sales_amount DESC",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, last_updated\nFROM stock_levels\nWHERE quantity BETWEEN 50 AND 100\nORDER BY last_updated DESC",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT revenue_date, total_revenue\nFROM revenue\nWHERE total_revenue > 10000\nORDER BY revenue_date ASC",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, last_updated\nFROM stock_levels\nWHERE quantity > 0\nLIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT sales_date, SUM(sales_amount) AS total_sales_amount\nFROM sales_performance\nGROUP BY sales_date\nORDER BY total_sales_amount DESC\nLIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, last_updated\nFROM stock_levels\nORDER BY last_updated DESC\nLIMIT 20",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT revenue_date, total_revenue\nFROM revenue\nORDER BY revenue_date ASC\nLIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, last_updated\nFROM stock_levels\nWHERE quantity > 100\nAND last_updated BETWEEN '2021-01-01' AND '2021-12-31'\nORDER BY last_updated DESC",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT sales_date, SUM(sales_amount) AS total_sales_amount\nFROM sales_performance\nGROUP BY sales_date\nORDER BY total_sales_amount DESC\nLIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM stock_levels;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, quantity FROM stock_levels WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) AS total_quantity FROM stock_levels GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, sales_amount FROM sales_performance WHERE sales_date = '2022-01-21';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, AVG(sales_amount) AS average_sales FROM sales_performance GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM revenue;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT total_revenue FROM revenue WHERE month_year BETWEEN '2021-01-01' AND '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT month_year, SUM(total_revenue) AS total_revenue FROM revenue GROUP BY month_year;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM reports;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT report_id, report_type, report_content FROM reports WHERE report_date BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT report_type, COUNT(report_id) AS report_count FROM reports GROUP BY report_type;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, quantity FROM stock_levels WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, sales_amount FROM sales_performance WHERE sales_amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT revenue_id, total_revenue FROM revenue WHERE month_year = '2021-12-01';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT report_id, report_type FROM reports WHERE report_date > '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) AS total_quantity FROM stock_levels WHERE quantity > 50 GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, sales_amount FROM sales_performance ORDER BY sales_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM stock_levels WHERE quantity = 0;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT report_id, report_type, report_content FROM reports WHERE report_date > '2022-01-01' AND report_date < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM stock_levels",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, quantity FROM stock_levels WHERE quantity > 100",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(quantity) AS max_quantity FROM stock_levels",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) AS total_quantity FROM stock_levels GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, quantity FROM stock_levels WHERE product_id = 5",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(sales_amount) AS avg_sales_amount FROM sales_performance",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(sales_amount) AS total_sales_amount FROM sales_performance GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_performance WHERE sales_date BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM revenue WHERE month_year = '2022-03-01'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT revenue_id, total_revenue FROM revenue ORDER BY total_revenue DESC",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT report_type FROM reports",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT report_id, report_type FROM reports WHERE report_date >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM stock_levels JOIN sales_performance ON stock_levels.product_id = sales_performance.product_id",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) AS total_quantity, SUM(sales_amount) AS total_sales_amount FROM stock_levels JOIN sales_performance ON stock_levels.product_id = sales_performance.product_id GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM stock_levels UNION SELECT * FROM sales_performance",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM StockLevels;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM StockLevels WHERE current_stock > 0;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT sale_date, quantity_sold, revenue FROM SalesPerformance WHERE quantity_sold > 10;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, category, unit_price FROM ProductDetails WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM SalesReports WHERE report_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT report_date, total_revenue FROM RevenueReports WHERE total_revenue > 10000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM ProductDetails ORDER BY unit_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT SUM(quantity_sold) AS total_quantity_sold FROM SalesPerformance;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(total_sales) AS average_sales FROM SalesReports;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock, unit_price FROM StockLevels INNER JOIN ProductDetails ON StockLevels.product_name = ProductDetails.product_name;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity_sold) AS total_quantity_sold FROM SalesPerformance GROUP BY product_name HAVING total_quantity_sold > 100;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, category, unit_price FROM ProductDetails WHERE unit_price BETWEEN 50.00 AND 100.00;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT report_date, total_revenue FROM RevenueReports WHERE report_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock, unit_price FROM StockLevels WHERE current_stock < 10 AND unit_price > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT category FROM ProductDetails;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price * current_stock AS total_value FROM StockLevels;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(unit_price) AS average_price FROM ProductDetails GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity_sold) AS total_quantity_sold FROM SalesPerformance WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(revenue) AS max_revenue FROM SalesPerformance GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT report_date, MAX(total_sales) AS max_sales FROM SalesReports GROUP BY report_date;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM StockLevels WHERE current_stock > 100;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_sold, revenue FROM SalesPerformance WHERE revenue > 1000;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT report_date, total_sales FROM SalesReports WHERE report_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, category FROM ProductDetails WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM StockLevels WHERE stock_id = 105;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT sale_date, quantity_sold FROM SalesPerformance WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT report_date, total_revenue FROM RevenueReports WHERE total_revenue > 5000;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT report_date, total_sales FROM SalesReports ORDER BY total_sales DESC;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, category FROM ProductDetails ORDER BY unit_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM StockLevels JOIN ProductDetails ON StockLevels.product_name = ProductDetails.product_name;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, sale_date, revenue FROM SalesPerformance WHERE product_name LIKE 'Apple%';",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM StockLevels WHERE current_stock < 50 OR current_stock > 200;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT report_date, total_sales FROM SalesReports WHERE total_sales BETWEEN 1000 AND 5000;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, category FROM ProductDetails WHERE unit_price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, revenue FROM SalesPerformance JOIN RevenueReports ON SalesPerformance.sale_id = RevenueReports.report_id;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT report_date, total_revenue FROM RevenueReports WHERE report_date >= '2022-01-01' AND report_date <= '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, sale_date, quantity_sold FROM SalesPerformance WHERE quantity_sold > 10;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, category FROM ProductDetails WHERE category = 'Clothing' AND unit_price < 50;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, revenue FROM SalesPerformance WHERE revenue > 500 AND quantity_sold > 5;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM StockLevels WHERE product_name = 'Chair';"
]