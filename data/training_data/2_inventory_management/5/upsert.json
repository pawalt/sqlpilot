[
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (1, '2022-01-01', 100, 0.5, 1500) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-01', stock_level = 100, sales_performance = 0.5, revenue = 1500",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (2, '2022-01-02', 120, 0.6, 1700) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-02', stock_level = 120, sales_performance = 0.6, revenue = 1700",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (3, '2022-01-03', 150, 0.7, 2000) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-03', stock_level = 150, sales_performance = 0.7, revenue = 2000",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (4, '2022-01-04', 130, 0.55, 1600) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-04', stock_level = 130, sales_performance = 0.55, revenue = 1600",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (5, '2022-01-05', 170, 0.8, 2200) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-05', stock_level = 170, sales_performance = 0.8, revenue = 2200",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (6, '2022-01-06', 110, 0.45, 1400) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-06', stock_level = 110, sales_performance = 0.45, revenue = 1400",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (7, '2022-01-07', 190, 0.9, 2400) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-07', stock_level = 190, sales_performance = 0.9, revenue = 2400",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (8, '2022-01-08', 100, 0.5, 1500) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-08', stock_level = 100, sales_performance = 0.5, revenue = 1500",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (9, '2022-01-09', 140, 0.65, 1800) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-09', stock_level = 140, sales_performance = 0.65, revenue = 1800",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (10, '2022-01-10', 160, 0.75, 2100) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-10', stock_level = 160, sales_performance = 0.75, revenue = 2100",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (11, '2022-01-11', 120, 0.6, 1700) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-11', stock_level = 120, sales_performance = 0.6, revenue = 1700",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (12, '2022-01-12', 180, 0.85, 2300) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-12', stock_level = 180, sales_performance = 0.85, revenue = 2300",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (13, '2022-01-13', 130, 0.55, 1600) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-13', stock_level = 130, sales_performance = 0.55, revenue = 1600",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (14, '2022-01-14', 200, 1.0, 2500) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-14', stock_level = 200, sales_performance = 1.0, revenue = 2500",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (15, '2022-01-15', 90, 0.4, 1300) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-15', stock_level = 90, sales_performance = 0.4, revenue = 1300",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (16, '2022-01-16', 170, 0.8, 2200) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-16', stock_level = 170, sales_performance = 0.8, revenue = 2200",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (17, '2022-01-17', 150, 0.7, 2000) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-17', stock_level = 150, sales_performance = 0.7, revenue = 2000",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (18, '2022-01-18', 110, 0.45, 1400) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-18', stock_level = 110, sales_performance = 0.45, revenue = 1400",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (19, '2022-01-19', 190, 0.9, 2400) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-19', stock_level = 190, sales_performance = 0.9, revenue = 2400",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (20, '2022-01-20', 130, 0.55, 1600) ON CONFLICT (report_id) DO UPDATE SET report_date = '2022-01-20', stock_level = 130, sales_performance = 0.55, revenue = 1600",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (1, '2022-01-01', 100, 0.75, 5000.00) ON DUPLICATE KEY UPDATE stock_level = 100, sales_performance = 0.75, revenue = 5000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (2, '2022-01-02', 120, 0.85, 6000.00) ON DUPLICATE KEY UPDATE stock_level = 120, sales_performance = 0.85, revenue = 6000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (3, '2022-01-03', 150, 0.95, 7000.00) ON DUPLICATE KEY UPDATE stock_level = 150, sales_performance = 0.95, revenue = 7000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (4, '2022-01-04', 200, 1.05, 8000.00) ON DUPLICATE KEY UPDATE stock_level = 200, sales_performance = 1.05, revenue = 8000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (5, '2022-01-05', 180, 1.15, 9000.00) ON DUPLICATE KEY UPDATE stock_level = 180, sales_performance = 1.15, revenue = 9000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (6, '2022-01-06', 160, 1.25, 10000.00) ON DUPLICATE KEY UPDATE stock_level = 160, sales_performance = 1.25, revenue = 10000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (7, '2022-01-07', 140, 1.35, 11000.00) ON DUPLICATE KEY UPDATE stock_level = 140, sales_performance = 1.35, revenue = 11000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (8, '2022-01-08', 120, 1.45, 12000.00) ON DUPLICATE KEY UPDATE stock_level = 120, sales_performance = 1.45, revenue = 12000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (9, '2022-01-09', 100, 1.55, 13000.00) ON DUPLICATE KEY UPDATE stock_level = 100, sales_performance = 1.55, revenue = 13000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (10, '2022-01-10', 90, 1.65, 14000.00) ON DUPLICATE KEY UPDATE stock_level = 90, sales_performance = 1.65, revenue = 14000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (11, '2022-01-11', 80, 1.75, 15000.00) ON DUPLICATE KEY UPDATE stock_level = 80, sales_performance = 1.75, revenue = 15000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (12, '2022-01-12', 70, 1.85, 16000.00) ON DUPLICATE KEY UPDATE stock_level = 70, sales_performance = 1.85, revenue = 16000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (13, '2022-01-13', 60, 1.95, 17000.00) ON DUPLICATE KEY UPDATE stock_level = 60, sales_performance = 1.95, revenue = 17000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (14, '2022-01-14', 50, 2.05, 18000.00) ON DUPLICATE KEY UPDATE stock_level = 50, sales_performance = 2.05, revenue = 18000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (15, '2022-01-15', 40, 2.15, 19000.00) ON DUPLICATE KEY UPDATE stock_level = 40, sales_performance = 2.15, revenue = 19000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (16, '2022-01-16', 30, 2.25, 20000.00) ON DUPLICATE KEY UPDATE stock_level = 30, sales_performance = 2.25, revenue = 20000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (17, '2022-01-17', 20, 2.35, 21000.00) ON DUPLICATE KEY UPDATE stock_level = 20, sales_performance = 2.35, revenue = 21000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (18, '2022-01-18', 10, 2.45, 22000.00) ON DUPLICATE KEY UPDATE stock_level = 10, sales_performance = 2.45, revenue = 22000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (19, '2022-01-19', 5, 2.55, 23000.00) ON DUPLICATE KEY UPDATE stock_level = 5, sales_performance = 2.55, revenue = 23000.00;",
  "### TABLEDATA\n\nCREATE TABLE StockReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    stock_level INT,\n    sales_performance DECIMAL,\n    revenue DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO StockReports (report_id, report_date, stock_level, sales_performance, revenue) VALUES (20, '2022-01-20', 0, 2.65, 24000.00) ON DUPLICATE KEY UPDATE stock_level = 0, sales_performance = 2.65, revenue = 24000.00;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity) VALUES (1, 'Product A', 100) ON DUPLICATE KEY UPDATE quantity = quantity + 10;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity) VALUES (2, 'Product B', 150) ON DUPLICATE KEY UPDATE quantity = quantity + 20;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity) VALUES (3, 'Product C', 200) ON DUPLICATE KEY UPDATE quantity = quantity + 30;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity) VALUES (4, 'Product D', 250) ON DUPLICATE KEY UPDATE quantity = quantity + 40;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity) VALUES (5, 'Product E', 300) ON DUPLICATE KEY UPDATE quantity = quantity + 50;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity) VALUES (6, 'Product F', 350) ON DUPLICATE KEY UPDATE quantity = quantity + 60;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity) VALUES (7, 'Product G', 400) ON DUPLICATE KEY UPDATE quantity = quantity + 70;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity) VALUES (8, 'Product H', 450) ON DUPLICATE KEY UPDATE quantity = quantity + 80;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity) VALUES (9, 'Product I', 500) ON DUPLICATE KEY UPDATE quantity = quantity + 90;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity) VALUES (10, 'Product J', 550) ON DUPLICATE KEY UPDATE quantity = quantity + 100;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (1, 'Product A', '2022-01-01', 200.50) ON DUPLICATE KEY UPDATE revenue = revenue + 20.5;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (2, 'Product B', '2022-01-02', 250.75) ON DUPLICATE KEY UPDATE revenue = revenue + 25.75;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (3, 'Product C', '2022-01-03', 300.25) ON DUPLICATE KEY UPDATE revenue = revenue + 30.25;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (4, 'Product D', '2022-01-04', 400.75) ON DUPLICATE KEY UPDATE revenue = revenue + 40.75;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (5, 'Product E', '2022-01-05', 500.00) ON DUPLICATE KEY UPDATE revenue = revenue + 50.0;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (6, 'Product F', '2022-01-06', 600.25) ON DUPLICATE KEY UPDATE revenue = revenue + 60.25;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (7, 'Product G', '2022-01-07', 700.50) ON DUPLICATE KEY UPDATE revenue = revenue + 70.5;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (8, 'Product H', '2022-01-08', 800.75) ON DUPLICATE KEY UPDATE revenue = revenue + 80.75;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (9, 'Product I', '2022-01-09', 900.00) ON DUPLICATE KEY UPDATE revenue = revenue + 90.0;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (10, 'Product J', '2022-01-10', 1000.25) ON DUPLICATE KEY UPDATE revenue = revenue + 100.25;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity) VALUES (1, 'Product A', 100) ON DUPLICATE KEY UPDATE quantity = quantity + 20;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity) VALUES (2, 'Product B', 50) ON DUPLICATE KEY UPDATE quantity = quantity + 10;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity) VALUES (3, 'Product C', 200) ON DUPLICATE KEY UPDATE quantity = quantity + 30;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity) VALUES (4, 'Product D', 75) ON DUPLICATE KEY UPDATE quantity = quantity + 15;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity) VALUES (5, 'Product E', 150) ON DUPLICATE KEY UPDATE quantity = quantity + 25;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity) VALUES (6, 'Product F', 300) ON DUPLICATE KEY UPDATE quantity = quantity + 40;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity) VALUES (7, 'Product G', 250) ON DUPLICATE KEY UPDATE quantity = quantity + 35;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity) VALUES (8, 'Product H', 100) ON DUPLICATE KEY UPDATE quantity = quantity + 20;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity) VALUES (9, 'Product I', 175) ON DUPLICATE KEY UPDATE quantity = quantity + 30;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity) VALUES (10, 'Product J', 120) ON DUPLICATE KEY UPDATE quantity = quantity + 25;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (1, 'Product A', '2022-01-01', 100.50) ON DUPLICATE KEY UPDATE revenue = revenue + 10.25;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (2, 'Product B', '2022-01-02', 75.25) ON DUPLICATE KEY UPDATE revenue = revenue + 7.75;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (3, 'Product C', '2022-01-03', 150.75) ON DUPLICATE KEY UPDATE revenue = revenue + 15.25;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (4, 'Product D', '2022-01-04', 120.00) ON DUPLICATE KEY UPDATE revenue = revenue + 12.00;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (5, 'Product E', '2022-01-05', 200.25) ON DUPLICATE KEY UPDATE revenue = revenue + 20.50;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (6, 'Product F', '2022-01-06', 300.75) ON DUPLICATE KEY UPDATE revenue = revenue + 30.75;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (7, 'Product G', '2022-01-07', 250.00) ON DUPLICATE KEY UPDATE revenue = revenue + 25.00;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (8, 'Product H', '2022-01-08', 100.50) ON DUPLICATE KEY UPDATE revenue = revenue + 10.00;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (9, 'Product I', '2022-01-09', 175.25) ON DUPLICATE KEY UPDATE revenue = revenue + 17.25;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT\n);\n\n\nCREATE TABLE sales_performance (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    revenue DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (id, product_name, sales_date, revenue) VALUES (10, 'Product J', '2022-01-10', 120.75) ON DUPLICATE KEY UPDATE revenue = revenue + 12.75;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity, last_updated) VALUES (1, 'Product A', 100, '2022-01-01 10:00:00') ON CONFLICT (id) DO UPDATE SET product_name = 'Product A', quantity = 150, last_updated = '2022-01-05 15:00:00';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity, last_updated) VALUES (2, 'Product B', 200, '2022-01-02 09:00:00') ON CONFLICT (id) DO UPDATE SET product_name = 'Product B', quantity = 250, last_updated = '2022-01-06 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity, last_updated) VALUES (3, 'Product C', 150, '2022-01-03 11:00:00') ON CONFLICT (id) DO UPDATE SET product_name = 'Product C', quantity = 180, last_updated = '2022-01-07 14:00:00';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity, last_updated) VALUES (4, 'Product D', 300, '2022-01-04 08:00:00') ON CONFLICT (id) DO UPDATE SET product_name = 'Product D', quantity = 350, last_updated = '2022-01-08 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO stock_levels (id, product_name, quantity, last_updated) VALUES (5, 'Product E', 250, '2022-01-05 10:00:00') ON CONFLICT (id) DO UPDATE SET product_name = 'Product E', quantity = 280, last_updated = '2022-01-09 11:00:00';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_id, sales_date, sales_amount) VALUES (1, 1, '2022-01-01', 500.00) ON CONFLICT (id) DO UPDATE SET product_id = 1, sales_date = '2022-01-01', sales_amount = 600.00;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_id, sales_date, sales_amount) VALUES (2, 2, '2022-01-02', 800.00) ON CONFLICT (id) DO UPDATE SET product_id = 2, sales_date = '2022-01-02', sales_amount = 900.00;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_id, sales_date, sales_amount) VALUES (3, 3, '2022-01-03', 700.00) ON CONFLICT (id) DO UPDATE SET product_id = 3, sales_date = '2022-01-03', sales_amount = 750.00;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_id, sales_date, sales_amount) VALUES (4, 4, '2022-01-04', 1000.00) ON CONFLICT (id) DO UPDATE SET product_id = 4, sales_date = '2022-01-04', sales_amount = 1200.00;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO sales_performance (id, product_id, sales_date, sales_amount) VALUES (5, 5, '2022-01-05', 900.00) ON CONFLICT (id) DO UPDATE SET product_id = 5, sales_date = '2022-01-05', sales_amount = 950.00;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO revenue (id, total_revenue, revenue_date) VALUES (1, 5000.00, '2022-01-01') ON CONFLICT (id) DO UPDATE SET total_revenue = 5000.00, revenue_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO revenue (id, total_revenue, revenue_date) VALUES (2, 8000.00, '2022-01-02') ON CONFLICT (id) DO UPDATE SET total_revenue = 8000.00, revenue_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO revenue (id, total_revenue, revenue_date) VALUES (3, 7000.00, '2022-01-03') ON CONFLICT (id) DO UPDATE SET total_revenue = 7000.00, revenue_date = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO revenue (id, total_revenue, revenue_date) VALUES (4, 10000.00, '2022-01-04') ON CONFLICT (id) DO UPDATE SET total_revenue = 10000.00, revenue_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO revenue (id, total_revenue, revenue_date) VALUES (5, 9000.00, '2022-01-05') ON CONFLICT (id) DO UPDATE SET total_revenue = 9000.00, revenue_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity, last_updated) VALUES (1, 'Product A', 100, '2021-10-15') ON DUPLICATE KEY UPDATE quantity = quantity + 10, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity, last_updated) VALUES (2, 'Product B', 200, '2021-10-15') ON DUPLICATE KEY UPDATE quantity = quantity + 20, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity, last_updated) VALUES (3, 'Product C', 150, '2021-10-15') ON DUPLICATE KEY UPDATE quantity = quantity + 15, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity, last_updated) VALUES (4, 'Product D', 120, '2021-10-15') ON DUPLICATE KEY UPDATE quantity = quantity + 12, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity, last_updated) VALUES (5, 'Product E', 90, '2021-10-15') ON DUPLICATE KEY UPDATE quantity = quantity + 9, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (id, product_name, quantity, last_updated) VALUES (6, 'Product F', 80, '2021-10-15') ON DUPLICATE KEY UPDATE quantity = quantity + 8, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n   id INT PRIMARY KEY,\n   product_name VARCHAR(50),\n   quantity INT,\n   last_updated TIMESTAMP\n);\n\n\nCREATE TABLE sales_performance (\n   id INT PRIMARY KEY,\n   product_id INT,\n   sales_date DATE,\n   sales_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE revenue (\n   id INT PRIMARY KEY,\n   total_revenue DECIMAL(12, 2),\n   revenue_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO stock_leve...",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (product_id, quantity) VALUES (101, 50) ON DUPLICATE KEY UPDATE quantity = 50",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (order_id, product_id, sales_amount, sales_date) VALUES (201, 101, 100.00, '2022-06-15') ON DUPLICATE KEY UPDATE sales_amount = 100.00, sales_date = '2022-06-15'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO revenue (revenue_id, total_revenue, month_year) VALUES (301, 5000.00, '2022-06-01') ON DUPLICATE KEY UPDATE total_revenue = 5000.00, month_year = '2022-06-01'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO reports (report_id, report_type, report_date, report_content) VALUES (401, 'Sales Report', '2022-06-15', 'Total sales for the month') ON DUPLICATE KEY UPDATE report_type = 'Sales Report', report_date = '2022-06-15', report_content = 'Total sales for the month'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (product_id, quantity) VALUES (102, 75) ON DUPLICATE KEY UPDATE quantity = 75",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (order_id, product_id, sales_amount, sales_date) VALUES (202, 102, 120.50, '2022-06-16') ON DUPLICATE KEY UPDATE sales_amount = 120.50, sales_date = '2022-06-16'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO revenue (revenue_id, total_revenue, month_year) VALUES (302, 6000.00, '2022-06-01') ON DUPLICATE KEY UPDATE total_revenue = 6000.00, month_year = '2022-06-01'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO reports (report_id, report_type, report_date, report_content) VALUES (402, 'Financial Report', '2022-06-16', 'Financial summary for the month') ON DUPLICATE KEY UPDATE report_type = 'Financial Report', report_date = '2022-06-16', report_content = 'Financial summary for the month'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (product_id, quantity) VALUES (103, 40) ON DUPLICATE KEY UPDATE quantity = 40",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (order_id, product_id, sales_amount, sales_date) VALUES (203, 103, 80.20, '2022-06-17') ON DUPLICATE KEY UPDATE sales_amount = 80.20, sales_date = '2022-06-17'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO revenue (revenue_id, total_revenue, month_year) VALUES (303, 7000.00, '2022-06-01') ON DUPLICATE KEY UPDATE total_revenue = 7000.00, month_year = '2022-06-01'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO reports (report_id, report_type, report_date, report_content) VALUES (403, 'Performance Report', '2022-06-17', 'Performance metrics for the month') ON DUPLICATE KEY UPDATE report_type = 'Performance Report', report_date = '2022-06-17', report_content = 'Performance metrics for the month'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (product_id, quantity) VALUES (104, 60) ON DUPLICATE KEY UPDATE quantity = 60",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (order_id, product_id, sales_amount, sales_date) VALUES (204, 104, 150.75, '2022-06-18') ON DUPLICATE KEY UPDATE sales_amount = 150.75, sales_date = '2022-06-18'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO revenue (revenue_id, total_revenue, month_year) VALUES (304, 8000.00, '2022-06-01') ON DUPLICATE KEY UPDATE total_revenue = 8000.00, month_year = '2022-06-01'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO reports (report_id, report_type, report_date, report_content) VALUES (404, 'Analysis Report', '2022-06-18', 'Data analysis for the month') ON DUPLICATE KEY UPDATE report_type = 'Analysis Report', report_date = '2022-06-18', report_content = 'Data analysis for the month'",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO stock_levels (product_id, quantity) VALUES (1, 100) ON DUPLICATE KEY UPDATE quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO sales_performance (order_id, product_id, sales_amount, sales_date) VALUES (1, 1, 50.00, '2022-01-15') ON DUPLICATE KEY UPDATE sales_amount = 50.00;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO revenue (revenue_id, total_revenue, month_year) VALUES (1, 1000.00, '2022-01-01') ON DUPLICATE KEY UPDATE total_revenue = 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE stock_levels (\n  product_id INT PRIMARY KEY,\n  quantity INT\n);\n\nCREATE TABLE sales_performance (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  sales_amount DECIMAL,\n  sales_date DATE\n);\n\nCREATE TABLE revenue (\n  revenue_id INT PRIMARY KEY,\n  total_revenue DECIMAL,\n  month_year DATE\n);\n\nCREATE TABLE reports (\n  report_id INT PRIMARY KEY,\n  report_type VARCHAR(50),\n  report_date DATE,\n  report_content TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO reports (report_id, report_type, report_date, report_content) VALUES (1, 'monthly', '2022-01-01', 'Monthly Sales Report') ON DUPLICATE KEY UPDATE report_content = 'Monthly Sales Report';",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO StockLevels(stock_id, product_name, current_stock) VALUES (1, 'Product A', 100) ON DUPLICATE KEY UPDATE current_stock = 100",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO SalesPerformance(sale_id, product_name, sale_date, quantity_sold, revenue) VALUES (1, 'Product A', '2023-01-01', 50, 500.00) ON DUPLICATE KEY UPDATE quantity_sold = 50, revenue = 500.00",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO RevenueReports(report_id, report_date, total_revenue) VALUES (1, '2023-01-01', 1000.00) ON DUPLICATE KEY UPDATE total_revenue = 1000.00",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO SalesReports(report_id, report_date, total_sales) VALUES (1, '2023-01-01', 50) ON DUPLICATE KEY UPDATE total_sales = 50",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO ProductDetails(product_id, product_name, unit_price, category) VALUES (1, 'Product A', 10.00, 'Category A') ON DUPLICATE KEY UPDATE unit_price = 10.00, category = 'Category A'",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO StockLevels (stock_id, product_name, current_stock) VALUES (1, 'Product A', 100) ON DUPLICATE KEY UPDATE current_stock = current_stock + 10;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO SalesPerformance (sale_id, product_name, sale_date, quantity_sold, revenue) VALUES (1001, 'Product X', '2023-10-15', 50, 500.00) ON DUPLICATE KEY UPDATE quantity_sold = quantity_sold + 5, revenue = revenue + 50.00;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO RevenueReports (report_id, report_date, total_revenue) VALUES (101, '2023-10-01', 1000.00) ON DUPLICATE KEY UPDATE total_revenue = total_revenue + 100.00;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO SalesReports (report_id, report_date, total_sales) VALUES (201, '2023-10-01', 50) ON DUPLICATE KEY UPDATE total_sales = total_sales + 5;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO ProductDetails (product_id, product_name, unit_price, category) VALUES (101, 'Product Y', 25.00, 'Electronics') ON DUPLICATE KEY UPDATE unit_price = 28.00, category = 'Gadgets';",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO StockLevels (stock_id, product_name, current_stock) VALUES (2, 'Product B', 50) ON DUPLICATE KEY UPDATE current_stock = current_stock + 5;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO SalesPerformance (sale_id, product_name, sale_date, quantity_sold, revenue) VALUES (1002, 'Product Z', '2023-10-15', 30, 350.00) ON DUPLICATE KEY UPDATE quantity_sold = quantity_sold + 3, revenue = revenue + 30.00;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO RevenueReports (report_id, report_date, total_revenue) VALUES (102, '2023-10-01', 750.00) ON DUPLICATE KEY UPDATE total_revenue = total_revenue + 75.00;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO SalesReports (report_id, report_date, total_sales) VALUES (202, '2023-10-01', 30) ON DUPLICATE KEY UPDATE total_sales = total_sales + 3;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO ProductDetails (product_id, product_name, unit_price, category) VALUES (102, 'Product Z', 30.00, 'Clothing') ON DUPLICATE KEY UPDATE unit_price = 32.00, category = 'Fashion';",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO StockLevels (stock_id, product_name, current_stock) VALUES (3, 'Product C', 75) ON DUPLICATE KEY UPDATE current_stock = current_stock + 7;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO SalesPerformance (sale_id, product_name, sale_date, quantity_sold, revenue) VALUES (1003, 'Product Y', '2023-10-15', 25, 300.00) ON DUPLICATE KEY UPDATE quantity_sold = quantity_sold + 2, revenue = revenue + 20.00;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO RevenueReports (report_id, report_date, total_revenue) VALUES (103, '2023-10-01', 1200.00) ON DUPLICATE KEY UPDATE total_revenue = total_revenue + 120.00;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO SalesReports (report_id, report_date, total_sales) VALUES (203, '2023-10-01', 25) ON DUPLICATE KEY UPDATE total_sales = total_sales + 2;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO ProductDetails (product_id, product_name, unit_price, category) VALUES (103, 'Product X', 20.00, 'Toys') ON DUPLICATE KEY UPDATE unit_price = 22.00, category = 'Kids';",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO StockLevels (stock_id, product_name, current_stock) VALUES (4, 'Product D', 120) ON DUPLICATE KEY UPDATE current_stock = current_stock + 12;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO SalesPerformance (sale_id, product_name, sale_date, quantity_sold, revenue) VALUES (1004, 'Product A', '2023-10-15', 35, 400.00) ON DUPLICATE KEY UPDATE quantity_sold = quantity_sold + 3, revenue = revenue + 40.00;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO RevenueReports (report_id, report_date, total_revenue) VALUES (104, '2023-10-01', 900.00) ON DUPLICATE KEY UPDATE total_revenue = total_revenue + 90.00;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO SalesReports (report_id, report_date, total_sales) VALUES (204, '2023-10-01', 35) ON DUPLICATE KEY UPDATE total_sales = total_sales + 3;",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO ProductDetails (product_id, product_name, unit_price, category) VALUES (104, 'Product B', 35.00, 'Tools') ON DUPLICATE KEY UPDATE unit_price = 38.00, category = 'Hardware';",
  "### TABLEDATA\n\nCREATE TABLE StockLevels (\n    stock_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT\n);\n\n\nCREATE TABLE SalesPerformance (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL(10, 2)\n);\n\n\nCREATE TABLE RevenueReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_revenue DECIMAL(12, 2)\n);\n\n\nCREATE TABLE SalesReports (\n    report_id INT PRIMARY KEY,\n    report_date DATE,\n    total_sales INT\n);\n\n\nCREATE TABLE ProductDetails (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(8, 2),\n    category VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO StockLevels (stock_id, product_name, current_stock) VALUES (5, 'Product E', 90) ON DUPLICATE KEY UPDATE current_stock = current_stock + 9;"
]