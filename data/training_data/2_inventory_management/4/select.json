[
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT order_id, product_name FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, order_date FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT order_id, delivery_date FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE product_name = 'Shoes';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE delivery_date < '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(order_id) FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(order_id) FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT MIN(order_id) FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders ORDER BY order_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders ORDER BY delivery_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE product_name LIKE '%Shirt%';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT SUM(order_id) FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT order_id, product_name FROM Orders WHERE product_name LIKE '%shirt%';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_orders FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_orders FROM Orders GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders ORDER BY order_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE delivery_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE delivery_date < '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, SUM(order_id) AS total_order_ids FROM Orders GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT order_id, product_name, order_date, delivery_date FROM Orders WHERE order_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, delivery_date FROM Orders WHERE order_date > '2022-01-01' AND order_date < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE delivery_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_orders FROM Orders WHERE order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE product_name = 'Shoes' AND order_date < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT order_id, product_name, delivery_date FROM Orders WHERE product_name IN ('Shirt', 'Pants');",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(order_id) AS avg_order_id FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(order_id) AS max_order_id FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT MIN(order_id) AS min_order_id FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE YEAR(order_date) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT,\n  product_name VARCHAR(255),\n  order_date DATE,\n  delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE MONTH(order_date) = 1;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT order_id, product_name FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT order_id, quantity FROM Orders WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE delivery_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT order_id, product_name, quantity FROM Orders WHERE delivery_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_orders FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(quantity) AS max_quantity FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) AS avg_quantity FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(delivery_date) AS earliest_delivery FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT order_id, product_name FROM Orders ORDER BY delivery_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT order_id, product_name FROM Orders ORDER BY quantity ASC;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT order_id, product_name FROM Orders ORDER BY delivery_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM Orders GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(quantity) AS avg_quantity FROM Orders GROUP BY product_name HAVING avg_quantity > 50;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, delivery_date, quantity FROM Orders WHERE product_name LIKE '%Apple%';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE quantity BETWEEN 10 AND 20;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE delivery_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE LOWER(product_name) = 'iphone';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE quantity > 10 AND delivery_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT order_id, product_name FROM Orders WHERE quantity >= 5 AND delivery_date < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE product_name LIKE '%shirt%' AND quantity = 1;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS order_count FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM Orders GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders ORDER BY delivery_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE delivery_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) AS avg_quantity FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(quantity) AS max_quantity, MIN(quantity) AS min_quantity FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_id IN (1, 5, 10);",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE product_name IN ('Apple', 'Banana', 'Orange');",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_id = 1 OR order_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE quantity BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE delivery_date > '2022-09-01' AND delivery_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT order_id, quantity, delivery_date FROM Orders WHERE product_name = 'Laptop' ORDER BY delivery_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE quantity > 5 AND product_name NOT LIKE '%computer%';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE product_name = 'Phone' AND (quantity > 10 OR quantity < 3);",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  delivery_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE delivery_date BETWEEN '2022-04-01' AND '2022-07-01';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT order_id, product_name, quantity FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT order_date, delivery_date FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_email, customer_phone FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, unit_price FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT quantity_in_stock FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT order_id, product_name, quantity FROM Orders WHERE order_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM Customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM Products WHERE quantity_in_stock < 10;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM Orders JOIN Customers ON Orders.order_id = Customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM Orders JOIN Products ON Orders.product_name = Products.product_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM Customers JOIN Products ON Customers.customer_id = Products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Customers.customer_name FROM Orders JOIN Customers ON Orders.order_id = Customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Products.product_name FROM Orders JOIN Products ON Orders.product_name = Products.product_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Products.unit_price FROM Customers JOIN Products ON Customers.customer_id = Products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Customers.customer_name, Products.product_name FROM Orders JOIN Customers ON Orders.order_id = Customers.customer_id JOIN Products ON Orders.product_name = Products.product_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Orders.order_date, Customers.customer_name, Customers.customer_email, Products.product_name, Products.unit_price FROM Orders JOIN Customers ON Orders.order_id = Customers.customer_id JOIN Products ON Orders.product_name = Products.product_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT order_id, product_name, quantity, order_date FROM Orders WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM Orders WHERE order_date >= '2022-01-01' AND order_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM Customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM Products WHERE unit_price > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock FROM Products WHERE quantity_in_stock < 50;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone FROM Customers WHERE customer_email LIKE '%@domain.com';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM Orders INNER JOIN Customers ON Orders.order_id = Customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM Orders LEFT JOIN Customers ON Orders.order_id = Customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Customers.customer_name, Customers.customer_email FROM Orders JOIN Customers ON Orders.order_id = Customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Customers.customer_name, Products.product_name FROM Orders JOIN Customers ON Orders.order_id = Customers.customer_id JOIN Products ON Orders.product_name = Products.product_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(unit_price * quantity) AS Total_Sales FROM Customers JOIN Orders ON Customers.customer_id = Orders.order_id JOIN Products ON Products.product_name = Orders.product_name GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(quantity) AS Avg_Quantity FROM Customers JOIN Orders ON Customers.customer_id = Orders.order_id GROUP BY customer_name HAVING AVG(quantity) > 5;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(order_id) AS Total_Orders FROM Products JOIN Orders ON Products.product_name = Orders.product_name GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(order_id) AS Total_Orders FROM Customers JOIN Orders ON Customers.customer_id = Orders.order_id GROUP BY customer_name HAVING COUNT(order_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(unit_price) AS Max_Unit_Price FROM Customers JOIN Orders ON Customers.customer_id = Orders.order_id JOIN Products ON Orders.product_name = Products.product_name GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT MAX(unit_price) AS Highest_Price FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT MIN(unit_price) AS Lowest_Price FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, delivery_date FROM Orders JOIN Customers ON Orders.order_id = Customers.customer_id ORDER BY delivery_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock FROM Products ORDER BY quantity_in_stock DESC;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE product_name IN (SELECT product_name FROM Products WHERE unit_price > 100.00);",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT product_name, quantity FROM Orders WHERE customer_name = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT * FROM Orders ORDER BY delivery_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT order_id, customer_name FROM Orders WHERE product_name = 'Laptop';",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE quantity >= 10;",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE delivery_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT MAX(quantity) FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT order_id, product_name, customer_name FROM Orders WHERE order_id = 1005;",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT SUM(quantity) FROM Orders WHERE customer_name = 'Alice Johnson';",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT DISTINCT customer_name FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_id = 1002 AND customer_name = 'Peter Brown';",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT AVG(quantity) FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT order_id, product_name, delivery_date FROM Orders WHERE customer_name LIKE '%Harris%';",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE product_name LIKE '%Chair%';",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT MIN(delivery_date) FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT order_id, delivery_date FROM Orders WHERE quantity < 5;",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS Total_Orders FROM Orders GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE customer_name IN ('Alice Johnson','David Lee');",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT AVG(quantity) AS Avg_Quantity, MAX(quantity) AS Max_Quantity FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE quantity > 10 AND delivery_date >= '2023-01-01'",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT order_id, customer_name FROM Orders WHERE product_name = 'Phone' AND quantity >= 5",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT COUNT(order_id) AS total_orders FROM Orders WHERE delivery_date BETWEEN '2023-01-01' AND '2023-12-31'",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM Orders GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(order_id) AS total_orders FROM Orders GROUP BY customer_name HAVING COUNT(order_id) > 1",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE customer_name LIKE '%Smith%'",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT order_id, product_name, quantity FROM Orders WHERE quantity = (SELECT MAX(quantity) FROM Orders)",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT product_name, AVG(quantity) AS avg_quantity FROM Orders GROUP BY product_name HAVING AVG(quantity) > 10",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE delivery_date = (SELECT MIN(delivery_date) FROM Orders)",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT DISTINCT customer_name FROM Orders WHERE delivery_date < '2023-08-01'",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT product_name, quantity FROM Orders ORDER BY quantity DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(order_id) AS total_orders FROM Orders GROUP BY customer_name ORDER BY total_orders DESC",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT * FROM Orders JOIN Customers ON Orders.customer_name = Customers.customer_name",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM Orders WHERE delivery_date > '2023-06-30' GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(order_id) AS total_orders FROM Orders GROUP BY customer_name ORDER BY total_orders DESC LIMIT 3",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT product_name, delivery_date FROM Orders WHERE delivery_date BETWEEN '2023-09-01' AND '2024-01-01'",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT customer_name, MAX(quantity) AS max_quantity FROM Orders GROUP BY customer_name HAVING MAX(quantity) > 20",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_id = 1001 OR order_id = 1005 OR order_id = 1008",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT customer_name, AVG(quantity) AS avg_quantity FROM Orders GROUP BY customer_name ORDER BY avg_quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE Orders (order_id INT PRIMARY KEY, product_name VARCHAR(255), quantity INT, customer_name VARCHAR(255), delivery_date DATE)\n\n### STATEMENT\n\nSELECT delivery_date, COUNT(order_id) AS total_orders FROM Orders GROUP BY delivery_date ORDER BY total_orders DESC",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT order_id, product_name, quantity FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT email, phone_number FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, category FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT description FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM OrdersHistory;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT history_id, order_id, status FROM OrdersHistory;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT timestamp FROM OrdersHistory;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM DeliveryStatus;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT delivery_id, order_id FROM DeliveryStatus;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT delivery_date, status FROM DeliveryStatus;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT order_id, delivery_date, status FROM DeliveryStatus;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, unit_price FROM Orders INNER JOIN Products ON Orders.product_name = Products.product_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM Customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM Products WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM Customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, category, price FROM Products WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Orders.product_name, Products.price FROM Orders JOIN Products ON Orders.product_name = Products.product_name;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Orders.quantity, Orders.unit_price, Customers.customer_name FROM Orders JOIN Customers ON Orders.order_id = Customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Orders.order_date, OrdersHistory.status FROM Orders JOIN OrdersHistory ON Orders.order_id = OrdersHistory.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Orders.product_name, DeliveryStatus.status FROM Orders JOIN DeliveryStatus ON Orders.order_id = DeliveryStatus.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Orders.order_date, DeliveryStatus.delivery_date FROM Orders JOIN DeliveryStatus ON Orders.order_id = DeliveryStatus.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Orders.product_name, Orders.quantity, Customers.customer_name, DeliveryStatus.status FROM Orders JOIN Customers ON Orders.order_id = Customers.customer_id JOIN DeliveryStatus ON Orders.order_id = DeliveryStatus.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Orders.product_name, Products.price, OrdersHistory.timestamp FROM Orders JOIN Products ON Orders.product_name = Products.product_name JOIN OrdersHistory ON Orders.order_id = OrdersHistory.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Orders.order_date, OrdersHistory.status FROM Customers JOIN Orders ON Customers.customer_id = Orders.order_id JOIN OrdersHistory ON Orders.order_id = OrdersHistory.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Orders.product_name, Orders.quantity, OrdersHistory.status, DeliveryStatus.delivery_date FROM Orders JOIN OrdersHistory ON Orders.order_id = OrdersHistory.order_id JOIN DeliveryStatus ON Orders.order_id = DeliveryStatus.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Customers.email, Products.product_name, Orders.quantity, Orders.unit_price, DeliveryStatus.status FROM Customers JOIN Orders ON Customers.customer_id = Orders.order_id JOIN Products ON Orders.product_name = Products.product_name JOIN DeliveryStatus ON Orders.order_id = DeliveryStatus.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Customers.address, DeliveryStatus.delivery_date, DeliveryStatus.status FROM Customers JOIN Orders ON Customers.customer_id = Orders.order_id JOIN DeliveryStatus ON Orders.order_id = DeliveryStatus.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Orders.product_name, Orders.quantity, Products.category, DeliveryStatus.status, OrdersHistory.timestamp FROM Orders JOIN Products ON Orders.product_name = Products.product_name JOIN DeliveryStatus ON Orders.order_id = DeliveryStatus.order_id JOIN OrdersHistory ON Orders.order_id = OrdersHistory.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Customers.email, Orders.order_date, OrdersHistory.status, DeliveryStatus.delivery_date FROM Customers JOIN Orders ON Customers.customer_id = Orders.order_id JOIN OrdersHistory ON Orders.order_id = OrdersHistory.order_id JOIN DeliveryStatus ON Orders.order_id = DeliveryStatus.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Orders.order_date, OrdersHistory.status, DeliveryStatus.status FROM Customers JOIN Orders ON Customers.customer_id = Orders.order_id JOIN OrdersHistory ON Orders.order_id = OrdersHistory.order_id JOIN DeliveryStatus ON Orders.order_id = DeliveryStatus.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Orders.product_name, Products.price, DeliveryStatus.delivery_date, DeliveryStatus.status FROM Orders JOIN Products ON Orders.product_name = Products.product_name JOIN DeliveryStatus ON Orders.order_id = DeliveryStatus.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Customers.phone_number, Orders.product_name, Products.category, DeliveryStatus.status FROM Customers JOIN Orders ON Customers.customer_id = Orders.order_id JOIN Products ON Orders.product_name = Products.product_name JOIN DeliveryStatus ON Orders.order_id = DeliveryStatus.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Orders.product_name, Orders.quantity, Orders.unit_price, Customers.customer_name, Customers.phone_number, Products.price, DeliveryStatus.status FROM Orders JOIN Customers ON Orders.order_id = Customers.customer_id JOIN Products ON Orders.product_name = Products.product_name JOIN DeliveryStatus ON Orders.order_id = DeliveryStatus.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Orders (\n    order_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10,2),\n    order_date DATE,\n    delivery_date DATE\n);\n\nCREATE TABLE Customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE Products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    description TEXT,\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE OrdersHistory (\n    history_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    status VARCHAR(50),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE DeliveryStatus (\n    delivery_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Orders.order_date, OrdersHistory.status, DeliveryStatus.status, DeliveryStatus.delivery_date FROM Customers JOIN Orders ON Customers.customer_id = Orders.order_id JOIN OrdersHistory ON Orders.order_id = OrdersHistory.order_id JOIN DeliveryStatus ON Orders.order_id = DeliveryStatus.order_id;"
]