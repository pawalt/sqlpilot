[
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM customer_profiles",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT email FROM customer_profiles",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT phone_number FROM customer_profiles",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT address FROM customer_profiles",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM customer_profiles WHERE customer_id = 1",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles WHERE email LIKE '%gmail.com'",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles WHERE phone_number LIKE '555%'",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, email FROM customer_profiles WHERE customer_id > 10",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles ORDER BY last_name ASC",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles ORDER BY customer_id DESC",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customer_profiles",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(customer_id) FROM customer_profiles",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(customer_id) FROM customer_profiles",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM customer_profiles",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT SUM(customer_id) FROM customer_profiles",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles WHERE address IS NULL",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles WHERE address IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles WHERE first_name = 'John'",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles WHERE last_name = 'Doe'",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles;",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customer_profiles WHERE customer_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT first_name AS 'First Name', last_name AS 'Last Name' FROM customer_profiles WHERE last_name LIKE 'S%';",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles ORDER BY last_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, address FROM customer_profiles WHERE last_name LIKE 'D%';",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, email FROM customer_profiles WHERE address LIKE '%Street';",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles WHERE first_name = 'John' AND last_name = 'Doe';",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles WHERE email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS 'Total Customers' FROM customer_profiles;",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, phone_number FROM customer_profiles WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, address FROM customer_profiles WHERE address IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS 'Total Customers', phone_number FROM customer_profiles WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT email FROM customer_profiles;",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, address FROM customer_profiles WHERE last_name IN ('Smith', 'Johnson', 'Williams');",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customer_profiles WHERE email LIKE '%@yahoo.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles WHERE first_name = 'Alice' OR last_name = 'Smith';",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, address FROM customer_profiles WHERE address NOT LIKE '%Avenue';",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) AS 'Average Customer ID' FROM customer_profiles;",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles WHERE customer_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE customer_profiles (\n    customer_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT,\n    address TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, email FROM customer_profiles WHERE address LIKE '%Lane';",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerProfile;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email FROM CustomerProfile;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT name, address FROM CustomerProfile WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM PurchaseHistory;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT purchase_id, product_name, purchase_date FROM PurchaseHistory;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(quantity) AS total_quantity FROM PurchaseHistory GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(total_price) AS average_price FROM PurchaseHistory GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerProfile JOIN PurchaseHistory ON CustomerProfile.customer_id = PurchaseHistory.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT cp.name AS customer_name, ph.product_name, ph.purchase_date FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT cp.customer_id, cp.name, ph.product_name, ph.quantity FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT cp.customer_id, cp.name, ph.product_name, ph.quantity, ph.total_price FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT cp.customer_id, cp.name, ph.product_name, ph.purchase_date, ph.quantity, ph.total_price FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT cp.name AS customer_name, COUNT(ph.purchase_id) AS total_purchases FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id GROUP BY cp.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT cp.name AS customer_name, SUM(ph.quantity) AS total_quantity FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id GROUP BY cp.name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email, address, phone_number FROM CustomerProfile WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT name, email, total_price FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id WHERE purchase_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT cp.name AS customer_name, AVG(ph.total_price) AS average_price FROM CustomerProfile cp JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id GROUP BY cp.name HAVING AVG(ph.total_price) > 100;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT cp.customer_id, cp.name, ph.product_name, ph.purchase_date, ph.quantity, ph.total_price FROM CustomerProfile cp LEFT JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT cp.customer_id, cp.name, ph.product_name, ph.purchase_date, ph.quantity, ph.total_price FROM CustomerProfile cp RIGHT JOIN PurchaseHistory ph ON cp.customer_id = ph.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerProfile;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT name, email, address FROM CustomerProfile WHERE customer_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email, address FROM CustomerProfile WHERE name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email, address, phone_number FROM CustomerProfile WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_purchases FROM PurchaseHistory GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(total_price) AS total_spent FROM PurchaseHistory GROUP BY customer_id HAVING total_spent > 1000;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(quantity) AS average_quantity FROM PurchaseHistory GROUP BY customer_id HAVING average_quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, product_name, purchase_date FROM PurchaseHistory WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, product_name, purchase_date, quantity, total_price FROM PurchaseHistory WHERE product_name LIKE '%Shoes%' ORDER BY total_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.name, c.email, p.purchase_id, p.product_name FROM CustomerProfile c INNER JOIN PurchaseHistory p ON c.customer_id = p.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.name, p.purchase_id, p.product_name, p.quantity, p.total_price FROM CustomerProfile c LEFT JOIN PurchaseHistory p ON c.customer_id = p.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email, address, phone_number FROM CustomerProfile WHERE address IS NOT NULL AND phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email, address, phone_number FROM CustomerProfile WHERE address IS NULL OR phone_number IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email, address, phone_number FROM CustomerProfile WHERE customer_id = (SELECT MAX(customer_id) FROM CustomerProfile);",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email, address, phone_number FROM CustomerProfile WHERE customer_id IN (SELECT customer_id FROM PurchaseHistory WHERE total_price > 100);",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email, address, phone_number FROM CustomerProfile WHERE customer_id NOT IN (SELECT customer_id FROM PurchaseHistory);",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, name, SUM(total_price) AS total_spent FROM CustomerProfile LEFT JOIN PurchaseHistory ON CustomerProfile.customer_id = PurchaseHistory.customer_id GROUP BY customer_id HAVING total_spent > 5000;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, name, COUNT(*) AS total_purchases FROM CustomerProfile LEFT JOIN PurchaseHistory ON CustomerProfile.customer_id = PurchaseHistory.customer_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.name, MAX(p.total_price) AS highest_purchase FROM CustomerProfile c LEFT JOIN PurchaseHistory p ON c.customer_id = p.customer_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerProfile (\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    address VARCHAR(150),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(50),\n    purchase_date DATE,\n    quantity INT,\n    total_price FLOAT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.name, p.purchase_date FROM CustomerProfile c LEFT JOIN PurchaseHistory p ON c.customer_id = p.customer_id ORDER BY p.purchase_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_information;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM customer_information;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, age FROM customer_information;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM purchase_history;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT purchase_id, product_name, price FROM purchase_history;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, purchase_date FROM purchase_history;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM website_activity;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT session_id, page_visited, duration_seconds FROM website_activity;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, ip_address FROM website_activity;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customer_information WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM purchase_history WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT page_visited, duration_seconds FROM website_activity WHERE duration_seconds < 60;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email, phone_number FROM customer_information WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT product_name, price, purchase_date FROM purchase_history WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT page_visited, duration_seconds, ip_address FROM website_activity WHERE customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_information WHERE age BETWEEN 25 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM purchase_history WHERE price BETWEEN 50 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM website_activity WHERE duration_seconds > 120;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email, phone_number FROM customer_information WHERE first_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM purchase_history WHERE product_name LIKE '%shirt%';",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_information;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM customer_information WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, email FROM customer_information WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT first_name, last_name FROM customer_information;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, age FROM customer_information ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM purchase_history WHERE purchase_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM purchase_history WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM purchase_history WHERE customer_id IN (SELECT customer_id FROM customer_information WHERE age < 25);",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT page_visited, duration_seconds FROM website_activity WHERE session_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) AS total_customers FROM purchase_history;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM customer_information WHERE age BETWEEN 25 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, email, phone_number FROM customer_information WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(purchase_id) AS total_purchases FROM purchase_history GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, page_visited FROM customer_information JOIN website_activity ON customer_information.customer_id = website_activity.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(duration_seconds) AS avg_duration FROM website_activity GROUP BY customer_id HAVING avg_duration > 60;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(price) AS min_price, MAX(price) AS max_price FROM purchase_history GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(DISTINCT product_name) AS num_products FROM purchase_history GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customer_information WHERE customer_id = ANY (SELECT customer_id FROM purchase_history);",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(price) AS total_spent FROM purchase_history GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE customer_information (\n    customer_id INT,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    age INT,\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n    purchase_id INT,\n    customer_id INT,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    purchase_date DATE\n);\n\nCREATE TABLE website_activity (\n    session_id INT,\n    customer_id INT,\n    page_visited VARCHAR(100),\n    duration_seconds INT,\n    ip_address VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(session_id) AS num_sessions FROM website_activity GROUP BY customer_id HAVING num_sessions > 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT order_id, order_date FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, total_amount FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM addresses;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT street_address, city, state FROM addresses;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, zip_code FROM addresses;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_date FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, order_id, amount FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, o.total_amount FROM customers c, orders o WHERE c.customer_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, a.city, t.transaction_date FROM customers c, addresses a, transactions t WHERE c.customer_id = a.customer_id AND c.customer_id = t.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT o.order_id, o.total_amount, c.first_name, c.last_name, t.amount FROM orders o, customers c, transactions t WHERE o.customer_id = c.customer_id AND o.order_id = t.order_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, a.street_address, t.transaction_date, o.total_amount FROM customers c JOIN addresses a ON c.customer_id = a.customer_id JOIN transactions t ON c.customer_id = t.customer_id JOIN orders o ON c.customer_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, a.city, o.order_date, t.amount FROM customers c JOIN addresses a ON c.customer_id = a.customer_id JOIN orders o ON c.customer_id = o.customer_id JOIN transactions t ON c.customer_id = t.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.email, a.city, a.state, t.transaction_date, o.total_amount FROM customers c JOIN addresses a ON c.customer_id = a.customer_id JOIN transactions t ON c.customer_id = t.customer_id JOIN orders o ON c.customer_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT o.order_id, o.total_amount, a.street_address, a.city, a.state, t.transaction_date, t.amount FROM orders o JOIN addresses a ON o.customer_id = a.customer_id JOIN transactions t ON o.order_id = t.order_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT c.first_name, c.last_name, a.city, a.state, o.order_date, t.amount FROM customers c JOIN addresses a ON c.customer_id = a.customer_id JOIN orders o ON c.customer_id = o.customer_id JOIN transactions t ON c.customer_id = t.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE first_name = 'John';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customers WHERE customer_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, phone_number FROM customers WHERE last_name LIKE 'Smith%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM orders WHERE total_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT order_id, order_date, total_amount FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM addresses WHERE city = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, street_address, city, state, zip_code FROM addresses WHERE state = 'California';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM transactions WHERE amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, order_id, transaction_date, amount FROM transactions WHERE customer_id = 2002;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT customers.first_name, orders.order_date, transactions.amount FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN transactions ON orders.order_id = transactions.order_id WHERE customers.customer_id = 3003;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT customers.first_name, addresses.city, transactions.amount FROM customers INNER JOIN addresses ON customers.customer_id = addresses.customer_id INNER JOIN transactions ON customers.customer_id = transactions.customer_id WHERE addresses.state = 'Texas';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT customers.first_name, orders.order_date, addresses.street_address, transactions.amount FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id LEFT JOIN addresses ON customers.customer_id = addresses.customer_id LEFT JOIN transactions ON orders.order_id = transactions.order_id WHERE customers.customer_id = 4004;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT city FROM addresses;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT SUM(total_amount) AS total_sales FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT AVG(amount) AS average_transaction_amount FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(customer_id) AS total_customers FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT MAX(total_amount) AS highest_order_amount FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT MIN(amount) AS lowest_transaction_amount FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(order_id) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(order_id) >= 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, email FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT order_id, order_date FROM orders WHERE total_price > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT product_name, price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT product_id, category FROM products WHERE price < 50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM addresses;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, street_address, city, state FROM addresses;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT transaction_id, transaction_date, amount FROM transactions WHERE amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, email, phone_number FROM customers WHERE first_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT order_id, order_date, total_price FROM orders WHERE total_price BETWEEN 100 AND 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT product_name, price, category FROM products WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, street_address, city, state, zip_code FROM addresses WHERE zip_code LIKE '1%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT transaction_id, transaction_date, amount FROM transactions WHERE amount < 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT order_id, total_price FROM orders WHERE order_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE price = (SELECT MAX(price) FROM products);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, email, phone_number FROM customers WHERE customer_id = (SELECT customer_id FROM addresses WHERE city = 'New York');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customers WHERE last_name LIKE 'Smith%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, email, phone_number FROM customers WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, phone_number FROM customers WHERE phone_number LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM orders WHERE order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT order_id, total_price FROM orders WHERE total_price > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM products WHERE price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, category FROM products WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM addresses WHERE city = 'New York' AND state = 'NY';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT address_id, street_address, zip_code FROM addresses WHERE zip_code LIKE '1%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, transaction_date, amount FROM transactions WHERE amount >= 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customers.customer_id, customers.first_name, customers.last_name, orders.order_date FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customers.first_name AS customer_first_name, orders.total_price AS order_total_price FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customers.first_name AS customer_name, products.product_name, products.price FROM customers INNER JOIN transactions ON customers.customer_id = transactions.customer_id INNER JOIN products ON transactions.order_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customers.first_name, addresses.street_address, addresses.city, addresses.state FROM customers INNER JOIN addresses ON customers.customer_id = addresses.customer_id WHERE addresses.state <> 'CA';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customers.customer_id, MIN(transactions.amount) AS min_transaction_amount FROM customers INNER JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) FROM orders WHERE total_price > 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT AVG(price) AS avg_price, MAX(price) AS max_price, MIN(price) AS min_price FROM products WHERE category = 'Clothing';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, SUM(total_price) AS total_spent FROM orders GROUP BY customer_id HAVING total_spent > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_price DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  price DECIMAL(10, 2),\n  category VARCHAR(50)\n)\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  customer_id INT,\n  street_address VARCHAR(100),\n  city VARCHAR(50),\n  state VARCHAR(50),\n  zip_code VARCHAR(10)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  order_id INT,\n  transaction_date TIMESTAMP,\n  amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, DATE(transaction_date) AS transaction_date_only FROM transactions;"
]