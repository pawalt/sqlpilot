[
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, customer_id, notification_date FROM customer_notifications WHERE customer_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notification_text FROM customer_notifications WHERE notification_type = 'alert';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications WHERE notification_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, notification_text FROM customer_notifications WHERE customer_id = 7 AND notification_type = 'reminder';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications WHERE customer_id IN (2, 4, 6);",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications ORDER BY notification_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT notification_type FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(notification_date) FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(notification_date) FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, notification_date FROM customer_notifications WHERE notification_date BETWEEN '2021-01-01' AND '2021-05-30';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_type FROM customer_notifications WHERE notification_text LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) AS average_customer_id FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, customer_id, notification_type FROM customer_notifications WHERE notification_text IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications WHERE customer_id = 3 OR notification_type = 'reminder';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, notification_type FROM customer_notifications WHERE notification_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications WHERE customer_id = 8 AND notification_type <> 'reminder';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications WHERE customer_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_text FROM customer_notifications WHERE notification_type = 'announcement';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications WHERE notification_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customer_notifications WHERE notification_type LIKE '%offer%';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_notifications FROM customer_notifications GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT notification_type FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications ORDER BY notification_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(notification_date) AS latest_notification_date FROM customer_notifications GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_date FROM customer_notifications WHERE notification_type = 'reminder' ORDER BY notification_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notification_text, notification_date FROM customer_notifications WHERE notification_date BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications WHERE notification_type IN ('announcement', 'reminder');",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_notifications FROM customer_notifications WHERE notification_date >= '2022-01-01' GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id, MAX(id) AS max_id, MIN(id) AS min_id FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_notifications FROM customer_notifications WHERE notification_type = 'offer' OR notification_type = 'reminder' GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_notifications FROM customer_notifications GROUP BY customer_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT notification_type, notification_date FROM customer_notifications WHERE notification_date < '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_text FROM customer_notifications WHERE notification_date = (SELECT MAX(notification_date) FROM customer_notifications);",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_text FROM customer_notifications WHERE notification_text LIKE '%important%' AND notification_type = 'reminder' ORDER BY notification_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(id) AS avg_id FROM customer_notifications GROUP BY customer_id HAVING AVG(id) > 50;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_date FROM customer_notifications WHERE customer_id = 200 AND notification_type <> 'announcement';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerNotifications;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_type FROM CustomerNotifications;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT notification_message FROM CustomerNotifications WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, trigger_event FROM CustomerNotifications WHERE notification_type = 'Alert';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Reminders;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT reminder_id, reminder_message FROM Reminders;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT reminder_id, reminder_date, status FROM Reminders WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerNotifications JOIN Reminders ON CustomerNotifications.customer_id = Reminders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT cn.customer_id, cn.notification_message, r.reminder_message FROM CustomerNotifications cn JOIN Reminders r ON cn.customer_id = r.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT cn.customer_id, r.reminder_date, r.status FROM CustomerNotifications cn JOIN Reminders r ON cn.customer_id = r.customer_id WHERE cn.customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerNotifications WHERE trigger_event = 'Email';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Reminders WHERE status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_type, notification_message FROM CustomerNotifications WHERE trigger_event = 'Text';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT reminder_id, reminder_message, reminder_date FROM Reminders WHERE status = 'Completed';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT cn.customer_id, cn.notification_type, r.reminder_message FROM CustomerNotifications cn JOIN Reminders r ON cn.customer_id = r.customer_id WHERE r.status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT cn.customer_id, r.reminder_message, r.reminder_date, r.status FROM CustomerNotifications cn JOIN Reminders r ON cn.customer_id = r.customer_id WHERE cn.trigger_event = 'App';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT reminder_message FROM Reminders WHERE reminder_date < NOW();",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT reminder_id, reminder_date FROM Reminders WHERE reminder_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_type, trigger_event FROM CustomerNotifications WHERE customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_message, trigger_event FROM CustomerNotifications WHERE customer_id = 2 AND trigger_event = 'Email';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_type, notification_message FROM CustomerNotifications WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerNotifications WHERE notification_type LIKE '%Reminder%' AND trigger_event = 'Email';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS notification_count FROM CustomerNotifications GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerNotifications WHERE notification_type = 'Promotion' ORDER BY customer_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_message FROM CustomerNotifications WHERE trigger_event IN ('Email', 'SMS');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_reminders FROM Reminders GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Reminders WHERE status = 'Active' ORDER BY reminder_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, reminder_message, reminder_date FROM Reminders WHERE reminder_date >= '2022-01-01' AND reminder_date < '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, reminder_id, reminder_message FROM Reminders JOIN CustomerNotifications ON Reminders.customer_id = CustomerNotifications.customer_id WHERE notification_type = 'Alert';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT r.customer_id, r.reminder_id, n.notification_message FROM Reminders r JOIN CustomerNotifications n ON r.customer_id = n.customer_id WHERE r.status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(reminder_date) AS latest_reminder_date FROM Reminders GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerNotifications LEFT JOIN Reminders ON CustomerNotifications.customer_id = Reminders.customer_id AND Reminders.status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT r.reminder_id, r.customer_id, r.reminder_message, n.notification_message FROM Reminders r JOIN CustomerNotifications n ON r.customer_id = n.customer_id WHERE r.status = 'Active' ORDER BY r.reminder_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, status, COUNT(*) AS total_count FROM Reminders GROUP BY customer_id, status;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_active_reminders FROM Reminders WHERE status = 'Active' GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT r.customer_id, AVG(reminder_date) AS average_reminder_date FROM Reminders r JOIN CustomerNotifications n ON r.customer_id = n.customer_id GROUP BY r.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(reminder_date) AS earliest_reminder_date FROM Reminders GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerNotifications WHERE notification_type = 'Promotion' UNION SELECT * FROM CustomerNotifications WHERE notification_type = 'Alert';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_type, reminder_date FROM CustomerNotifications JOIN Reminders ON CustomerNotifications.customer_id = Reminders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT r.customer_id, r.reminder_date, n.notification_message FROM Reminders r JOIN CustomerNotifications n ON r.customer_id = n.customer_id WHERE r.reminder_date BETWEEN '2022-01-01' AND '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT notification_id, notification_type FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_message FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM notification_logs;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, notification_id FROM notification_logs;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_time, log_message FROM notification_logs;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM event_triggers;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT trigger_id, trigger_event FROM event_triggers;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT trigger_action FROM event_triggers;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT notification_id, log_time FROM customer_notifications INNER JOIN notification_logs ON customer_notifications.notification_id = notification_logs.notification_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_message FROM notification_logs WHERE notification_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM event_triggers WHERE trigger_event = 'User signup';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT trigger_event, trigger_action FROM event_triggers WHERE trigger_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_message FROM customer_notifications WHERE notification_type = 'Email';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, log_message FROM notification_logs WHERE log_time BETWEEN '2022-01-01 00:00:00' AND '2022-01-31 23:59:59';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT notification_id, trigger_event FROM customer_notifications WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT trigger_id FROM event_triggers WHERE trigger_action = 'Send Email';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(log_time) FROM notification_logs;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT notification_type FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT notification_id, customer_id FROM customer_notifications WHERE notification_type = 'reminder';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT notification_id, notification_type FROM customer_notifications WHERE trigger_event = 'email';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM notification_logs INNER JOIN customer_notifications ON notification_logs.notification_id = customer_notifications.notification_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT notification_logs.log_id, notification_logs.log_time, customer_notifications.notification_type FROM notification_logs INNER JOIN customer_notifications ON notification_logs.notification_id = customer_notifications.notification_id WHERE notification_logs.log_time >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT notification_logs.log_id, notification_logs.log_time, notification_logs.log_message FROM notification_logs JOIN customer_notifications ON notification_logs.notification_id = customer_notifications.notification_id WHERE customer_notifications.customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(notification_id) AS notification_count FROM customer_notifications GROUP BY customer_id HAVING COUNT(notification_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(notification_id) AS total_notifications FROM customer_notifications GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications WHERE notification_id IN (SELECT notification_id FROM notification_logs);",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, notification_message FROM customer_notifications LEFT JOIN notification_logs ON customer_notifications.notification_id = notification_logs.notification_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(notification_id) AS max_notification FROM customer_notifications GROUP BY customer_id HAVING MAX(notification_id) > 50;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT trigger_event, COUNT(notification_type) AS notification_count FROM customer_notifications GROUP BY trigger_event;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_type, notification_message FROM customer_notifications WHERE customer_id = (SELECT customer_id FROM customer_notifications GROUP BY customer_id HAVING COUNT(notification_id) = MAX(notification_id));",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customer_notifications WHERE trigger_event = (SELECT DISTINCT(trigger_event) FROM event_triggers);",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_message FROM customer_notifications WHERE customer_id IN (SELECT customer_id FROM notification_logs WHERE log_message LIKE '%error%');",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_type, notification_message FROM customer_notifications WHERE customer_id IN (SELECT customer_id FROM notification_logs WHERE log_message LIKE '%error%') AND notification_id NOT IN (SELECT notification_id FROM notification_logs WHERE log_message LIKE '%success%');",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_type, notification_message FROM customer_notifications WHERE customer_id IN (SELECT customer_id FROM notification_logs WHERE log_message LIKE '%error%') OR notification_id IN (SELECT notification_id FROM notification_logs WHERE log_message LIKE '%success%');",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, trigger_event FROM customer_notifications UNION SELECT customer_id, trigger_event FROM event_triggers;",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_id, log_time, notification_type AS event_type FROM notification_logs LEFT JOIN customer_notifications ON notification_logs.notification_id = customer_notifications.notification_id ORDER BY log_time DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, email_address FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM events;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT event_name, event_date FROM events;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT event_name, event_description FROM events WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT notification_type, notification_message FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT notification_type, notification_message FROM notifications WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM reminders;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT reminder_date, reminder_message FROM reminders;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT reminder_date, reminder_message FROM reminders WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, events.event_name FROM customers JOIN notifications ON customers.customer_id = notifications.customer_id JOIN events ON notifications.event_id = events.event_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, reminders.reminder_message FROM customers JOIN reminders ON customers.customer_id = reminders.customer_id WHERE customers.customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, events.event_name FROM customers JOIN notifications ON customers.customer_id = notifications.customer_id JOIN events ON notifications.event_id = events.event_id WHERE customers.customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT notifications.notification_type, events.event_name FROM notifications JOIN events ON notifications.event_id = events.event_id WHERE notifications.customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, reminders.reminder_message FROM customers LEFT JOIN reminders ON customers.customer_id = reminders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, events.event_name, notifications.notification_message FROM customers JOIN notifications ON customers.customer_id = notifications.customer_id JOIN events ON notifications.event_id = events.event_id WHERE customers.customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, events.event_name, notifications.notification_message FROM customers JOIN notifications ON customers.customer_id = notifications.customer_id JOIN events ON notifications.event_id = events.event_id WHERE events.event_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT event_name, event_date FROM events WHERE event_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, email_address, phone_number FROM customers JOIN notifications ON customers.customer_id = notifications.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT event_name, event_date, event_description FROM events WHERE event_id IN (SELECT event_id FROM notifications WHERE notification_type = 'upcoming');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, email_address, event_name FROM customers JOIN notifications ON customers.customer_id = notifications.customer_id JOIN events ON notifications.event_id = events.event_id WHERE notification_type = 'upcoming';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, notification_message FROM customers JOIN notifications ON customers.customer_id = notifications.customer_id WHERE notification_type = 'reminder';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, event_name, reminder_date FROM customers JOIN reminders ON customers.customer_id = reminders.customer_id JOIN events ON reminders.event_id = events.event_id WHERE reminder_date = '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT event_name, COUNT(*) AS total_customers FROM events JOIN notifications ON events.event_id = notifications.event_id GROUP BY event_name HAVING total_customers > 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT notification_type, COUNT(*) AS total_notifications FROM notifications GROUP BY notification_type HAVING total_notifications > 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_notifications FROM notifications JOIN customers ON notifications.customer_id = customers.customer_id GROUP BY customer_name HAVING total_notifications > 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, event_name, reminder_date FROM customers JOIN reminders ON customers.customer_id = reminders.customer_id JOIN events ON reminders.event_id = events.event_id ORDER BY reminder_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, event_name, reminder_date FROM customers JOIN reminders ON customers.customer_id = reminders.customer_id JOIN events ON reminders.event_id = events.event_id WHERE reminder_date >= '2022-03-01' ORDER BY reminder_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, event_name, reminder_date FROM customers JOIN reminders ON customers.customer_id = reminders.customer_id JOIN events ON reminders.event_id = events.event_id WHERE customer_name LIKE 'J%' ORDER BY event_name ASC, reminder_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, event_name, reminder_date FROM customers JOIN reminders ON customers.customer_id = reminders.customer_id JOIN events ON reminders.event_id = events.event_id WHERE reminder_date BETWEEN '2022-03-01' AND '2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, event_name, reminder_date FROM customers JOIN reminders ON customers.customer_id = reminders.customer_id JOIN events ON reminders.event_id = events.event_id WHERE reminder_date BETWEEN '2022-03-01' AND '2022-04-01' AND event_name LIKE '%Conference%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, event_name, reminder_date FROM customers JOIN reminders ON customers.customer_id = reminders.customer_id JOIN events ON reminders.event_id = events.event_id WHERE event_date > '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, event_id, reminder_date FROM customers CROSS JOIN reminders WHERE customer_id = 1 AND event_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, event_name, notification_message FROM customers JOIN notifications ON customers.customer_id = notifications.customer_id JOIN events ON notifications.event_id = events.event_id WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT event_name, event_date FROM events ORDER BY event_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM logs WHERE timestamp > '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, notification_type FROM notifications WHERE notification_sent = true;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT event_id, trigger_condition FROM triggers WHERE event_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM events WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers WHERE customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notification_id, notification_content FROM notifications WHERE notification_type = 'email';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM logs WHERE message LIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT event_name, event_date FROM events WHERE event_name LIKE '%workshop%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT notification_type FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(event_id) FROM events;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(event_date) FROM events;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT SUM(event_id) FROM events;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(LENGTH(message)) FROM logs;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(event_date) FROM events;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, notification_type FROM customers JOIN notifications ON customers.customer_id = notifications.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT event_name, event_date FROM events INNER JOIN notifications ON events.event_id = notifications.event_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE phone_number LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, event_id FROM notifications WHERE notification_sent = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT trigger_name, event_name FROM triggers LEFT JOIN events ON triggers.event_id = events.event_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, event_name FROM customers INNER JOIN notifications ON customers.customer_id = notifications.customer_id INNER JOIN events ON notifications.event_id = events.event_id WHERE notification_sent = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT event_name, notification_type FROM events INNER JOIN notifications ON events.event_id = notifications.event_id WHERE event_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(notification_id) AS notification_count FROM notifications GROUP BY customer_id HAVING COUNT(notification_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM logs WHERE timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-01-02 23:59:59';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(notification_sent::int) AS total_notifications_sent FROM notifications GROUP BY customer_id ORDER BY total_notifications_sent DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM notifications WHERE notification_type = 'reminder');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, event_id, notification_type FROM notifications WHERE notification_content ILIKE '%urgent%' AND notification_sent = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, event_date, notification_content FROM customers INNER JOIN notifications ON customers.customer_id = notifications.customer_id INNER JOIN events ON notifications.event_id = events.event_id WHERE notification_sent = TRUE AND event_date < CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT event_name, COUNT(notification_id) AS notification_count FROM events LEFT JOIN notifications ON events.event_id = notifications.event_id GROUP BY event_name HAVING COUNT(notification_id) > 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, trigger_name, event_name FROM customers INNER JOIN triggers ON customers.customer_id = triggers.event_id INNER JOIN events ON triggers.event_id = events.event_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, event_name, action_performed FROM customers INNER JOIN triggers ON customers.customer_id = triggers.event_id INNER JOIN events ON triggers.event_id = events.event_id WHERE trigger_condition ILIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, event_name, message FROM customers INNER JOIN triggers ON customers.customer_id = triggers.event_id INNER JOIN logs ON triggers.trigger_id = logs.log_id WHERE logs.timestamp > NOW() - INTERVAL '1 day';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT notification_type FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number, COALESCE(email, 'No email provided') AS customer_email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT event_id, event_name, DATE_PART('hour', event_date) AS event_hour FROM events;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT event_name, event_date, TO_CHAR(event_date, 'Month DD, YYYY') AS formatted_date FROM events;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, event_name, CASE WHEN notification_sent THEN 'Sent' ELSE 'Not Sent' END AS notification_status FROM notifications INNER JOIN events ON notifications.event_id = events.event_id;"
]