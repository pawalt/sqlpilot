[
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (1, 101, 'New message', 'email', '2021-10-01 10:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 101, notification_text = 'New message', notification_type = 'email', notification_date = '2021-10-01 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (2, 102, 'Reminder', 'sms', '2021-10-02 15:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 102, notification_text = 'Reminder', notification_type = 'sms', notification_date = '2021-10-02 15:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (3, 103, 'Alert', 'push', '2021-10-03 12:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 103, notification_text = 'Alert', notification_type = 'push', notification_date = '2021-10-03 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (4, 104, 'Update', 'email', '2021-10-04 09:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 104, notification_text = 'Update', notification_type = 'email', notification_date = '2021-10-04 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (5, 105, 'Meeting reminder', 'sms', '2021-10-05 14:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 105, notification_text = 'Meeting reminder', notification_type = 'sms', notification_date = '2021-10-05 14:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (6, 106, 'New offer', 'email', '2021-10-06 11:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 106, notification_text = 'New offer', notification_type = 'email', notification_date = '2021-10-06 11:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (7, 107, 'Event invitation', 'push', '2021-10-07 13:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 107, notification_text = 'Event invitation', notification_type = 'push', notification_date = '2021-10-07 13:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (8, 108, 'Payment receipt', 'email', '2021-10-08 10:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 108, notification_text = 'Payment receipt', notification_type = 'email', notification_date = '2021-10-08 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (9, 109, 'Birthday wish', 'sms', '2021-10-09 17:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 109, notification_text = 'Birthday wish', notification_type = 'sms', notification_date = '2021-10-09 17:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (10, 110, 'Promotion update', 'email', '2021-10-10 12:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 110, notification_text = 'Promotion update', notification_type = 'email', notification_date = '2021-10-10 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (11, 111, 'New feature', 'email', '2021-10-11 10:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 111, notification_text = 'New feature', notification_type = 'email', notification_date = '2021-10-11 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (12, 112, 'Urgent alert', 'push', '2021-10-12 09:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 112, notification_text = 'Urgent alert', notification_type = 'push', notification_date = '2021-10-12 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (13, 113, 'Reminder', 'sms', '2021-10-13 16:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 113, notification_text = 'Reminder', notification_type = 'sms', notification_date = '2021-10-13 16:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (14, 114, 'New message', 'email', '2021-10-14 11:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 114, notification_text = 'New message', notification_type = 'email', notification_date = '2021-10-14 11:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (15, 115, 'Event invitation', 'push', '2021-10-15 14:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 115, notification_text = 'Event invitation', notification_type = 'push', notification_date = '2021-10-15 14:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (16, 116, 'Update', 'email', '2021-10-16 09:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 116, notification_text = 'Update', notification_type = 'email', notification_date = '2021-10-16 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (17, 117, 'Meeting reminder', 'sms', '2021-10-17 15:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 117, notification_text = 'Meeting reminder', notification_type = 'sms', notification_date = '2021-10-17 15:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (18, 118, 'New offer', 'email', '2021-10-18 11:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 118, notification_text = 'New offer', notification_type = 'email', notification_date = '2021-10-18 11:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (19, 119, 'Alert', 'push', '2021-10-19 12:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 119, notification_text = 'Alert', notification_type = 'push', notification_date = '2021-10-19 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (20, 120, 'Reminder', 'sms', '2021-10-20 16:00:00') ON CONFLICT (id) DO UPDATE SET customer_id = 120, notification_text = 'Reminder', notification_type = 'sms', notification_date = '2021-10-20 16:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (1, 101, 'New product released', 'Info', '2022-01-01') ON CONFLICT (id) DO UPDATE SET customer_id = 101, notification_text = 'New product updated', notification_type = 'Info', notification_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (2, 102, 'Promotional offer', 'Offer', '2022-01-03') ON CONFLICT (id) DO UPDATE SET customer_id = 102, notification_text = 'Promotional offer updated', notification_type = 'Offer', notification_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (3, 103, 'Event reminder', 'Reminder', '2022-01-05') ON CONFLICT (id) DO UPDATE SET customer_id = 103, notification_text = 'Event reminder updated', notification_type = 'Reminder', notification_date = '2022-01-06';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (4, 104, 'Account update', 'Update', '2022-01-07') ON CONFLICT (id) DO UPDATE SET customer_id = 104, notification_text = 'Account update updated', notification_type = 'Update', notification_date = '2022-01-08';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (5, 105, 'Payment received', 'Payment', '2022-01-09') ON CONFLICT (id) DO UPDATE SET customer_id = 105, notification_text = 'Payment received updated', notification_type = 'Payment', notification_date = '2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (6, 106, 'New feature added', 'Feature', '2022-01-11') ON CONFLICT (id) DO UPDATE SET customer_id = 106, notification_text = 'New feature added updated', notification_type = 'Feature', notification_date = '2022-01-12';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (7, 107, 'Account balance low', 'Alert', '2022-01-13') ON CONFLICT (id) DO UPDATE SET customer_id = 107, notification_text = 'Account balance low updated', notification_type = 'Alert', notification_date = '2022-01-14';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (8, 108, 'Order status update', 'Status', '2022-01-15') ON CONFLICT (id) DO UPDATE SET customer_id = 108, notification_text = 'Order status update updated', notification_type = 'Status', notification_date = '2022-01-16';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (9, 109, 'Service maintenance', 'Maintenance', '2022-01-17') ON CONFLICT (id) DO UPDATE SET customer_id = 109, notification_text = 'Service maintenance updated', notification_type = 'Maintenance', notification_date = '2022-01-18';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (10, 110, 'New discount available', 'Discount', '2022-01-19') ON CONFLICT (id) DO UPDATE SET customer_id = 110, notification_text = 'New discount available updated', notification_type = 'Discount', notification_date = '2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (11, 111, 'Survey request', 'Request', '2022-01-21') ON CONFLICT (id) DO UPDATE SET customer_id = 111, notification_text = 'Survey request updated', notification_type = 'Request', notification_date = '2022-01-22';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (12, 112, 'New account created', 'New', '2022-01-23') ON CONFLICT (id) DO UPDATE SET customer_id = 112, notification_text = 'New account created updated', notification_type = 'New', notification_date = '2022-01-24';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (13, 113, 'Product out of stock', 'Stock', '2022-01-25') ON CONFLICT (id) DO UPDATE SET customer_id = 113, notification_text = 'Product out of stock updated', notification_type = 'Stock', notification_date = '2022-01-26';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (14, 114, 'Reminder for appointment', 'Appointment', '2022-01-27') ON CONFLICT (id) DO UPDATE SET customer_id = 114, notification_text = 'Reminder for appointment updated', notification_type = 'Appointment', notification_date = '2022-01-28';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (15, 115, 'System update scheduled', 'Update', '2022-01-29') ON CONFLICT (id) DO UPDATE SET customer_id = 115, notification_text = 'System update scheduled updated', notification_type = 'Update', notification_date = '2022-01-30';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (16, 116, 'New feature demo', 'Demo', '2022-01-31') ON CONFLICT (id) DO UPDATE SET customer_id = 116, notification_text = 'New feature demo updated', notification_type = 'Demo', notification_date = '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (17, 117, 'Reminder for subscription renewal', 'Subscription', '2022-02-02') ON CONFLICT (id) DO UPDATE SET customer_id = 117, notification_text = 'Reminder for subscription renewal updated', notification_type = 'Subscription', notification_date = '2022-02-03';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (18, 118, 'New feature announcement', 'Announcement', '2022-02-04') ON CONFLICT (id) DO UPDATE SET customer_id = 118, notification_text = 'New feature announcement updated', notification_type = 'Announcement', notification_date = '2022-02-05';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (19, 119, 'Payment reminder', 'Reminder', '2022-02-06') ON CONFLICT (id) DO UPDATE SET customer_id = 119, notification_text = 'Payment reminder updated', notification_type = 'Reminder', notification_date = '2022-02-07';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    notification_text TEXT,\n    notification_type VARCHAR(50),\n    notification_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (id, customer_id, notification_text, notification_type, notification_date) VALUES (20, 120, 'Account verification required', 'Verification', '2022-02-08') ON CONFLICT (id) DO UPDATE SET customer_id = 120, notification_text = 'Account verification required updated', notification_type = 'Verification', notification_date = '2022-02-09';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (1, 'Email', 'New offer!', 'New Product');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (2, 'SMS', 'Reminder', 'Appointment');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (3, 'Push Notification', 'Event Reminder', 'Event start');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (4, 'Email', 'Special promotion', 'Sales Event');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (5, 'SMS', 'Payment Reminder', 'Due Payment');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Reminders (reminder_id, customer_id, reminder_message, reminder_date, status) VALUES (1, 1, 'Meeting tomorrow', '2022-12-12 10:00:00', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Reminders (reminder_id, customer_id, reminder_message, reminder_date, status) VALUES (2, 2, 'Call back customer', '2022-12-13 14:00:00', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Reminders (reminder_id, customer_id, reminder_message, reminder_date, status) VALUES (3, 3, 'Follow-up email', '2022-12-14 09:00:00', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Reminders (reminder_id, customer_id, reminder_message, reminder_date, status) VALUES (4, 4, 'Task deadline', '2022-12-15 12:00:00', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Reminders (reminder_id, customer_id, reminder_message, reminder_date, status) VALUES (5, 5, 'Payment due', '2022-12-16 15:00:00', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (6, 'Email', 'Welcome message', 'New Signup');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (7, 'SMS', 'Feedback request', 'Service Completion');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (8, 'Push Notification', 'Reminder', 'Event starting soon');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (9, 'Email', 'Holiday promotion', 'Festive Season');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (10, 'SMS', 'Order Confirmation', 'Order Placed');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Reminders (reminder_id, customer_id, reminder_message, reminder_date, status) VALUES (6, 1, 'Check project status', '2022-12-17 11:00:00', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Reminders (reminder_id, customer_id, reminder_message, reminder_date, status) VALUES (7, 2, 'Send report', '2022-12-18 10:00:00', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Reminders (reminder_id, customer_id, reminder_message, reminder_date, status) VALUES (8, 3, 'Appointment reminder', '2022-12-19 08:00:00', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Reminders (reminder_id, customer_id, reminder_message, reminder_date, status) VALUES (9, 4, 'Submit proposal', '2022-12-20 14:00:00', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Reminders (reminder_id, customer_id, reminder_message, reminder_date, status) VALUES (10, 5, 'Review feedback', '2022-12-21 16:00:00', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (1, 'Email', 'New Offer', 'Registration') ON CONFLICT (customer_id) DO UPDATE SET notification_type = 'Email', notification_message = 'Updated Offer', trigger_event = 'Activation';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (2, 'SMS', 'Discount Code', 'Purchase') ON CONFLICT (customer_id) DO UPDATE SET notification_type = 'SMS', notification_message = 'Updated Discount Code', trigger_event = 'Repeat Purchase';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (3, 'Push Notification', 'Special Event', 'Anniversary') ON CONFLICT (customer_id) DO UPDATE SET notification_type = 'Push Notification', notification_message = 'Updated Special Event', trigger_event = 'Birthday';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (4, 'Email', 'Feedback Request', 'Feedback') ON CONFLICT (customer_id) DO UPDATE SET notification_type = 'Email', notification_message = 'Updated Feedback Request', trigger_event = 'Survey';",
  "### TABLEDATA\n\nCREATE TABLE CustomerNotifications (\n    customer_id INT PRIMARY KEY,\n    notification_type VARCHAR(50),\n    notification_message TEXT,\n    trigger_event VARCHAR(50)\n);\n\nCREATE TABLE Reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    reminder_message TEXT,\n    reminder_date TIMESTAMP,\n    status VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO CustomerNotifications (customer_id, notification_type, notification_message, trigger_event) VALUES (5, 'SMS', 'Reminder', 'Appointment') ON CONFLI...",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (1, 1001, 'Email', 'New Product Update', 'New Product Added') ON CONFLICT (notification_id) DO UPDATE SET customer_id = 1001, notification_type = 'Email', notification_message = 'Updated Product Update', trigger_event = 'Product Updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (1, 1, '2022-01-01 10:00:00', 'Notification Logged') ON CONFLICT (log_id) DO UPDATE SET notification_id = 1, log_time = '2022-01-01 10:00:00', log_message = 'Notification Updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (1, 'New Product Added', 'Send Email') ON CONFLICT (trigger_id) DO UPDATE SET trigger_event = 'Product Updated', trigger_action = 'Send Notification';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (2, 1002, 'SMS', 'Order Confirmation', 'Order Placed') ON CONFLICT (notification_id) DO UPDATE SET customer_id = 1002, notification_type = 'SMS', notification_message = 'Updated Order Confirmation', trigger_event = 'Order Placed';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (2, 2, '2022-01-02 10:00:00', 'Order Notification Logged') ON CONFLICT (log_id) DO UPDATE SET notification_id = 2, log_time = '2022-01-02 10:00:00', log_message = 'Order Notification Updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (2, 'Order Placed', 'Send SMS') ON CONFLICT (trigger_id) DO UPDATE SET trigger_event = 'Order Confirmed', trigger_action = 'Send Confirmation';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (3, 1003, 'Push Notification', 'Promotion Alert', 'Promotion Started') ON CONFLICT (notification_id) DO UPDATE SET customer_id = 1003, notification_type = 'Push Notification', notification_message = 'Updated Promotion Alert', trigger_event = 'Promotion Started';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (3, 3, '2022-01-03 10:00:00', 'Promotion Notification Logged') ON CONFLICT (log_id) DO UPDATE SET notification_id = 3, log_time = '2022-01-03 10:00:00', log_message = 'Promotion Notification Updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (3, 'Promotion Started', 'Send Push Notification') ON CONFLICT (trigger_id) DO UPDATE SET trigger_event = 'Promotion Ended', trigger_action = 'Send Promotion Ended';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (4, 1004, 'Email', 'Discount Offer', 'Discount Available') ON CONFLICT (notification_id) DO UPDATE SET customer_id = 1004, notification_type = 'Email', notification_message = 'Updated Discount Offer', trigger_event = 'Discount Updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (4, 4, '2022-01-04 10:00:00', 'Discount Notification Logged') ON CONFLICT (log_id) DO UPDATE SET notification_id = 4, log_time = '2022-01-04 10:00:00', log_message = 'Discount Notification Updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (4, 'Discount Available', 'Send Email') ON CONFLICT (trigger_id) DO UPDATE SET trigger_event = 'Discount Expired', trigger_action = 'Send Expiry Notification';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (5, 1005, 'SMS', 'Promotion Alert', 'Promotion Started') ON CONFLICT (notification_id) DO UPDATE SET customer_id = 1005, notification_type = 'SMS', notification_message = 'Updated Promotion Alert', trigger_event = 'Promotion Started';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (5, 5, '2022-01-05 10:00:00', 'Promotion Notification Logged') ON CONFLICT (log_id) DO UPDATE SET notification_id = 5, log_time = '2022-01-05 10:00:00', log_message = 'Promotion Notification Updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (5, 'Promotion Started', 'Send SMS') ON CONFLICT (trigger_id) DO UPDATE SET trigger_event = 'Promotion Ended', trigger_action = 'Send Promotion Ended';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (6, 1006, 'Push Notification', 'New Arrival Alert', 'New Product Added') ON CONFLICT (notification_id) DO UPDATE SET customer_id = 1006, notification_type = 'Push Notification', notification_message = 'Updated New Arrival Alert', trigger_event = 'New Product Added';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (6, 6, '2022-01-06 10:00:00', 'New Product Notification Logged') ON CONFLICT (log_id) DO UPDATE SET notification_id = 6, log_time = '2022-01-06 10:00:00', log_message = 'New Product Notification Updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (6, 'New Product Added', 'Send Push Notification') ON CONFLICT (trigger_id) DO UPDATE SET trigger_event = 'Product Updated', trigger_action = 'Send Updated Notification';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (7, 1007, 'Email', 'Order Confirmation', 'Order Placed') ON CONFLICT (notification_id) DO UPDATE SET customer_id = 1007, notification_type = 'Email', notification_message = 'Updated Order Confirmation', trigger_event = 'Order Placed';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (7, 7, '2022-01-07 10:00:00', 'Order Notification Logged') ON CONFLICT (log_id) DO UPDATE SET notification_id = 7, log_time = '2022-01-07 10:00:00', log_message = 'Order Notification Updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (7, 'Order Placed', 'Send Email') ON CONFLICT (trigger_id) DO UPDATE SET trigger_event = 'Order Confirmed', trigger_action = 'Send Confirmation';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (8, 1008, 'SMS', 'Promotion Alert', 'Promotion Started') ON CONFLICT (notification_id) DO UPDATE SET customer_id = 1008, notification_type = 'SMS', notification_message = 'Updated Promotion Alert', trigger_event = 'Promotion Started';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (8, 8, '2022-01-08 10:00:00', 'Promotion Notification Logged') ON CONFLICT (log_id) DO UPDATE SET notification_id = 8, log_time = '2022-01-08 10:00:00', log_message = 'Promotion Notification Updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (8, 'Promotion Started', 'Send SMS') ON CONFLICT (trigger_id) DO UPDATE SET trigger_event = 'Promotion Ended', trigger_action = 'Send Promotion Ended';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (9, 1009, 'Push Notification', 'Promotion Alert', 'Promotion Started') ON CONFLICT (notification_id) DO UPDATE SET customer_id = 1009, notification_type = 'Push Notification', notification_message = 'Updated Promotion Alert', trigger_event = 'Promotion Started';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (9, 9, '2022-01-09 10:00:00', 'Promotion Notification Logged') ON CONFLICT (log_id) DO UPDATE SET notification_id = 9, log_time = '2022-01-09 10:00:00', log_message = 'Promotion Notification Updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (9, 'Promotion Started', 'Send Push Notification') ON CONFLICT (trigger_id) DO UPDATE SET trigger_event = 'Promotion Ended', trigger_action = 'Send Promotion Ended';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (10, 1010, 'Email', 'Discount Offer', 'Discount Available') ON CONFLICT (notification_id) DO UPDATE SET customer_id = 1010, notification_type = 'Email', notification_message = 'Updated Discount Offer', trigger_event = 'Discount Updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (10, 10, '2022-01-10 10:00:00', 'Discount Notification Logged') ON CONFLICT (log_id) DO UPDATE SET notification_id = 10, log_time = '2022-01-10 10:00:00', log_message = 'Discount Notification Updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (10, 'Discount Available', 'Send Email') ON CONFLICT (trigger_id) DO UPDATE SET trigger_event = 'Discount Expired', trigger_action = 'Send Expiry Notification';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (1, 101, 'Email', 'New Product Launch', 'Product_Added') ON DUPLICATE KEY UPDATE notification_message = 'Updated Message';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (2, 102, 'SMS', 'Flash Sale Alert', 'Sale_Event') ON DUPLICATE KEY UPDATE notification_type = 'Text Message';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (3, 103, 'Push Notification', 'Limited Time Offer', 'Sale_Event') ON DUPLICATE KEY UPDATE trigger_event = 'Offer_Ended';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (1, 1, '2022-01-01 08:00:00', 'Log entry 1') ON DUPLICATE KEY UPDATE log_message = 'Log updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (2, 2, '2022-01-02 10:00:00', 'Log entry 2') ON DUPLICATE KEY UPDATE log_time = '2022-01-02 11:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (3, 3, '2022-01-03 12:00:00', 'Log entry 3') ON DUPLICATE KEY UPDATE log_message = 'Log changed';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (1, 'Product_Added', 'Send_Email') ON DUPLICATE KEY UPDATE trigger_action = 'Send_Notification';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (2, 'Sale_Event', 'Send_SMS') ON DUPLICATE KEY UPDATE trigger_event = 'Promotion_Started';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (3, 'Offer_Ended', 'Send_Push') ON DUPLICATE KEY UPDATE trigger_action = 'Notify_Ended';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (4, 104, 'Email', 'Special Discount', 'Sale_Event') ON DUPLICATE KEY UPDATE notification_message = 'Discount Updated';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (5, 105, 'SMS', 'New Arrivals Alert', 'Product_Added') ON DUPLICATE KEY UPDATE notification_type = 'Text Campaign';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (6, 106, 'Push Notification', 'Exclusive Offer', 'Sale_Event') ON DUPLICATE KEY UPDATE trigger_event = 'Offer_Extended';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (4, 4, '2022-01-04 14:00:00', 'Log entry 4') ON DUPLICATE KEY UPDATE log_message = 'Updated Log';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (5, 5, '2022-01-05 16:00:00', 'Log entry 5') ON DUPLICATE KEY UPDATE log_time = '2022-01-05 17:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO notification_logs (log_id, notification_id, log_time, log_message) VALUES (6, 6, '2022-01-06 18:00:00', 'Log entry 6') ON DUPLICATE KEY UPDATE log_message = 'Changed log entry';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (4, 'Product_Added', 'Send_Email') ON DUPLICATE KEY UPDATE trigger_action = 'Send_Notification';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (5, 'Sale_Event', 'Send_SMS') ON DUPLICATE KEY UPDATE trigger_event = 'Promotion_Launched';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO event_triggers (trigger_id, trigger_event, trigger_action) VALUES (6, 'Offer_Ended', 'Send_Push') ON DUPLICATE KEY UPDATE trigger_action = 'Notify_Ended';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (7, 107, 'Email', 'Flash Sale', 'Sale_Event') ON DUPLICATE KEY UPDATE notification_message = 'Sale Announcement';",
  "### TABLEDATA\n\nCREATE TABLE customer_notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    notification_type VARCHAR(255) NOT NULL,\n    notification_message TEXT,\n    trigger_event VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE notification_logs (\n    log_id INT PRIMARY KEY,\n    notification_id INT NOT NULL,\n    log_time TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\nCREATE TABLE event_triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_event VARCHAR(255) NOT NULL,\n    trigger_action VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customer_notifications (notification_id, customer_id, notification_type, notification_message, trigger_event) VALUES (8, 108, 'SMS', 'Restock Alert', 'Product_Added') ON DUPLICATE KEY UPDATE notification_type = 'Text Notification';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email_address, phone_number) VALUES (1, 'John Doe', 'johndoe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', email_address='johndoe@example.com', phone_number='123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_date, event_description) VALUES (1, 'Event A', '2022-10-15', 'Description A') ON DUPLICATE KEY UPDATE event_name='Event A', event_date='2022-10-15', event_description='Description A';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_message) VALUES (1, 1, 1, 'Info', 'Notification message A') ON DUPLICATE KEY UPDATE notification_type='Info', notification_message='Notification message A';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO reminders (reminder_id, customer_id, event_id, reminder_date, reminder_message) VALUES (1, 1, 1, '2022-10-10', 'Reminder message A') ON DUPLICATE KEY UPDATE reminder_date='2022-10-10', reminder_message='Reminder message A';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email_address, phone_number) VALUES (2, 'Alice Smith', 'alice@example.com', '987-654-3210') ON DUPLICATE KEY UPDATE customer_name='Alice Smith', email_address='alice@example.com', phone_number='987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_date, event_description) VALUES (2, 'Event B', '2022-11-20', 'Description B') ON DUPLICATE KEY UPDATE event_name='Event B', event_date='2022-11-20', event_description='Description B';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_message) VALUES (2, 2, 2, 'Reminder', 'Notification message B') ON DUPLICATE KEY UPDATE notification_type='Reminder', notification_message='Notification message B';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO reminders (reminder_id, customer_id, event_id, reminder_date, reminder_message) VALUES (2, 2, 2, '2022-11-15', 'Reminder message B') ON DUPLICATE KEY UPDATE reminder_date='2022-11-15', reminder_message='Reminder message B';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email_address, phone_number) VALUES (3, 'Bob Johnson', 'bob@example.com', '555-123-4567') ON DUPLICATE KEY UPDATE customer_name='Bob Johnson', email_address='bob@example.com', phone_number='555-123-4567';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_date, event_description) VALUES (3, 'Event C', '2022-12-25', 'Description C') ON DUPLICATE KEY UPDATE event_name='Event C', event_date='2022-12-25', event_description='Description C';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_message) VALUES (3, 3, 3, 'Info', 'Notification message C') ON DUPLICATE KEY UPDATE notification_type='Info', notification_message='Notification message C';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO reminders (reminder_id, customer_id, event_id, reminder_date, reminder_message) VALUES (3, 3, 3, '2022-12-20', 'Reminder message C') ON DUPLICATE KEY UPDATE reminder_date='2022-12-20', reminder_message='Reminder message C';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email_address, phone_number) VALUES (4, 'Sarah Brown', 'sarah@example.com', '777-888-9999') ON DUPLICATE KEY UPDATE customer_name='Sarah Brown', email_address='sarah@example.com', phone_number='777-888-9999';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_date, event_description) VALUES (4, 'Event D', '2023-01-05', 'Description D') ON DUPLICATE KEY UPDATE event_name='Event D', event_date='2023-01-05', event_description='Description D';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_message) VALUES (4, 4, 4, 'Reminder', 'Notification message D') ON DUPLICATE KEY UPDATE notification_type='Reminder', notification_message='Notification message D';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO reminders (reminder_id, customer_id, event_id, reminder_date, reminder_message) VALUES (4, 4, 4, '2023-01-01', 'Reminder message D') ON DUPLICATE KEY UPDATE reminder_date='2023-01-01', reminder_message='Reminder message D';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email_address, phone_number) VALUES (5, 'Emily Davis', 'emily@example.com', '444-555-6666') ON DUPLICATE KEY UPDATE customer_name='Emily Davis', email_address='emily@example.com', phone_number='444-555-6666';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_date, event_description) VALUES (5, 'Event E', '2023-02-10', 'Description E') ON DUPLICATE KEY UPDATE event_name='Event E', event_date='2023-02-10', event_description='Description E';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_message) VALUES (5, 5, 5, 'Info', 'Notification message E') ON DUPLICATE KEY UPDATE notification_type='Info', notification_message='Notification message E';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nINSERT INTO reminders (reminder_id, customer_id, event_id, reminder_date, reminder_message) VALUES (5, 5, 5, '2023-02-05', 'Reminder message E') ON DUPLICATE KEY UPDATE reminder_date='2023-02-05', reminder_message='Reminder message E';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email_address, phone_number) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email_address = 'john.doe@example.com', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO events (event_id, event_name, event_date, event_description) VALUES (1, 'Seminar', '2023-05-15', 'A seminar on modern technology') ON DUPLICATE KEY UPDATE event_name = 'Seminar', event_date = '2023-05-15', event_description = 'A seminar on modern technology';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_message) VALUES (1, 1, 1, 'Email', 'Notification email sent') ON DUPLICATE KEY UPDATE customer_id = 1, event_id = 1, notification_type = 'Email', notification_message = 'Notification email sent';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO reminders (reminder_id, customer_id, event_id, reminder_date, reminder_message) VALUES (1, 1, 1, '2023-05-10', 'Don't forget to attend the seminar!') ON DUPLICATE KEY UPDATE customer_id = 1, event_id = 1, reminder_date = '2023-05-10', reminder_message = 'Don't forget to attend the seminar!';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email_address, phone_number) VALUES (2, 'Alice Smith', 'alice.smith@example.com', '555-123-4567') ON DUPLICATE KEY UPDATE customer_name = 'Alice Smith', email_address = 'alice.smith@example.com', phone_number = '555-123-4567';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO events (event_id, event_name, event_date, event_description) VALUES (2, 'Workshop', '2023-06-20', 'Hands-on workshop for beginners') ON DUPLICATE KEY UPDATE event_name = 'Workshop', event_date = '2023-06-20', event_description = 'Hands-on workshop for beginners';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_message) VALUES (2, 2, 2, 'SMS', 'Reminder SMS sent') ON DUPLICATE KEY UPDATE customer_id = 2, event_id = 2, notification_type = 'SMS', notification_message = 'Reminder SMS sent';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO reminders (reminder_id, customer_id, event_id, reminder_date, reminder_message) VALUES (2, 2, 2, '2023-06-15', 'Prepare for the workshop in advance') ON DUPLICATE KEY UPDATE customer_id = 2, event_id = 2, reminder_date = '2023-06-15', reminder_message = 'Prepare for the workshop in advance';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email_address, phone_number) VALUES (3, 'Bob Johnson', 'bob.johnson@example.com', '789-456-1234') ON DUPLICATE KEY UPDATE customer_name = 'Bob Johnson', email_address = 'bob.johnson@example.com', phone_number = '789-456-1234';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO events (event_id, event_name, event_date, event_description) VALUES (3, 'Conference', '2023-08-25', 'Annual tech conference') ON DUPLICATE KEY UPDATE event_name = 'Conference', event_date = '2023-08-25', event_description = 'Annual tech conference';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_message) VALUES (3, 3, 3, 'Email', 'Conference details sent') ON DUPLICATE KEY UPDATE customer_id = 3, event_id = 3, notification_type = 'Email', notification_message = 'Conference details sent';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO reminders (reminder_id, customer_id, event_id, reminder_date, reminder_message) VALUES (3, 3, 3, '2023-08-20', 'Review conference agenda') ON DUPLICATE KEY UPDATE customer_id = 3, event_id = 3, reminder_date = '2023-08-20', reminder_message = 'Review conference agenda';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email_address, phone_number) VALUES (4, 'Emily Brown', 'emily.brown@example.com', '111-222-3333') ON DUPLICATE KEY UPDATE customer_name = 'Emily Brown', email_address = 'emily.brown@example.com', phone_number = '111-222-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO events (event_id, event_name, event_date, event_description) VALUES (4, 'Webinar', '2023-07-10', 'Online webinar on marketing strategies') ON DUPLICATE KEY UPDATE event_name = 'Webinar', event_date = '2023-07-10', event_description = 'Online webinar on marketing strategies';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_message) VALUES (4, 4, 4, 'SMS', 'Webinar link sent') ON DUPLICATE KEY UPDATE customer_id = 4, event_id = 4, notification_type = 'SMS', notification_message = 'Webinar link sent';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO reminders (reminder_id, customer_id, event_id, reminder_date, reminder_message) VALUES (4, 4, 4, '2023-07-05', 'Join the webinar on time') ON DUPLICATE KEY UPDATE customer_id = 4, event_id = 4, reminder_date = '2023-07-05', reminder_message = 'Join the webinar on time';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email_address, phone_number) VALUES (5, 'Sarah Miller', 'sarah.miller@example.com', '444-555-6666') ON DUPLICATE KEY UPDATE customer_name = 'Sarah Miller', email_address = 'sarah.miller@example.com', phone_number = '444-555-6666';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO events (event_id, event_name, event_date, event_description) VALUES (5, 'Hackathon', '2023-09-30', '24-hour coding competition') ON DUPLICATE KEY UPDATE event_name = 'Hackathon', event_date = '2023-09-30', event_description = '24-hour coding competition';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_message) VALUES (5, 5, 5, 'Email', 'Hackathon registration confirmation') ON DUPLICATE KEY UPDATE customer_id = 5, event_id = 5, notification_type = 'Email', notification_message = 'Hackathon registration confirmation';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_description TEXT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(50),\n    notification_message TEXT\n);\n\nCREATE TABLE reminders (\n    reminder_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    reminder_date DATE,\n    reminder_message TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO reminders (reminder_id, customer_id, event_id, reminder_date, reminder_message) VALUES (5, 5, 5, '2023-09-25', 'Prepare for the hackathon challenge') ON DUPLICATE KEY UPDATE customer_id = 5, event_id = 5, reminder_date = '2023-09-25', reminder_message = 'Prepare for the hackathon challenge';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', email='john.doe@example.com', phone_number='123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO events (event_id, event_name, event_description, event_date) VALUES (1, 'Music Concert', 'Live music performance', '2022-10-15') ON DUPLICATE KEY UPDATE event_name='Music Concert', event_description='Live music performance', event_date='2022-10-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_content, notification_sent) VALUES (1, 1, 1, 'Email', 'Notification content', TRUE) ON DUPLICATE KEY UPDATE customer_id=1, event_id=1, notification_type='Email', notification_content='Notification content', notification_sent=TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO triggers (trigger_id, trigger_name, event_id, trigger_condition, action_performed) VALUES (1, 'Reminder Trigger', 1, 'Event Date=Today', 'Send Reminder Email') ON DUPLICATE KEY UPDATE trigger_name='Reminder Trigger', event_id=1, trigger_condition='Event Date=Today', action_performed='Send Reminder Email';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO logs (log_id, message, timestamp) VALUES (1, 'Log entry 1', '2022-10-01 08:00:00') ON DUPLICATE KEY UPDATE message='Log entry 1', timestamp='2022-10-01 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (2, 'Alice Smith', 'alice.smith@example.com', '987-654-3210') ON DUPLICATE KEY UPDATE customer_name='Alice Smith', email='alice.smith@example.com', phone_number='987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO events (event_id, event_name, event_description, event_date) VALUES (2, 'Art Exhibition', 'Contemporary art showcase', '2022-11-20') ON DUPLICATE KEY UPDATE event_name='Art Exhibition', event_description='Contemporary art showcase', event_date='2022-11-20';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_content, notification_sent) VALUES (2, 2, 2, 'SMS', 'Notification message', FALSE) ON DUPLICATE KEY UPDATE customer_id=2, event_id=2, notification_type='SMS', notification_content='Notification message', notification_sent=FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO triggers (trigger_id, trigger_name, event_id, trigger_condition, action_performed) VALUES (2, 'Alert Trigger', 2, 'Event Date=Tomorrow', 'Display Alert Message') ON DUPLICATE KEY UPDATE trigger_name='Alert Trigger', event_id=2, trigger_condition='Event Date=Tomorrow', action_performed='Display Alert Message';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO logs (log_id, message, timestamp) VALUES (2, 'Log entry 2', '2022-11-05 12:30:00') ON DUPLICATE KEY UPDATE message='Log entry 2', timestamp='2022-11-05 12:30:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (3, 'Emily Brown', 'emily.brown@example.com', '555-123-4567') ON DUPLICATE KEY UPDATE customer_name='Emily Brown', email='emily.brown@example.com', phone_number='555-123-4567';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO events (event_id, event_name, event_description, event_date) VALUES (3, 'Theater Play', 'Drama performance', '2022-10-30') ON DUPLICATE KEY UPDATE event_name='Theater Play', event_description='Drama performance', event_date='2022-10-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_content, notification_sent) VALUES (3, 3, 3, 'Push', 'Notification content', TRUE) ON DUPLICATE KEY UPDATE customer_id=3, event_id=3, notification_type='Push', notification_content='Notification content', notification_sent=TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO triggers (trigger_id, trigger_name, event_id, trigger_condition, action_performed) VALUES (3, 'Reminder Trigger', 3, 'Event Date=Next Week', 'Send Reminder SMS') ON DUPLICATE KEY UPDATE trigger_name='Reminder Trigger', event_id=3, trigger_condition='Event Date=Next Week', action_performed='Send Reminder SMS';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO logs (log_id, message, timestamp) VALUES (3, 'Log entry 3', '2022-10-25 09:00:00') ON DUPLICATE KEY UPDATE message='Log entry 3', timestamp='2022-10-25 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (4, 'Michael Johnson', 'michael.johnson@example.com', '111-222-3333') ON DUPLICATE KEY UPDATE customer_name='Michael Johnson', email='michael.johnson@example.com', phone_number='111-222-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO events (event_id, event_name, event_description, event_date) VALUES (4, 'Food Festival', 'Culinary experience', '2022-12-10') ON DUPLICATE KEY UPDATE event_name='Food Festival', event_description='Culinary experience', event_date='2022-12-10';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_content, notification_sent) VALUES (4, 4, 4, 'Email', 'Notification content', TRUE) ON DUPLICATE KEY UPDATE customer_id=4, event_id=4, notification_type='Email', notification_content='Notification content', notification_sent=TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO triggers (trigger_id, trigger_name, event_id, trigger_condition, action_performed) VALUES (4, 'Alert Trigger', 4, 'Event Date=2 Days Before', 'Display Alert Popup') ON DUPLICATE KEY UPDATE trigger_name='Alert Trigger', event_id=4, trigger_condition='Event Date=2 Days Before', action_performed='Display Alert Popup';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO logs (log_id, message, timestamp) VALUES (4, 'Log entry 4', '2022-11-30 15:45:00') ON DUPLICATE KEY UPDATE message='Log entry 4', timestamp='2022-11-30 15:45:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, phone_number = excluded.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_description, event_date) VALUES (1, 'Music Concert', 'An evening of live music', '2023-08-15') ON CONFLICT (event_id) DO UPDATE SET event_name = excluded.event_name, event_description = excluded.event_description, event_date = excluded.event_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_content, notification_sent) VALUES (1, 1, 1, 'Reminder', 'Don't forget the event!', true) ON CONFLICT (notification_id) DO UPDATE SET customer_id = excluded.customer_id, event_id = excluded.event_id, notification_type = excluded.notification_type, notification_content = excluded.notification_content, notification_sent = excluded.notification_sent;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO triggers (trigger_id, trigger_name, event_id, trigger_condition, action_performed) VALUES (1, 'Email Reminder', 1, 'DATE_ADD(event_date, INTERVAL -1 DAY) = CURDATE()', 'Send reminder email') ON CONFLICT (trigger_id) DO UPDATE SET trigger_name = excluded.trigger_name, event_id = excluded.event_id, trigger_condition = excluded.trigger_condition, action_performed = excluded.action_performed;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO logs (log_id, message, timestamp) VALUES (1, 'Trigger executed successfully', '2023-08-14 10:00:00') ON CONFLICT (log_id) DO UPDATE SET message = excluded.message, timestamp = excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (2, 'Alice Smith', 'alice.smith@example.com', '234-567-8901') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, phone_number = excluded.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_description, event_date) VALUES (2, 'Sporting Event', 'Exciting game of football', '2023-09-20') ON CONFLICT (event_id) DO UPDATE SET event_name = excluded.event_name, event_description = excluded.event_description, event_date = excluded.event_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_content, notification_sent) VALUES (2, 2, 2, 'Announcement', 'New tickets available', false) ON CONFLICT (notification_id) DO UPDATE SET customer_id = excluded.customer_id, event_id = excluded.event_id, notification_type = excluded.notification_type, notification_content = excluded.notification_content, notification_sent = excluded.notification_sent;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO triggers (trigger_id, trigger_name, event_id, trigger_condition, action_performed) VALUES (2, 'SMS Reminder', 2, 'event_date = CURDATE()', 'Send SMS reminder') ON CONFLICT (trigger_id) DO UPDATE SET trigger_name = excluded.trigger_name, event_id = excluded.event_id, trigger_condition = excluded.trigger_condition, action_performed = excluded.action_performed;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO logs (log_id, message, timestamp) VALUES (2, 'Trigger executed successfully', '2023-09-19 12:00:00') ON CONFLICT (log_id) DO UPDATE SET message = excluded.message, timestamp = excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (3, 'Bob Johnson', 'bob.johnson@example.com', '345-678-9012') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, phone_number = excluded.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_description, event_date) VALUES (3, 'Art Exhibition', 'Showcasing local artists', '2023-10-25') ON CONFLICT (event_id) DO UPDATE SET event_name = excluded.event_name, event_description = excluded.event_description, event_date = excluded.event_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_content, notification_sent) VALUES (3, 3, 3, 'Reminder', 'Art exhibit opening soon', false) ON CONFLICT (notification_id) DO UPDATE SET customer_id = excluded.customer_id, event_id = excluded.event_id, notification_type = excluded.notification_type, notification_content = excluded.notification_content, notification_sent = excluded.notification_sent;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO triggers (trigger_id, trigger_name, event_id, trigger_condition, action_performed) VALUES (3, 'Popup Reminder', 3, 'DATE_ADD(event_date, INTERVAL -7 DAY) = CURDATE()', 'Show popup reminder') ON CONFLICT (trigger_id) DO UPDATE SET trigger_name = excluded.trigger_name, event_id = excluded.event_id, trigger_condition = excluded.trigger_condition, action_performed = excluded.action_performed;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO logs (log_id, message, timestamp) VALUES (3, 'Trigger executed successfully', '2023-10-24 09:00:00') ON CONFLICT (log_id) DO UPDATE SET message = excluded.message, timestamp = excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (4, 'Emily Brown', 'emily.brown@example.com', '456-789-0123') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email, phone_number = excluded.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_description, event_date) VALUES (4, 'Science Fair', 'Discover amazing projects', '2023-11-30') ON CONFLICT (event_id) DO UPDATE SET event_name = excluded.event_name, event_description = excluded.event_description, event_date = excluded.event_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO notifications (notification_id, customer_id, event_id, notification_type, notification_content, notification_sent) VALUES (4, 4, 4, 'Announcement', 'Call for participants', true) ON CONFLICT (notification_id) DO UPDATE SET customer_id = excluded.customer_id, event_id = excluded.event_id, notification_type = excluded.notification_type, notification_content = excluded.notification_content, notification_sent = excluded.notification_sent;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO triggers (trigger_id, trigger_name, event_id, trigger_condition, action_performed) VALUES (4, 'Email Reminder', 4, 'event_date = CURDATE()', 'Send email reminder') ON CONFLICT (trigger_id) DO UPDATE SET trigger_name = excluded.trigger_name, event_id = excluded.event_id, trigger_condition = excluded.trigger_condition, action_performed = excluded.action_performed;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_description TEXT,\n    event_date DATE\n);\n\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    customer_id INT,\n    event_id INT,\n    notification_type VARCHAR(20),\n    notification_content TEXT,\n    notification_sent BOOLEAN\n);\n\n\nCREATE TABLE triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_name VARCHAR(50),\n    event_id INT,\n    trigger_condition TEXT,\n    action_performed TEXT\n);\n\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    message TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO logs (log_id, message, timestamp) VALUES (4, 'Trigger executed successfully', '2023-11-29 14:00:00') ON CONFLICT (log_id) DO UPDATE SET message = excluded.message, timestamp = excluded.timestamp;"
]