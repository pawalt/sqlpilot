<t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT * FROM Manufacturing WHERE product_id = 1</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select * from manufacturing where product_id = 1</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT product_name, quantity FROM Manufacturing WHERE price > 50</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select product_name, quantity from manufacturing where price > 50</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT product_name, price FROM Manufacturing ORDER BY price DESC LIMIT 5</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select product_name, price from manufacturing order by price desc limit 5</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT product_id, product_name, price FROM Manufacturing WHERE quantity <= 10</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select product_id, product_name, price from manufacturing where quantity <= 10</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT product_name, quantity, price FROM Manufacturing WHERE price BETWEEN 20 AND 50</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select product_name, quantity, price from manufacturing where price between 20 and 50</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT COUNT(*) FROM Manufacturing</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select count(*) from manufacturing</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT AVG(price) AS average_price FROM Manufacturing</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select avg(price) as average_price from manufacturing</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT SUM(quantity) AS total_quantity FROM Manufacturing</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select sum(quantity) as total_quantity from manufacturing</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT MIN(price) AS min_price, MAX(price) AS max_price FROM Manufacturing</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select min(price) as min_price, max(price) as max_price from manufacturing</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT product_name, price FROM Manufacturing WHERE LOWER(product_name) LIKE '%apple%'</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select product_name, price from manufacturing where lower(product_name) like '%apple%'</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT product_name, price FROM Manufacturing WHERE product_name IN ('Product A', 'Product B', 'Product C')</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select product_name, price from manufacturing where product_name in ('product a', 'product b', 'product c')</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT product_name, price FROM Manufacturing WHERE product_name NOT LIKE '%XYZ%'</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select product_name, price from manufacturing where product_name not like '%xyz%'</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT product_id, product_name FROM Manufacturing WHERE product_name IS NULL</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select product_id, product_name from manufacturing where product_name is null</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT COUNT(DISTINCT product_name) AS unique_products FROM Manufacturing</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select count(distinct product_name) as unique_products from manufacturing</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT product_name, price FROM Manufacturing WHERE price > (SELECT AVG(price) FROM Manufacturing)</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select product_name, price from manufacturing where price > (select avg(price) from manufacturing)</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT product_name, price FROM Manufacturing WHERE quantity = (SELECT MAX(quantity) FROM Manufacturing)</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select product_name, price from manufacturing where quantity = (select max(quantity) from manufacturing)</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT product_name, price FROM Manufacturing WHERE NOT EXISTS (SELECT 1 FROM Manufacturing WHERE quantity > 100)</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select product_name, price from manufacturing where not exists (select 1 from manufacturing where quantity > 100)</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT product_name, price FROM Manufacturing WHERE EXISTS (SELECT 1 FROM Manufacturing WHERE quantity < 10)</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select product_name, price from manufacturing where exists (select 1 from manufacturing where quantity < 10)</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>SELECT product_id, product_name, quantity, price FROM Manufacturing WHERE product_id % 2 = 0</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>select product_id, product_name, quantity, price from manufacturing where product_id % 2 = 0</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT * FROM Manufacturing.Part;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select * from manufacturing.part;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT * FROM Manufacturing.Part;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select * from manufacturing.part;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT part_id, part_name FROM Manufacturing.Part;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select part_id, part_name from manufacturing.part;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT part_id, part_name FROM Manufacturing.Part;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select part_id, part_name from manufacturing.part;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT * FROM Manufacturing.Supplier;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select * from manufacturing.supplier;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT * FROM Manufacturing.Supplier;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select * from manufacturing.supplier;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT supplier_id, supplier_name FROM Manufacturing.Supplier;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select supplier_id, supplier_name from manufacturing.supplier;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT supplier_id, supplier_name FROM Manufacturing.Supplier;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select supplier_id, supplier_name from manufacturing.supplier;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT Manufacturing.Part.part_id, Manufacturing.Part.quantity FROM Manufacturing.Supplier JOIN Manufacturing.Part ON Manufacturing.Supplier.part_id = Manufacturing.Part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select manufacturing.part.part_id, manufacturing.part.quantity from manufacturing.supplier join manufacturing.part on manufacturing.supplier.part_id = manufacturing.part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT Manufacturing.Part.part_id, Manufacturing.Part.quantity FROM Manufacturing.Supplier JOIN Manufacturing.Part ON Manufacturing.Supplier.part_id = Manufacturing.Part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select manufacturing.part.part_id, manufacturing.part.quantity from manufacturing.supplier join manufacturing.part on manufacturing.supplier.part_id = manufacturing.part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT Manufacturing.Supplier.supplier_id, Manufacturing.Supplier.supplier_name, Manufacturing.Part.part_name FROM Manufacturing.Supplier JOIN Manufacturing.Part ON Manufacturing.Supplier.part_id = Manufacturing.Part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select manufacturing.supplier.supplier_id, manufacturing.supplier.supplier_name, manufacturing.part.part_name from manufacturing.supplier join manufacturing.part on manufacturing.supplier.part_id = manufacturing.part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT Manufacturing.Supplier.supplier_id, Manufacturing.Supplier.supplier_name, Manufacturing.Part.part_name FROM Manufacturing.Supplier JOIN Manufacturing.Part ON Manufacturing.Supplier.part_id = Manufacturing.Part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select manufacturing.supplier.supplier_id, manufacturing.supplier.supplier_name, manufacturing.part.part_name from manufacturing.supplier join manufacturing.part on manufacturing.supplier.part_id = manufacturing.part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT Manufacturing.Part.part_id, COUNT(Manufacturing.Supplier.supplier_id) AS num_suppliers FROM Manufacturing.Part LEFT JOIN Manufacturing.Supplier ON Manufacturing.Part.part_id = Manufacturing.Supplier.part_id GROUP BY Manufacturing.Part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select manufacturing.part.part_id, count(manufacturing.supplier.supplier_id) as num_suppliers from manufacturing.part left join manufacturing.supplier on manufacturing.part.part_id = manufacturing.supplier.part_id group by manufacturing.part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT Manufacturing.Part.part_id, COUNT(Manufacturing.Supplier.supplier_id) AS num_suppliers FROM Manufacturing.Part LEFT JOIN Manufacturing.Supplier ON Manufacturing.Part.part_id = Manufacturing.Supplier.part_id GROUP BY Manufacturing.Part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select manufacturing.part.part_id, count(manufacturing.supplier.supplier_id) as num_suppliers from manufacturing.part left join manufacturing.supplier on manufacturing.part.part_id = manufacturing.supplier.part_id group by manufacturing.part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT * FROM Manufacturing.Part WHERE quantity > 100;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select * from manufacturing.part where quantity > 100;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT * FROM Manufacturing.Part WHERE quantity > 100;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select * from manufacturing.part where quantity > 100;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT * FROM Manufacturing.Supplier WHERE supplier_name LIKE 'ABC%';</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select * from manufacturing.supplier where supplier_name like 'abc%';</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT * FROM Manufacturing.Supplier WHERE supplier_name LIKE 'ABC%';</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select * from manufacturing.supplier where supplier_name like 'abc%';</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT supplier_name, part_name FROM Manufacturing.Supplier JOIN Manufacturing.Part ON Manufacturing.Supplier.part_id = Manufacturing.Part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select supplier_name, part_name from manufacturing.supplier join manufacturing.part on manufacturing.supplier.part_id = manufacturing.part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT supplier_name, part_name FROM Manufacturing.Supplier JOIN Manufacturing.Part ON Manufacturing.Supplier.part_id = Manufacturing.Part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select supplier_name, part_name from manufacturing.supplier join manufacturing.part on manufacturing.supplier.part_id = manufacturing.part.part_id;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT MIN(quantity) AS min_quantity, MAX(quantity) AS max_quantity FROM Manufacturing.Part;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select min(quantity) as min_quantity, max(quantity) as max_quantity from manufacturing.part;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT MIN(quantity) AS min_quantity, MAX(quantity) AS max_quantity FROM Manufacturing.Part;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select min(quantity) as min_quantity, max(quantity) as max_quantity from manufacturing.part;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT AVG(quantity) AS avg_quantity FROM Manufacturing.Part;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select avg(quantity) as avg_quantity from manufacturing.part;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT AVG(quantity) AS avg_quantity FROM Manufacturing.Part;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select avg(quantity) as avg_quantity from manufacturing.part;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT SUM(quantity) AS total_quantity FROM Manufacturing.Part;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select sum(quantity) as total_quantity from manufacturing.part;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT SUM(quantity) AS total_quantity FROM Manufacturing.Part;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select sum(quantity) as total_quantity from manufacturing.part;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT COUNT(part_id) AS num_parts FROM Manufacturing.Part;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select count(part_id) as num_parts from manufacturing.part;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT COUNT(part_id) AS num_parts FROM Manufacturing.Part;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select count(part_id) as num_parts from manufacturing.part;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT supplier_name, COUNT(*) AS num_parts_supplied FROM Manufacturing.Supplier GROUP BY supplier_name;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select supplier_name, count(*) as num_parts_supplied from manufacturing.supplier group by supplier_name;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT supplier_name, COUNT(*) AS num_parts_supplied FROM Manufacturing.Supplier GROUP BY supplier_name;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select supplier_name, count(*) as num_parts_supplied from manufacturing.supplier group by supplier_name;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT part_name, SUM(quantity) AS total_quantity FROM Manufacturing.Part GROUP BY part_name;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select part_name, sum(quantity) as total_quantity from manufacturing.part group by part_name;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT part_name, SUM(quantity) AS total_quantity FROM Manufacturing.Part GROUP BY part_name;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select part_name, sum(quantity) as total_quantity from manufacturing.part group by part_name;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT supplier_name, COUNT(*) AS num_parts_supplied FROM Manufacturing.Supplier GROUP BY supplier_name HAVING COUNT(*) > 5;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select supplier_name, count(*) as num_parts_supplied from manufacturing.supplier group by supplier_name having count(*) > 5;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT supplier_name, COUNT(*) AS num_parts_supplied FROM Manufacturing.Supplier GROUP BY supplier_name HAVING COUNT(*) > 5;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select supplier_name, count(*) as num_parts_supplied from manufacturing.supplier group by supplier_name having count(*) > 5;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT part_name, supplier_name FROM Manufacturing.Part JOIN Manufacturing.Supplier ON Manufacturing.Part.part_id = Manufacturing.Supplier.part_id ORDER BY part_name ASC;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select part_name, supplier_name from manufacturing.part join manufacturing.supplier on manufacturing.part.part_id = manufacturing.supplier.part_id order by part_name asc;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT part_name, supplier_name FROM Manufacturing.Part JOIN Manufacturing.Supplier ON Manufacturing.Part.part_id = Manufacturing.Supplier.part_id ORDER BY part_name ASC;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select part_name, supplier_name from manufacturing.part join manufacturing.supplier on manufacturing.part.part_id = manufacturing.supplier.part_id order by part_name asc;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT supplier_name, COUNT(*) AS num_parts_supplied FROM Manufacturing.Supplier GROUP BY supplier_name ORDER BY num_parts_supplied DESC;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select supplier_name, count(*) as num_parts_supplied from manufacturing.supplier group by supplier_name order by num_parts_supplied desc;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT supplier_name, COUNT(*) AS num_parts_supplied FROM Manufacturing.Supplier GROUP BY supplier_name ORDER BY num_parts_supplied DESC;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select supplier_name, count(*) as num_parts_supplied from manufacturing.supplier group by supplier_name order by num_parts_supplied desc;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>SELECT supplier_name, COUNT(*) AS num_parts_supplied FROM Manufacturing.Supplier GROUP BY supplier_name ORDER BY num_parts_supplied DESC LIMIT 5;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>select supplier_name, count(*) as num_parts_supplied from manufacturing.supplier group by supplier_name order by num_parts_supplied desc limit 5;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>SELECT supplier_name, COUNT(*) AS num_parts_supplied FROM Manufacturing.Supplier GROUP BY supplier_name ORDER BY num_parts_supplied DESC LIMIT 5;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>select supplier_name, count(*) as num_parts_supplied from manufacturing.supplier group by supplier_name order by num_parts_supplied desc limit 5;</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT * FROM manufacturer</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select * from manufacturer</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT * FROM manufacturer</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select * from manufacturer</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT * FROM manufacturer</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select * from manufacturer</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT * FROM manufacturer</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select * from manufacturer</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT * FROM manufacturer</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select * from manufacturer</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT * FROM manufacturer</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select * from manufacturer</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT name, location FROM manufacturer</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select name, location from manufacturer</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT name, location FROM manufacturer</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select name, location from manufacturer</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT name, location FROM manufacturer</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select name, location from manufacturer</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT name, location FROM manufacturer</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select name, location from manufacturer</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT name, location FROM manufacturer</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select name, location from manufacturer</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT name, location FROM manufacturer</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select name, location from manufacturer</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT id, name, location FROM manufacturer WHERE id = '12345678-1234-1234-1234-123456789abc'</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select id, name, location from manufacturer where id = '12345678-1234-1234-1234-123456789abc'</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT id, name, location FROM manufacturer WHERE id = '12345678-1234-1234-1234-123456789abc'</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select id, name, location from manufacturer where id = '12345678-1234-1234-1234-123456789abc'</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT id, name, location FROM manufacturer WHERE id = '12345678-1234-1234-1234-123456789abc'</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select id, name, location from manufacturer where id = '12345678-1234-1234-1234-123456789abc'</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT id, name, location FROM manufacturer WHERE id = '12345678-1234-1234-1234-123456789abc'</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select id, name, location from manufacturer where id = '12345678-1234-1234-1234-123456789abc'</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT id, name, location FROM manufacturer WHERE id = '12345678-1234-1234-1234-123456789abc'</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select id, name, location from manufacturer where id = '12345678-1234-1234-1234-123456789abc'</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT id, name, location FROM manufacturer WHERE id = '12345678-1234-1234-1234-123456789abc'</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select id, name, location from manufacturer where id = '12345678-1234-1234-1234-123456789abc'</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT * FROM product</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select * from product</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT * FROM product</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select * from product</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT * FROM product</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select * from product</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT * FROM product</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select * from product</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT * FROM product</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select * from product</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT * FROM product</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select * from product</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT name, price FROM product</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select name, price from product</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT name, price FROM product</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select name, price from product</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT name, price FROM product</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select name, price from product</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT name, price FROM product</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select name, price from product</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT name, price FROM product</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select name, price from product</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT name, price FROM product</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select name, price from product</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT id, name, price FROM product WHERE price > 50</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select id, name, price from product where price > 50</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT id, name, price FROM product WHERE price > 50</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select id, name, price from product where price > 50</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT id, name, price FROM product WHERE price > 50</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select id, name, price from product where price > 50</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT id, name, price FROM product WHERE price > 50</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select id, name, price from product where price > 50</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT id, name, price FROM product WHERE price > 50</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select id, name, price from product where price > 50</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT id, name, price FROM product WHERE price > 50</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select id, name, price from product where price > 50</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT * FROM "order"</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select * from "order"</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT * FROM "order"</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select * from "order"</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT * FROM "order"</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select * from "order"</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT * FROM "order"</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select * from "order"</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT * FROM "order"</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select * from "order"</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT * FROM "order"</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select * from "order"</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT product_id, quantity, order_date FROM "order"</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select product_id, quantity, order_date from "order"</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT product_id, quantity, order_date FROM "order"</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select product_id, quantity, order_date from "order"</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT product_id, quantity, order_date FROM "order"</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select product_id, quantity, order_date from "order"</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT product_id, quantity, order_date FROM "order"</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select product_id, quantity, order_date from "order"</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT product_id, quantity, order_date FROM "order"</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select product_id, quantity, order_date from "order"</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT product_id, quantity, order_date FROM "order"</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select product_id, quantity, order_date from "order"</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT id, product_id, quantity, order_date FROM "order" WHERE quantity > 5</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select id, product_id, quantity, order_date from "order" where quantity > 5</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT id, product_id, quantity, order_date FROM "order" WHERE quantity > 5</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select id, product_id, quantity, order_date from "order" where quantity > 5</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT id, product_id, quantity, order_date FROM "order" WHERE quantity > 5</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select id, product_id, quantity, order_date from "order" where quantity > 5</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT id, product_id, quantity, order_date FROM "order" WHERE quantity > 5</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select id, product_id, quantity, order_date from "order" where quantity > 5</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT id, product_id, quantity, order_date FROM "order" WHERE quantity > 5</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select id, product_id, quantity, order_date from "order" where quantity > 5</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT id, product_id, quantity, order_date FROM "order" WHERE quantity > 5</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select id, product_id, quantity, order_date from "order" where quantity > 5</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT manufacturer.name, product.name, product.price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select manufacturer.name, product.name, product.price from manufacturer join product on manufacturer.id = product.manufacturer_id</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT manufacturer.name, product.name, product.price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select manufacturer.name, product.name, product.price from manufacturer join product on manufacturer.id = product.manufacturer_id</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT manufacturer.name, product.name, product.price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select manufacturer.name, product.name, product.price from manufacturer join product on manufacturer.id = product.manufacturer_id</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT manufacturer.name, product.name, product.price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select manufacturer.name, product.name, product.price from manufacturer join product on manufacturer.id = product.manufacturer_id</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT manufacturer.name, product.name, product.price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select manufacturer.name, product.name, product.price from manufacturer join product on manufacturer.id = product.manufacturer_id</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT manufacturer.name, product.name, product.price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select manufacturer.name, product.name, product.price from manufacturer join product on manufacturer.id = product.manufacturer_id</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT manufacturer.name, product.name, product.price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id WHERE product.price > 100</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select manufacturer.name, product.name, product.price from manufacturer join product on manufacturer.id = product.manufacturer_id where product.price > 100</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT manufacturer.name, product.name, product.price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id WHERE product.price > 100</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select manufacturer.name, product.name, product.price from manufacturer join product on manufacturer.id = product.manufacturer_id where product.price > 100</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT manufacturer.name, product.name, product.price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id WHERE product.price > 100</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select manufacturer.name, product.name, product.price from manufacturer join product on manufacturer.id = product.manufacturer_id where product.price > 100</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT manufacturer.name, product.name, product.price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id WHERE product.price > 100</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select manufacturer.name, product.name, product.price from manufacturer join product on manufacturer.id = product.manufacturer_id where product.price > 100</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT manufacturer.name, product.name, product.price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id WHERE product.price > 100</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select manufacturer.name, product.name, product.price from manufacturer join product on manufacturer.id = product.manufacturer_id where product.price > 100</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT manufacturer.name, product.name, product.price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id WHERE product.price > 100</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select manufacturer.name, product.name, product.price from manufacturer join product on manufacturer.id = product.manufacturer_id where product.price > 100</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT manufacturer.name AS manufacturer_name, product.name AS product_name, product.price AS product_price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id WHERE product.price BETWEEN 50 AND 100</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select manufacturer.name as manufacturer_name, product.name as product_name, product.price as product_price from manufacturer join product on manufacturer.id = product.manufacturer_id where product.price between 50 and 100</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT manufacturer.name AS manufacturer_name, product.name AS product_name, product.price AS product_price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id WHERE product.price BETWEEN 50 AND 100</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select manufacturer.name as manufacturer_name, product.name as product_name, product.price as product_price from manufacturer join product on manufacturer.id = product.manufacturer_id where product.price between 50 and 100</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT manufacturer.name AS manufacturer_name, product.name AS product_name, product.price AS product_price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id WHERE product.price BETWEEN 50 AND 100</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select manufacturer.name as manufacturer_name, product.name as product_name, product.price as product_price from manufacturer join product on manufacturer.id = product.manufacturer_id where product.price between 50 and 100</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT manufacturer.name AS manufacturer_name, product.name AS product_name, product.price AS product_price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id WHERE product.price BETWEEN 50 AND 100</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select manufacturer.name as manufacturer_name, product.name as product_name, product.price as product_price from manufacturer join product on manufacturer.id = product.manufacturer_id where product.price between 50 and 100</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT manufacturer.name AS manufacturer_name, product.name AS product_name, product.price AS product_price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id WHERE product.price BETWEEN 50 AND 100</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select manufacturer.name as manufacturer_name, product.name as product_name, product.price as product_price from manufacturer join product on manufacturer.id = product.manufacturer_id where product.price between 50 and 100</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT manufacturer.name AS manufacturer_name, product.name AS product_name, product.price AS product_price FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id WHERE product.price BETWEEN 50 AND 100</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select manufacturer.name as manufacturer_name, product.name as product_name, product.price as product_price from manufacturer join product on manufacturer.id = product.manufacturer_id where product.price between 50 and 100</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT manufacturer.name, COUNT(*) AS total_products FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id GROUP BY manufacturer.name</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select manufacturer.name, count(*) as total_products from manufacturer join product on manufacturer.id = product.manufacturer_id group by manufacturer.name</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT manufacturer.name, COUNT(*) AS total_products FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id GROUP BY manufacturer.name</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select manufacturer.name, count(*) as total_products from manufacturer join product on manufacturer.id = product.manufacturer_id group by manufacturer.name</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>SELECT manufacturer.name, COUNT(*) AS total_products FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id GROUP BY manufacturer.name</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>select manufacturer.name, count(*) as total_products from manufacturer join product on manufacturer.id = product.manufacturer_id group by manufacturer.name</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT manufacturer.name, COUNT(*) AS total_products FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id GROUP BY manufacturer.name</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select manufacturer.name, count(*) as total_products from manufacturer join product on manufacturer.id = product.manufacturer_id group by manufacturer.name</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>SELECT manufacturer.name, COUNT(*) AS total_products FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id GROUP BY manufacturer.name</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>select manufacturer.name, count(*) as total_products from manufacturer join product on manufacturer.id = product.manufacturer_id group by manufacturer.name</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>SELECT manufacturer.name, COUNT(*) AS total_products FROM manufacturer JOIN product ON manufacturer.id = product.manufacturer_id GROUP BY manufacturer.name</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>select manufacturer.name, count(*) as total_products from manufacturer join product on manufacturer.id = product.manufacturer_id group by manufacturer.name</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT name, price FROM product;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select name, price from product;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT name FROM manufacturer;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select name from manufacturer;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT line_name FROM production_line;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select line_name from production_line;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT * FROM production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select * from production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product_id, production_line_id, quantity FROM production;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product_id, production_line_id, quantity from production;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, manufacturer.name FROM product JOIN manufacturer ON product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, manufacturer.name from product join manufacturer on product.manufacturer_id = manufacturer.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, quantity from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT product.name, production_line.line_name, quantity, production_date FROM product JOIN production ON product.id = production.product_id JOIN production_line ON production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select product.name, production_line.line_name, quantity, production_date from product join production on product.id = production.product_id join production_line on production.production_line_id = production_line.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name from product p join manufacturer m on p.manufacturer_id = m.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, quantity FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, quantity from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, pl.line_name, pr.quantity, pr.production_date from product p join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id LIMIT 10;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id limit 10;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>SELECT p.name AS product_name, m.name AS manufacturer_name, pl.line_name, pr.quantity, pr.production_date FROM product p JOIN manufacturer m ON p.manufacturer_id = m.id JOIN production pr ON p.id = pr.product_id JOIN production_line pl ON pr.production_line_id = pl.id WHERE pr.quantity > 100;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>select p.name as product_name, m.name as manufacturer_name, pl.line_name, pr.quantity, pr.production_date from product p join manufacturer m on p.manufacturer_id = m.id join production pr on p.id = pr.product_id join production_line pl on pr.production_line_id = pl.id where pr.quantity > 100;</stat>