<t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>REVOKE SELECT ON Manufacturing FROM user1</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>revoke select on manufacturing from user1</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>REVOKE INSERT ON Manufacturing FROM user2</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>revoke insert on manufacturing from user2</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>REVOKE UPDATE ON Manufacturing FROM user3</stat><divider><t>CREATE TABLE Manufacturing (product_id INT PRIMARY KEY, product_name STRING, quantity INT, price DECIMAL)</t><stat>revoke update on manufacturing from user3</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>REVOKE INSERT ON Manufacturing.Part FROM role_name;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>revoke insert on manufacturing.part from role_name;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>REVOKE INSERT ON Manufacturing.Part FROM role_name;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>revoke insert on manufacturing.part from role_name;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>REVOKE UPDATE ON Manufacturing.Part FROM role_name;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>revoke update on manufacturing.part from role_name;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>REVOKE UPDATE ON Manufacturing.Part FROM role_name;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>revoke update on manufacturing.part from role_name;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>REVOKE DELETE ON Manufacturing.Supplier FROM role_name;</stat><divider><t>CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);

CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);</t><stat>revoke delete on manufacturing.supplier from role_name;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>REVOKE DELETE ON Manufacturing.Supplier FROM role_name;</stat><divider><t>CREATE TABLE Manufacturing.Supplier (supplier_id INT PRIMARY KEY, supplier_name STRING, part_id INT);

CREATE TABLE Manufacturing.Part (part_id INT PRIMARY KEY, part_name STRING, quantity INT);</t><stat>revoke delete on manufacturing.supplier from role_name;</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>REVOKE INSERT ON manufacturer FROM PUBLIC</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>revoke insert on manufacturer from public</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>REVOKE INSERT ON manufacturer FROM PUBLIC</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>revoke insert on manufacturer from public</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>REVOKE INSERT ON manufacturer FROM PUBLIC</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>revoke insert on manufacturer from public</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>REVOKE INSERT ON manufacturer FROM PUBLIC</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>revoke insert on manufacturer from public</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>REVOKE INSERT ON manufacturer FROM PUBLIC</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>revoke insert on manufacturer from public</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>REVOKE INSERT ON manufacturer FROM PUBLIC</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>revoke insert on manufacturer from public</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>REVOKE SELECT, UPDATE ON product FROM PUBLIC</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>revoke select, update on product from public</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>REVOKE SELECT, UPDATE ON product FROM PUBLIC</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>revoke select, update on product from public</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>REVOKE SELECT, UPDATE ON product FROM PUBLIC</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>revoke select, update on product from public</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>REVOKE SELECT, UPDATE ON product FROM PUBLIC</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>revoke select, update on product from public</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>REVOKE SELECT, UPDATE ON product FROM PUBLIC</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>revoke select, update on product from public</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>REVOKE SELECT, UPDATE ON product FROM PUBLIC</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>revoke select, update on product from public</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>REVOKE DELETE ON order FROM PUBLIC</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>revoke delete on order from public</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>REVOKE DELETE ON order FROM PUBLIC</stat><divider><t>CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>revoke delete on order from public</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>REVOKE DELETE ON order FROM PUBLIC</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)</t><stat>revoke delete on order from public</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>REVOKE DELETE ON order FROM PUBLIC</stat><divider><t>CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>revoke delete on order from public</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>REVOKE DELETE ON order FROM PUBLIC</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())</t><stat>revoke delete on order from public</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>REVOKE DELETE ON order FROM PUBLIC</stat><divider><t>CREATE TABLE order (id UUID PRIMARY KEY, product_id UUID REFERENCES product(id), quantity INT, order_date DATE)

CREATE TABLE product (id UUID PRIMARY KEY, name STRING, price DECIMAL, manufacturer_id UUID REFERENCES manufacturer(id), created_at TIMESTAMP DEFAULT current_timestamp())

CREATE TABLE manufacturer (id UUID PRIMARY KEY, name STRING, location STRING)</t><stat>revoke delete on order from public</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE DELETE ON product FROM user1;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke delete on product from user1;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE UPDATE (name, price) ON product FROM user2;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke update (name, price) on product from user2;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
</t><stat>revoke insert, update on manufacturer from user3;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>REVOKE INSERT, UPDATE ON manufacturer FROM user3;</stat><divider><t>CREATE TABLE production (
    id INT PRIMARY KEY,
    product_id INT NOT NULL,
    production_line_id INT NOT NULL,
    quantity INT NOT NULL,
    production_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (production_line_id) REFERENCES production_line(id)
);


CREATE TABLE production_line (
    id INT PRIMARY KEY,
    line_name VARCHAR(255) NOT NULL
);


CREATE TABLE manufacturer (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE product (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    manufacturer_id INT NOT NULL,
    FOREIGN KEY (manufacturer_id) REFERENCES manufacturer(id)
);
</t><stat>revoke insert, update on manufacturer from user3;</stat>