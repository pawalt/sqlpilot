[
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('1', '1', '2022-01-01', 100.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('2', '2', '2022-02-01', 150.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('3', '3', '2022-03-01', 200.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('4', '4', '2022-04-01', 250.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('5', '5', '2022-05-01', 300.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('6', '6', '2022-06-01', 350.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('7', '7', '2022-07-01', 400.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('8', '8', '2022-08-01', 450.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('9', '9', '2022-09-01', 500.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('10', '10', '2022-10-01', 550.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('11', '11', '2022-11-01', 600.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('12', '12', '2022-12-01', 650.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('13', '13', '2022-01-15', 700.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('14', '14', '2022-02-15', 750.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('15', '15', '2022-03-15', 800.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('16', '16', '2022-04-15', 850.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('17', '17', '2022-05-15', 900.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('18', '18', '2022-06-15', 950.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('19', '19', '2022-07-15', 1000.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('20', '20', '2022-08-15', 1050.00)",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174000', '223e4567-e89b-12d3-a456-426614174001', '2022-12-01', 100.25) ON CONFLICT (order_id) DO UPDATE SET customer_id = '223e4567-e89b-12d3-a456-426614174002', total_amount = 150.50, order_date = '2022-12-02'",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174001', '223e4567-e89b-12d3-a456-426614174003', '2022-12-02', 150.75) ON CONFLICT (order_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174002', '223e4567-e89b-12d3-a456-426614174004', '2022-12-03', 200.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = '223e4567-e89b-12d3-a456-426614174005', total_amount = 250.75, order_date = '2022-12-04'",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174003', '223e4567-e89b-12d3-a456-426614174006', '2022-12-04', 300.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = '223e4567-e89b-12d3-a456-426614174007', total_amount = 350.25, order_date = '2022-12-05'",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174004', '223e4567-e89b-12d3-a456-426614174008', '2022-12-05', 400.75) ON CONFLICT (order_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174005', '223e4567-e89b-12d3-a456-426614174009', '2022-12-06', 500.25) ON CONFLICT (order_id) DO UPDATE SET customer_id = '223e4567-e89b-12d3-a456-426614174010', total_amount = 550.50, order_date = '2022-12-07'",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174006', '223e4567-e89b-12d3-a456-426614174011', '2022-12-07', 600.25) ON CONFLICT (order_id) DO UPDATE SET customer_id = '223e4567-e89b-12d3-a456-426614174012', total_amount = 650.50, order_date = '2022-12-08'",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174007', '223e4567-e89b-12d3-a456-426614174013', '2022-12-08', 700.75) ON CONFLICT (order_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174008', '223e4567-e89b-12d3-a456-426614174014', '2022-12-09', 800.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = '223e4567-e89b-12d3-a456-426614174015', total_amount = 850.75, order_date = '2022-12-10'",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174009', '223e4567-e89b-12d3-a456-426614174016', '2022-12-10', 900.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = '223e4567-e89b-12d3-a456-426614174017', total_amount = 950.25, order_date = '2022-12-11'",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174010', '223e4567-e89b-12d3-a456-426614174018', '2022-12-11', 1000.75) ON CONFLICT (order_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174011', '223e4567-e89b-12d3-a456-426614174019', '2022-12-12', 1100.25) ON CONFLICT (order_id) DO UPDATE SET customer_id = '223e4567-e89b-12d3-a456-426614174020', total_amount = 1150.50, order_date = '2022-12-13'",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174012', '223e4567-e89b-12d3-a456-426614174021', '2022-12-13', 1200.75) ON CONFLICT (order_id) DO UPDATE SET customer_id = '223e4567-e89b-12d3-a456-426614174022', total_amount = 1250.25, order_date = '2022-12-14'",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174013', '223e4567-e89b-12d3-a456-426614174023', '2022-12-14', 1300.50) ON CONFLICT (order_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174014', '223e4567-e89b-12d3-a456-426614174024', '2022-12-15', 1400.75) ON CONFLICT (order_id) DO UPDATE SET customer_id = '223e4567-e89b-12d3-a456-426614174025', total_amount = 1450.50, order_date = '2022-12-16'",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174015', '223e4567-e89b-12d3-a456-426614174026', '2022-12-16', 1500.25) ON CONFLICT (order_id) DO UPDATE SET customer_id = '223e4567-e89b-12d3-a456-426614174027', total_amount = 1550.50, order_date = '2022-12-17'",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174016', '223e4567-e89b-12d3-a456-426614174028', '2022-12-17', 1600.75) ON CONFLICT (order_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174017', '223e4567-e89b-12d3-a456-426614174029', '2022-12-18', 1700.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = '223e4567-e89b-12d3-a456-426614174030', total_amount = 1750.75, order_date = '2022-12-19'",
  "### TABLEDATA\n\nCREATE TABLE restaurant_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date DATE,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO restaurant_orders (order_id, customer_id, order_date, total_amount) VALUES ('123e4567-e89b-12d3-a456-426614174018', '223e4567-e89b-12d3-a456-426614174031', '2022-12-19', 1800.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = '223e4567-e89b-12d3-a456-426614174032', total_amount = 1850.25, order_date = '2022-12-20'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('1564e78a-ec0e-4eea-8aa6-62556e8bc7be', 'John Doe', '123-456-7890', 'john.doe@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('c59ccf8f-d5b6-4ffa-a630-8dac1d0b713b', 'Jane Smith', '987-654-3210', 'jane.smith@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('8ad335e9-055d-4b10-9ffd-94073b697c61', 'Alice Johnson', '345-678-9012', 'alice.johnson@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('9c08aa66-2a42-4fb4-9c53-1526c2714b86', 'Bob Brown', '111-222-3333', 'bob.brown@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('5e22a56c-4e11-4cf9-b97f-e20f5407a6d5', 'Emma Wilson', '555-888-7777', 'emma.wilson@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('fc32fd56-9c8c-4d86-8093-7b3ed9f6633a', 'Michael Lee', '444-999-2222', 'michael.lee@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('7001e1ef-30e1-46ee-952b-0d1d430962f0', 'Sarah Adams', '777-333-1111', 'sarah.adams@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('98e649f3-663a-4a00-a2d4-af28db93d809', 'David Brown', '222-777-4444', 'david.brown@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('09d0e742-f556-41b1-837a-243e98c31db0', 'Laura Miller', '666-555-3333', 'laura.miller@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('3c2a5b8f-8b2f-4955-bd5e-39543a9e5ae4', 'Kevin Wilson', '888-222-9999', 'kevin.wilson@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('c2f853f6-388c-4ebd-9b4f-9bb84b6f1a1e', 'Jessica Lee', '333-111-6666', 'jessica.lee@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('0c1c3da9-6ac2-4adf-abe4-55c3a0eed09f', 'Mark Johnson', '999-111-2222', 'mark.johnson@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('e17b2d1d-5b41-4d92-8a62-229a08cf80a7', 'Emily White', '222-333-4444', 'emily.white@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('80cfdba9-6da8-482e-923a-d63b9ee7f078', 'Ryan Adams', '444-666-8888', 'ryan.adams@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('c7294099-9541-4115-aba1-94749801ad16', 'Olivia Parker', '777-222-5555', 'olivia.parker@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('a0672455-e747-4dbb-b555-1f3dfa35070d', 'Daniel Wilson', '666-999-4444', 'daniel.wilson@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('377a400a-02f4-4b3b-bd43-9b8d599af530', 'Grace Brown', '888-111-5555', 'grace.brown@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('64878f94-848f-45b6-bdbd-8fee99a26fe1', 'Nathan Davis', '111-888-3333', 'nathan.davis@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('713d4cb9-b04b-4059-98f9-01a1ad6d4d43', 'Sophia Thompson', '333-444-7777', 'sophia.thompson@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('fcb22a41-fb14-4b1a-b219-46c30e62cd44', 'Jacob Hernandez', '777-555-2222', 'jacob.hernandez@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('123e4567-e89b-12d3-a456-426614174000', 'John Doe', '123-456-7890', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', customer_phone_number = '123-456-7890', customer_email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('223e4567-e89b-12d3-a456-426614174001', 'Jane Smith', '456-789-0123', 'jane.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith', customer_phone_number = '456-789-0123', customer_email = 'jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('323e4567-e89b-12d3-a456-426614174002', 'Alice Johnson', '789-012-3456', 'alice.johnson@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Johnson', customer_phone_number = '789-012-3456', customer_email = 'alice.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('423e4567-e89b-12d3-a456-426614174003', 'Bob Brown', '012-345-6789', 'bob.brown@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob Brown', customer_phone_number = '012-345-6789', customer_email = 'bob.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('523e4567-e89b-12d3-a456-426614174004', 'Eva Wilson', '345-678-9012', 'eva.wilson@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Eva Wilson', customer_phone_number = '345-678-9012', customer_email = 'eva.wilson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('623e4567-e89b-12d3-a456-426614174005', 'Michael Lee', '678-901-2345', 'michael.lee@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Michael Lee', customer_phone_number = '678-901-2345', customer_email = 'michael.lee@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('723e4567-e89b-12d3-a456-426614174006', 'Sarah Moore', '901-234-5678', 'sarah.moore@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sarah Moore', customer_phone_number = '901-234-5678', customer_email = 'sarah.moore@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('823e4567-e89b-12d3-a456-426614174007', 'David White', '234-567-8901', 'david.white@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'David White', customer_phone_number = '234-567-8901', customer_email = 'david.white@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('923e4567-e89b-12d3-a456-426614174008', 'Grace Harris', '567-890-1234', 'grace.harris@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Grace Harris', customer_phone_number = '567-890-1234', customer_email = 'grace.harris@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('a23e4567-e89b-12d3-a456-426614174009', 'Peter Clark', '890-123-4567', 'peter.clark@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Peter Clark', customer_phone_number = '890-123-4567', customer_email = 'peter.clark@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('b23e4567-e89b-12d3-a456-426614174010', 'Linda Lewis', '123-456-7890', 'linda.lewis@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Linda Lewis', customer_phone_number = '123-456-7890', customer_email = 'linda.lewis@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('c23e4567-e89b-12d3-a456-426614174011', 'Mark Turner', '456-789-0123', 'mark.turner@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mark Turner', customer_phone_number = '456-789-0123', customer_email = 'mark.turner@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('d23e4567-e89b-12d3-a456-426614174012', 'Laura Taylor', '789-012-3456', 'laura.taylor@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Laura Taylor', customer_phone_number = '789-012-3456', customer_email = 'laura.taylor@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('e23e4567-e89b-12d3-a456-426614174013', 'Steven Hill', '012-345-6789', 'steven.hill@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Steven Hill', customer_phone_number = '012-345-6789', customer_email = 'steven.hill@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('f23e4567-e89b-12d3-a456-426614174014', 'Carol Garcia', '345-678-9012', 'carol.garcia@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Carol Garcia', customer_phone_number = '345-678-9012', customer_email = 'carol.garcia@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('g23e4567-e89b-12d3-a456-426614174015', 'Daniel Allen', '678-901-2345', 'daniel.allen@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Daniel Allen', customer_phone_number = '678-901-2345', customer_email = 'daniel.allen@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('h23e4567-e89b-12d3-a456-426614174016', 'Jessica Martinez', '901-234-5678', 'jessica.martinez@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jessica Martinez', customer_phone_number = '901-234-5678', customer_email = 'jessica.martinez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('i23e4567-e89b-12d3-a456-426614174017', 'Patrick King', '234-567-8901', 'patrick.king@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Patrick King', customer_phone_number = '234-567-8901', customer_email = 'patrick.king@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('j23e4567-e89b-12d3-a456-426614174018', 'Monica Scott', '567-890-1234', 'monica.scott@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Monica Scott', customer_phone_number = '567-890-1234', customer_email = 'monica.scott@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_phone_number VARCHAR(15),\n    customer_email VARCHAR(50)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID,\n    order_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_phone_number, customer_email) VALUES ('k23e4567-e89b-12d3-a456-426614174019', 'Ryan Adams', '890-123-4567', 'ryan.adams@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Ryan Adams', customer_phone_number = '890-123-4567', customer_email = 'ryan.adams@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (1, 'John Doe', '123-456-7890') ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (2, 'Jane Smith', '987-654-3210') ON CONFLICT (customer_id) DO UPDATE SET name = 'Jane Smith', phone_number = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (3, 'Mike Johnson', '555-555-5555') ON CONFLICT (customer_id) DO UPDATE SET name = 'Mike Johnson', phone_number = '555-555-5555';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (4, 'Alice Brown', '111-222-3333') ON CONFLICT (customer_id) DO UPDATE SET name = 'Alice Brown', phone_number = '111-222-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (5, 'Sarah White', '444-444-4444') ON CONFLICT (customer_id) DO UPDATE SET name = 'Sarah White', phone_number = '444-444-4444';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (6, 'Tom Wilson', '666-666-6666') ON CONFLICT (customer_id) DO UPDATE SET name = 'Tom Wilson', phone_number = '666-666-6666';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (7, 'Emily Lee', '777-777-7777') ON CONFLICT (customer_id) DO UPDATE SET name = 'Emily Lee', phone_number = '777-777-7777';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (8, 'Chris Young', '888-888-8888') ON CONFLICT (customer_id) DO UPDATE SET name = 'Chris Young', phone_number = '888-888-8888';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (9, 'Alex Green', '999-999-9999') ON CONFLICT (customer_id) DO UPDATE SET name = 'Alex Green', phone_number = '999-999-9999';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (10, 'Hannah Taylor', '123-123-1234') ON CONFLICT (customer_id) DO UPDATE SET name = 'Hannah Taylor', phone_number = '123-123-1234';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (101, 1, '2022-05-15 09:00:00', 100.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 1, order_date = '2022-05-15 09:00:00', total_amount = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (102, 2, '2022-05-16 10:00:00', 150.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 2, order_date = '2022-05-16 10:00:00', total_amount = 150.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (103, 3, '2022-05-17 11:00:00', 200.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 3, order_date = '2022-05-17 11:00:00', total_amount = 200.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (104, 4, '2022-05-18 12:00:00', 250.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 4, order_date = '2022-05-18 12:00:00', total_amount = 250.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (105, 5, '2022-05-19 13:00:00', 300.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 5, order_date = '2022-05-19 13:00:00', total_amount = 300.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (106, 6, '2022-05-20 14:00:00', 350.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 6, order_date = '2022-05-20 14:00:00', total_amount = 350.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (107, 7, '2022-05-21 15:00:00', 400.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 7, order_date = '2022-05-21 15:00:00', total_amount = 400.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (108, 8, '2022-05-22 16:00:00', 450.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 8, order_date = '2022-05-22 16:00:00', total_amount = 450.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (109, 9, '2022-05-23 17:00:00', 500.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 9, order_date = '2022-05-23 17:00:00', total_amount = 500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (110, 10, '2022-05-24 18:00:00', 550.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 10, order_date = '2022-05-24 18:00:00', total_amount = 550.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (201, 101, 'Shipped', '2022-05-16 12:00:00') ON CONFLICT (order_history_id) DO UPDATE SET order_id = 101, status = 'Shipped', update_date = '2022-05-16 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (202, 102, 'Delivered', '2022-05-17 12:00:00') ON CONFLICT (order_history_id) DO UPDATE SET order_id = 102, status = 'Delivered', update_date = '2022-05-17 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (203, 103, 'In Progress', '2022-05-18 12:00:00') ON CONFLICT (order_history_id) DO UPDATE SET order_id = 103, status = 'In Progress', update_date = '2022-05-18 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (204, 104, 'Cancelled', '2022-05-19 12:00:00') ON CONFLICT (order_history_id) DO UPDATE SET order_id = 104, status = 'Cancelled', update_date = '2022-05-19 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (205, 105, 'Returned', '2022-05-20 12:00:00') ON CONFLICT (order_history_id) DO UPDATE SET order_id = 105, status = 'Returned', update_date = '2022-05-20 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (1, 'John Doe', '123-456-7890') ON DUPLICATE KEY UPDATE name='John Doe', phone_number='123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (2, 'Jane Smith', '555-789-1234') ON DUPLICATE KEY UPDATE name='Jane Smith', phone_number='555-789-1234';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (3, 'Alice Brown', '777-222-3333') ON DUPLICATE KEY UPDATE name='Alice Brown', phone_number='777-222-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (4, 'Bob Johnson', '999-999-9999') ON DUPLICATE KEY UPDATE name='Bob Johnson', phone_number='999-999-9999';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (5, 'Emily Davis', '111-222-3333') ON DUPLICATE KEY UPDATE name='Emily Davis', phone_number='111-222-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (6, 'Michael Wilson', '444-555-6666') ON DUPLICATE KEY UPDATE name='Michael Wilson', phone_number='444-555-6666';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (7, 'Sarah Lee', '777-888-9999') ON DUPLICATE KEY UPDATE name='Sarah Lee', phone_number='777-888-9999';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (8, 'David Clark', '222-333-4444') ON DUPLICATE KEY UPDATE name='David Clark', phone_number='222-333-4444';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (9, 'Olivia Adams', '666-777-8888') ON DUPLICATE KEY UPDATE name='Olivia Adams', phone_number='666-777-8888';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, phone_number) VALUES (10, 'Thomas Moore', '555-444-3333') ON DUPLICATE KEY UPDATE name='Thomas Moore', phone_number='555-444-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2022-01-01', 100.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2022-01-01', total_amount=100.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (2, 2, '2022-01-02', 200.00) ON DUPLICATE KEY UPDATE customer_id=2, order_date='2022-01-02', total_amount=200.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (3, 3, '2022-01-03', 300.00) ON DUPLICATE KEY UPDATE customer_id=3, order_date='2022-01-03', total_amount=300.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (4, 4, '2022-01-04', 400.00) ON DUPLICATE KEY UPDATE customer_id=4, order_date='2022-01-04', total_amount=400.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (5, 5, '2022-01-05', 500.00) ON DUPLICATE KEY UPDATE customer_id=5, order_date='2022-01-05', total_amount=500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (6, 6, '2022-01-06', 600.00) ON DUPLICATE KEY UPDATE customer_id=6, order_date='2022-01-06', total_amount=600.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (7, 7, '2022-01-07', 700.00) ON DUPLICATE KEY UPDATE customer_id=7, order_date='2022-01-07', total_amount=700.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (8, 8, '2022-01-08', 800.00) ON DUPLICATE KEY UPDATE customer_id=8, order_date='2022-01-08', total_amount=800.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (9, 9, '2022-01-09', 900.00) ON DUPLICATE KEY UPDATE customer_id=9, order_date='2022-01-09', total_amount=900.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (10, 10, '2022-01-10', 1000.00) ON DUPLICATE KEY UPDATE customer_id=10, order_date='2022-01-10', total_amount=1000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (1, 1, 'Pending', '2022-01-01') ON DUPLICATE KEY UPDATE order_id=1, status='Pending', update_date='2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (2, 2, 'Shipped', '2022-01-02') ON DUPLICATE KEY UPDATE order_id=2, status='Shipped', update_date='2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (3, 3, 'Delivered', '2022-01-03') ON DUPLICATE KEY UPDATE order_id=3, status='Delivered', update_date='2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (4, 4, 'Pending', '2022-01-04') ON DUPLICATE KEY UPDATE order_id=4, status='Pending', update_date='2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (5, 5, 'Shipped', '2022-01-05') ON DUPLICATE KEY UPDATE order_id=5, status='Shipped', update_date='2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (6, 6, 'Delivered', '2022-01-06') ON DUPLICATE KEY UPDATE order_id=6, status='Delivered', update_date='2022-01-06';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (7, 7, 'Pending', '2022-01-07') ON DUPLICATE KEY UPDATE order_id=7, status='Pending', update_date='2022-01-07';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (8, 8, 'Shipped', '2022-01-08') ON DUPLICATE KEY UPDATE order_id=8, status='Shipped', update_date='2022-01-08';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (9, 9, 'Delivered', '2022-01-09') ON DUPLICATE KEY UPDATE order_id=9, status='Delivered', update_date='2022-01-09';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n)\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT NOT NULL,\n  order_date TIMESTAMP NOT NULL,\n  total_amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE order_history (\n  order_history_id INT PRIMARY KEY,\n  order_id INT NOT NULL,\n  status VARCHAR(50) NOT NULL,\n  update_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (order_id) REFERENCES orders(order_id)\n)\n\n### STATEMENT\n\nINSERT INTO order_history (order_history_id, order_id, status, update_date) VALUES (10, 10, 'Pending', '2022-01-10') ON DUPLICATE KEY UPDATE order_id=10, status='Pending', update_date='2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1001, '2022-01-01', 100.00) ON DUPLICATE KEY UPDATE customer_id = 1001, order_date = '2022-01-01', total_amount = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_items (item_id, order_id, item_name, quantity, price) VALUES (1, 1, 'Item 1', 2, 10.00) ON DUPLICATE KEY UPDATE order_id = 1, item_name = 'Item 1', quantity = 2, price = 10.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_history (history_id, order_id, history_date, status) VALUES (1, 1, '2022-01-01', 'Shipped') ON DUPLICATE KEY UPDATE order_id = 1, history_date = '2022-01-01', status = 'Shipped';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (1001, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_orders (order_id, customer_id, order_date, total_amount) VALUES (2, 1002, '2022-01-02', 150.00) ON DUPLICATE KEY UPDATE customer_id = 1002, order_date = '2022-01-02', total_amount = 150.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_items (item_id, order_id, item_name, quantity, price) VALUES (2, 2, 'Item 2', 3, 15.00) ON DUPLICATE KEY UPDATE order_id = 2, item_name = 'Item 2', quantity = 3, price = 15.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_history (history_id, order_id, history_date, status) VALUES (2, 2, '2022-01-02', 'Processing') ON DUPLICATE KEY UPDATE order_id = 2, history_date = '2022-01-02', status = 'Processing';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (1002, 'Jane Smith', 'jane.smith@example.com', '456-789-0123') ON DUPLICATE KEY UPDATE customer_name = 'Jane Smith', email = 'jane.smith@example.com', phone_number = '456-789-0123';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_orders (order_id, customer_id, order_date, total_amount) VALUES (3, 1003, '2022-01-03', 200.00) ON DUPLICATE KEY UPDATE customer_id = 1003, order_date = '2022-01-03', total_amount = 200.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_items (item_id, order_id, item_name, quantity, price) VALUES (3, 3, 'Item 3', 4, 20.00) ON DUPLICATE KEY UPDATE order_id = 3, item_name = 'Item 3', quantity = 4, price = 20.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_history (history_id, order_id, history_date, status) VALUES (3, 3, '2022-01-03', 'Delivered') ON DUPLICATE KEY UPDATE order_id = 3, history_date = '2022-01-03', status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (1003, 'Alice Johnson', 'alice.johnson@example.com', '789-012-3456') ON DUPLICATE KEY UPDATE customer_name = 'Alice Johnson', email = 'alice.johnson@example.com', phone_number = '789-012-3456';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_orders (order_id, customer_id, order_date, total_amount) VALUES (4, 1004, '2022-01-04', 250.00) ON DUPLICATE KEY UPDATE customer_id = 1004, order_date = '2022-01-04', total_amount = 250.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_items (item_id, order_id, item_name, quantity, price) VALUES (4, 4, 'Item 4', 5, 25.00) ON DUPLICATE KEY UPDATE order_id = 4, item_name = 'Item 4', quantity = 5, price = 25.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_history (history_id, order_id, history_date, status) VALUES (4, 4, '2022-01-04', 'Delayed') ON DUPLICATE KEY UPDATE order_id = 4, history_date = '2022-01-04', status = 'Delayed';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (1004, 'Mark Wilson', 'mark.wilson@example.com', '012-345-6789') ON DUPLICATE KEY UPDATE customer_name = 'Mark Wilson', email = 'mark.wilson@example.com', phone_number = '012-345-6789';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_orders (order_id, customer_id, order_date, total_amount) VALUES (5, 1005, '2022-01-05', 300.00) ON DUPLICATE KEY UPDATE customer_id = 1005, order_date = '2022-01-05', total_amount = 300.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_items (item_id, order_id, item_name, quantity, price) VALUES (5, 5, 'Item 5', 6, 30.00) ON DUPLICATE KEY UPDATE order_id = 5, item_name = 'Item 5', quantity = 6, price = 30.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_history (history_id, order_id, history_date, status) VALUES (5, 5, '2022-01-05', 'Cancelled') ON DUPLICATE KEY UPDATE order_id = 5, history_date = '2022-01-05', status = 'Cancelled';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (1005, 'Sarah Brown', 'sarah.brown@example.com', '345-678-9012') ON DUPLICATE KEY UPDATE customer_name = 'Sarah Brown', email = 'sarah.brown@example.com', phone_number = '345-678-9012';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_orders (order_id, customer_id, order_date, total_amount) VALUES (1, 101, '2022-01-01', 100.50) ON DUPLICATE KEY UPDATE customer_id = 101, order_date = '2022-01-01', total_amount = 100.50;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_orders (order_id, customer_id, order_date, total_amount) VALUES (2, 102, '2022-01-02', 150.75) ON DUPLICATE KEY UPDATE customer_id = 102, order_date = '2022-01-02', total_amount = 150.75;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_orders (order_id, customer_id, order_date, total_amount) VALUES (3, 103, '2022-01-03', 200.25) ON DUPLICATE KEY UPDATE customer_id = 103, order_date = '2022-01-03', total_amount = 200.25;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_orders (order_id, customer_id, order_date, total_amount) VALUES (4, 104, '2022-01-04', 300.00) ON DUPLICATE KEY UPDATE customer_id = 104, order_date = '2022-01-04', total_amount = 300.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customer_orders (order_id, customer_id, order_date, total_amount) VALUES (5, 105, '2022-01-05', 250.50) ON DUPLICATE KEY UPDATE customer_id = 105, order_date = '2022-01-05', total_amount = 250.50;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_items (item_id, order_id, item_name, quantity, price) VALUES (1, 1, 'Item 1', 2, 25.00) ON DUPLICATE KEY UPDATE order_id = 1, item_name = 'Item 1', quantity = 2, price = 25.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_items (item_id, order_id, item_name, quantity, price) VALUES (2, 1, 'Item 2', 3, 30.00) ON DUPLICATE KEY UPDATE order_id = 1, item_name = 'Item 2', quantity = 3, price = 30.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_items (item_id, order_id, item_name, quantity, price) VALUES (3, 2, 'Item 3', 4, 40.00) ON DUPLICATE KEY UPDATE order_id = 2, item_name = 'Item 3', quantity = 4, price = 40.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_items (item_id, order_id, item_name, quantity, price) VALUES (4, 2, 'Item 4', 1, 10.00) ON DUPLICATE KEY UPDATE order_id = 2, item_name = 'Item 4', quantity = 1, price = 10.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_items (item_id, order_id, item_name, quantity, price) VALUES (5, 3, 'Item 5', 2, 20.00) ON DUPLICATE KEY UPDATE order_id = 3, item_name = 'Item 5', quantity = 2, price = 20.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_history (history_id, order_id, history_date, status) VALUES (1, 1, '2022-01-05', 'Shipped') ON DUPLICATE KEY UPDATE order_id = 1, history_date = '2022-01-05', status = 'Shipped';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_history (history_id, order_id, history_date, status) VALUES (2, 2, '2022-01-06', 'Delivered') ON DUPLICATE KEY UPDATE order_id = 2, history_date = '2022-01-06', status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_history (history_id, order_id, history_date, status) VALUES (3, 3, '2022-01-07', 'Processing') ON DUPLICATE KEY UPDATE order_id = 3, history_date = '2022-01-07', status = 'Processing';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_history (history_id, order_id, history_date, status) VALUES (4, 4, '2022-01-08', 'Cancelled') ON DUPLICATE KEY UPDATE order_id = 4, history_date = '2022-01-08', status = 'Cancelled';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO order_history (history_id, order_id, history_date, status) VALUES (5, 5, '2022-01-09', 'Completed') ON DUPLICATE KEY UPDATE order_id = 5, history_date = '2022-01-09', status = 'Completed';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (101, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (102, 'Jane Smith', 'jane.smith@example.com', '987-654-3210') ON DUPLICATE KEY UPDATE customer_name = 'Jane Smith', email = 'jane.smith@example.com', phone_number = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (103, 'Alice Johnson', 'alice.johnson@example.com', '555-555-5555') ON DUPLICATE KEY UPDATE customer_name = 'Alice Johnson', email = 'alice.johnson@example.com', phone_number = '555-555-5555';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (104, 'Bob Wilson', 'bob.wilson@example.com', '111-222-3333') ON DUPLICATE KEY UPDATE customer_name = 'Bob Wilson', email = 'bob.wilson@example.com', phone_number = '111-222-3333';",
  "### TABLEDATA\n\nCREATE TABLE customer_orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total_amount DECIMAL\n);\n\n\nCREATE TABLE order_items (\n  item_id INT PRIMARY KEY,\n  order_id INT,\n  item_name VARCHAR(50),\n  quantity INT,\n  price DECIMAL\n);\n\n\nCREATE TABLE order_history (\n  history_id INT PRIMARY KEY,\n  order_id INT,\n  history_date DATE,\n  status VARCHAR(50)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  email VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES (105, 'Sarah Brown', 'sarah.brown@example.com', '999-888-7777') ON DUPLICATE KEY UPDATE customer_name = 'Sarah Brown', email = 'sarah.brown@example.com', phone_number = '999-888-7777';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, phone_number) VALUES (1, 'Alice', '111-111-1111') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice', phone_number = '111-111-1111';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, phone_number) VALUES (2, 'Bob', '222-222-2222') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob', phone_number = '222-222-2222';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_price) VALUES (1, 1, '2021-09-15', 100.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 1, order_date = '2021-09-15', total_price = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_price) VALUES (2, 2, '2021-09-20', 150.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 2, order_date = '2021-09-20', total_price = 150.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO order_items (order_item_id, order_id, item_name, quantity, unit_price) VALUES (1, 1, 'item 1', 2, 10.00) ON CONFLICT (order_item_id) DO UPDATE SET order_id = 1, item_name = 'item 1', quantity = 2, unit_price = 10.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO order_items (order_item_id, order_id, item_name, quantity, unit_price) VALUES (2, 2, 'item 2', 3, 15.00) ON CONFLICT (order_item_id) DO UPDATE SET order_id = 2, item_name = 'item 2', quantity = 3, unit_price = 15.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO payments (payment_id, order_id, payment_date, amount_paid) VALUES (1, 1, '2021-09-16', 80.00) ON CONFLICT (payment_id) DO UPDATE SET order_id = 1, payment_date = '2021-09-16', amount_paid = 80.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO payments (payment_id, order_id, payment_date, amount_paid) VALUES (2, 2, '2021-09-21', 120.00) ON CONFLICT (payment_id) DO UPDATE SET order_id = 2, payment_date = '2021-09-21', amount_paid = 120.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO order_history (history_id, order_id, status, updated_at) VALUES (1, 1, 'Shipped', '2021-09-17 12:00:00') ON CONFLICT (history_id) DO UPDATE SET order_id = 1, status = 'Shipped', updated_at = '2021-09-17 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO order_history (history_id, order_id, status, updated_at) VALUES (2, 2, 'Delivered', '2021-09-22 10:00:00') ON CONFLICT (history_id) DO UPDATE SET order_id = 2, status = 'Delivered', updated_at = '2021-09-22 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, phone_number) VALUES (1, 'John Doe', '555-1234') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', phone_number = '555-1234';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_price) VALUES (1, 1, '2022-01-01', 100.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 1, order_date = '2022-01-01', total_price = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO order_items (order_item_id, order_id, item_name, quantity, unit_price) VALUES (1, 1, 'Product A', 2, 10.00) ON CONFLICT (order_item_id) DO UPDATE SET order_id = 1, item_name = 'Product A', quantity = 2, unit_price = 10.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, order_id, payment_date, amount_paid) VALUES (1, 1, '2022-01-02', 50.00) ON CONFLICT (payment_id) DO UPDATE SET order_id = 1, payment_date = '2022-01-02', amount_paid = 50.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO order_history (history_id, order_id, status, updated_at) VALUES (1, 1, 'Shipped', '2022-01-03 10:00:00') ON CONFLICT (history_id) DO UPDATE SET order_id = 1, status = 'Shipped', updated_at = '2022-01-03 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, phone_number) VALUES (2, 'Jane Smith', '555-5678') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith', phone_number = '555-5678';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_price) VALUES (2, 2, '2022-01-05', 150.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 2, order_date = '2022-01-05', total_price = 150.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO order_items (order_item_id, order_id, item_name, quantity, unit_price) VALUES (2, 2, 'Product B', 3, 20.00) ON CONFLICT (order_item_id) DO UPDATE SET order_id = 2, item_name = 'Product B', quantity = 3, unit_price = 20.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, order_id, payment_date, amount_paid) VALUES (2, 2, '2022-01-06', 75.00) ON CONFLICT (payment_id) DO UPDATE SET order_id = 2, payment_date = '2022-01-06', amount_paid = 75.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO order_history (history_id, order_id, status, updated_at) VALUES (2, 2, 'Delivered', '2022-01-07 10:00:00') ON CONFLICT (history_id) DO UPDATE SET order_id = 2, status = 'Delivered', updated_at = '2022-01-07 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, phone_number) VALUES (3, 'Alice Johnson', '555-9876') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Johnson', phone_number = '555-9876';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_price) VALUES (3, 3, '2022-01-10', 200.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 3, order_date = '2022-01-10', total_price = 200.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO order_items (order_item_id, order_id, item_name, quantity, unit_price) VALUES (3, 3, 'Product C', 1, 30.00) ON CONFLICT (order_item_id) DO UPDATE SET order_id = 3, item_name = 'Product C', quantity = 1, unit_price = 30.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, order_id, payment_date, amount_paid) VALUES (3, 3, '2022-01-11', 100.00) ON CONFLICT (payment_id) DO UPDATE SET order_id = 3, payment_date = '2022-01-11', amount_paid = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO order_history (history_id, order_id, status, updated_at) VALUES (3, 3, 'Processing', '2022-01-12 10:00:00') ON CONFLICT (history_id) DO UPDATE SET order_id = 3, status = 'Processing', updated_at = '2022-01-12 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, phone_number) VALUES (4, 'Mike Williams', '555-4321') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mike Williams', phone_number = '555-4321';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_price) VALUES (4, 4, '2022-01-15', 250.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 4, order_date = '2022-01-15', total_price = 250.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO order_items (order_item_id, order_id, item_name, quantity, unit_price) VALUES (4, 4, 'Product D', 4, 40.00) ON CONFLICT (order_item_id) DO UPDATE SET order_id = 4, item_name = 'Product D', quantity = 4, unit_price = 40.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, order_id, payment_date, amount_paid) VALUES (4, 4, '2022-01-16', 125.00) ON CONFLICT (payment_id) DO UPDATE SET order_id = 4, payment_date = '2022-01-16', amount_paid = 125.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_price DECIMAL(10, 2)\n);\n\nCREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    item_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(8, 2)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT,\n    payment_date DATE,\n    amount_paid DECIMAL(10, 2)\n);\n\nCREATE TABLE order_history (\n    history_id INT PRIMARY KEY,\n    order_id INT,\n    status VARCHAR(50),\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO order_history (history_id, order_id, status, updated_at) VALUES (4, 4, 'Completed', '2022-01-17 10:00:00') ON CONFLICT (history_id) DO UPDATE SET order_id = 4, status = 'Completed', updated_at = '2022-01-17 10:00:00';"
]