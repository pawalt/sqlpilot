[
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('1', 'Flour', 2.5, 'lbs')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('2', 'Sugar', 3.0, 'cups')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('3', 'Salt', 0.5, 'tsp')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('4', 'Eggs', 6.0, 'count')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('5', 'Milk', 1.5, 'liters')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('6', 'Butter', 0.75, 'cups')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('7', 'Vanilla Extract', 1.0, 'tbsp')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('8', 'Baking Powder', 2.0, 'tsp')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('9', 'Chocolate Chips', 0.75, 'cups')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('10', 'Yeast', 1.5, 'tsp')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('11', 'Olive Oil', 1.0, 'tbsp')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('12', 'Honey', 0.5, 'cups')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('13', 'Cinnamon', 0.25, 'tsp')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('14', 'Nutmeg', 0.1, 'tsp')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('15', 'Cocoa Powder', 0.5, 'cups')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('16', 'Maple Syrup', 0.75, 'cups')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('17', 'Lemon Juice', 1.0, 'tbsp')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('18', 'Coconut Milk', 1.25, 'cups')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('19', 'Almond Flour', 2.0, 'cups')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('20', 'Breadcrumbs', 1.5, 'cups')",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('11111111-1111-1111-1111-111111111111', 'Flour', 2.5, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Flour', quantity = 2.5, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('22222222-2222-2222-2222-222222222222', 'Sugar', 1.5, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Sugar', quantity = 1.5, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('33333333-3333-3333-3333-333333333333', 'Salt', 0.5, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Salt', quantity = 0.5, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('44444444-4444-4444-4444-444444444444', 'Pepper', 0.2, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Pepper', quantity = 0.2, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('55555555-5555-5555-5555-555555555555', 'Milk', 1.0, 'liter') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Milk', quantity = 1.0, unit_of_measure = 'liter';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('66666666-6666-6666-6666-666666666666', 'Eggs', 12, 'pieces') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Eggs', quantity = 12, unit_of_measure = 'pieces';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('77777777-7777-7777-7777-777777777777', 'Butter', 0.5, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Butter', quantity = 0.5, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('88888888-8888-8888-8888-888888888888', 'Vanilla Extract', 0.1, 'liter') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Vanilla Extract', quantity = 0.1, unit_of_measure = 'liter';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('99999999-9999-9999-9999-999999999999', 'Chocolate Chips', 0.3, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Chocolate Chips', quantity = 0.3, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('10101010-1010-1010-1010-101010101010', 'Yeast', 0.05, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Yeast', quantity = 0.05, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('11112222-1111-2222-3333-444455556666', 'Onions', 1.0, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Onions', quantity = 1.0, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('22223333-2222-3333-4444-555566667777', 'Garlic', 0.3, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Garlic', quantity = 0.3, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('33334444-3333-4444-5555-666677778888', 'Tomatoes', 0.8, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Tomatoes', quantity = 0.8, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('44445555-4444-5555-6666-777788889999', 'Potatoes', 1.5, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Potatoes', quantity = 1.5, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('55556666-5555-6666-7777-888899990000', 'Carrots', 0.5, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Carrots', quantity = 0.5, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('66667777-6666-7777-8888-999900001111', 'Celery', 0.4, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Celery', quantity = 0.4, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('77778888-7777-8888-9999-000011112222', 'Broccoli', 0.6, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Broccoli', quantity = 0.6, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('88889999-8888-9999-0000-111122223333', 'Bell Peppers', 0.3, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Bell Peppers', quantity = 0.3, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('99990000-9999-0000-1111-222233334444', 'Spinach', 0.2, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Spinach', quantity = 0.2, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id UUID PRIMARY KEY,\n  ingredient_name STRING,\n  quantity FLOAT,\n  unit_of_measure STRING\n)\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity, unit_of_measure) VALUES ('00001111-0000-1111-2222-333344445555', 'Lettuce', 0.3, 'kg') ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Lettuce', quantity = 0.3, unit_of_measure = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (1, 'Flour', 100) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (2, 'Sugar', 50) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 50;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (3, 'Eggs', 20) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 20;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (4, 'Milk', 30) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 30;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (5, 'Butter', 40) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 40;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (6, 'Salt', 10) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (7, 'Pepper', 5) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (8, 'Baking Powder', 15) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 15;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (9, 'Vanilla Extract', 25) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 25;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (10, 'Chocolate Chips', 60) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 60;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (11, 'Nuts', 35) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 35;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (12, 'Cinnamon', 10) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (13, 'Lemon Juice', 18) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 18;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (14, 'Honey', 22) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 22;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (15, 'Olive Oil', 28) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 28;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (16, 'Garlic', 12) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 12;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (17, 'Onion', 15) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 15;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (18, 'Tomato', 20) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 20;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (19, 'Pasta', 25) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 25;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (20, 'Cheese', 30) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 30;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (1, 'Flour', 100) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 150;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, required_ingredients, serving_size) VALUES (1, 'Pancakes', ARRAY['Flour', 'Eggs', 'Milk'], 4) ON CONFLICT (recipe_id) DO UPDATE SET serving_size = 6;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (2, 'Sugar', 200) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 250;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, required_ingredients, serving_size) VALUES (2, 'Brownies', ARRAY['Sugar', 'Butter', 'Chocolate'], 12) ON CONFLICT (recipe_id) DO UPDATE SET serving_size = 16;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (3, 'Eggs', 50) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 60;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, required_ingredients, serving_size) VALUES (3, 'Scrambled Eggs', ARRAY['Eggs', 'Butter', 'Salt'], 2) ON CONFLICT (recipe_id) DO UPDATE SET serving_size = 3;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (4, 'Milk', 300) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 350;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, required_ingredients, serving_size) VALUES (4, 'Milkshake', ARRAY['Milk', 'Ice Cream', 'Flavoring'], 2) ON CONFLICT (recipe_id) DO UPDATE SET serving_size = 4;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (5, 'Butter', 150) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 180;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, required_ingredients, serving_size) VALUES (5, 'Butter Cookies', ARRAY['Butter', 'Sugar', 'Flour'], 24) ON CONFLICT (recipe_id) DO UPDATE SET serving_size = 30;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (6, 'Chocolate', 100) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 120;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, required_ingredients, serving_size) VALUES (6, 'Chocolate Cake', ARRAY['Flour', 'Sugar', 'Chocolate', 'Butter'], 10) ON CONFLICT (recipe_id) DO UPDATE SET serving_size = 12;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (7, 'Salt', 80) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, required_ingredients, serving_size) VALUES (7, 'Pretzels', ARRAY['Flour', 'Salt', 'Water'], 8) ON CONFLICT (recipe_id) DO UPDATE SET serving_size = 10;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (8, 'Ice Cream', 120) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 150;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, required_ingredients, serving_size) VALUES (8, 'Ice Cream Sundae', ARRAY['Ice Cream', 'Chocolate Sauce', 'Whipped Cream'], 1) ON CONFLICT (recipe_id) DO UPDATE SET serving_size = 2;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (9, 'Whipped Cream', 80) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, required_ingredients, serving_size) VALUES (9, 'Fruit Parfait', ARRAY['Yogurt', 'Granola', 'Fruit', 'Whipped Cream'], 1) ON CONFLICT (recipe_id) DO UPDATE SET serving_size = 2;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, available_quantity) VALUES (10, 'Yogurt', 100) ON CONFLICT (ingredient_id) DO UPDATE SET available_quantity = 120;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(50) NOT NULL,\n    available_quantity INT\n);\n\n\nCREATE TABLE recipes (\n    recipe_id INT PRIMARY KEY,\n    recipe_name VARCHAR(50) NOT NULL,\n    required_ingredients VARCHAR[],\n    serving_size INT\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, required_ingredients, serving_size) VALUES (10, 'Yogurt Smoothie', ARRAY['Yogurt', 'Fruit', 'Ice', 'Honey'], 2) ON CONFLICT (recipe_id) DO UPDATE SET serving_size = 3;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (1, 'Flour', 100, '2023-12-31') ON DUPLICATE KEY UPDATE name='Flour', quantity=100, expiration_date='2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (2, 'Sugar', 50, '2023-11-30') ON DUPLICATE KEY UPDATE name='Sugar', quantity=50, expiration_date='2023-11-30';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (3, 'Salt', 80, '2024-01-31') ON DUPLICATE KEY UPDATE name='Salt', quantity=80, expiration_date='2024-01-31';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (4, 'Eggs', 20, '2023-10-31') ON DUPLICATE KEY UPDATE name='Eggs', quantity=20, expiration_date='2023-10-31';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (5, 'Milk', 30, '2023-11-30') ON DUPLICATE KEY UPDATE name='Milk', quantity=30, expiration_date='2023-11-30';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (6, 'Butter', 40, '2023-12-31') ON DUPLICATE KEY UPDATE name='Butter', quantity=40, expiration_date='2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (7, 'Yeast', 10, '2023-10-31') ON DUPLICATE KEY UPDATE name='Yeast', quantity=10, expiration_date='2023-10-31';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (8, 'Cinnamon', 5, '2024-02-28') ON DUPLICATE KEY UPDATE name='Cinnamon', quantity=5, expiration_date='2024-02-28';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (9, 'Vanilla', 15, '2023-12-31') ON DUPLICATE KEY UPDATE name='Vanilla', quantity=15, expiration_date='2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (10, 'Chocolate', 25, '2023-11-30') ON DUPLICATE KEY UPDATE name='Chocolate', quantity=25, expiration_date='2023-11-30';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (id, name, description) VALUES (1, 'Chocolate Cake', 'Delicious chocolate cake recipe') ON DUPLICATE KEY UPDATE name='Chocolate Cake', description='Delicious chocolate cake recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (id, name, description) VALUES (2, 'Apple Pie', 'Classic apple pie recipe') ON DUPLICATE KEY UPDATE name='Apple Pie', description='Classic apple pie recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (id, name, description) VALUES (3, 'Pasta Carbonara', 'Authentic Italian pasta carbonara recipe') ON DUPLICATE KEY UPDATE name='Pasta Carbonara', description='Authentic Italian pasta carbonara recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (id, name, description) VALUES (4, 'Chicken Curry', 'Spicy chicken curry recipe') ON DUPLICATE KEY UPDATE name='Chicken Curry', description='Spicy chicken curry recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (id, name, description) VALUES (5, 'Caesar Salad', 'Classic Caesar salad recipe') ON DUPLICATE KEY UPDATE name='Caesar Salad', description='Classic Caesar salad recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (id, name, description) VALUES (6, 'Tiramisu', 'Decadent tiramisu dessert recipe') ON DUPLICATE KEY UPDATE name='Tiramisu', description='Decadent tiramisu dessert recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (id, name, description) VALUES (7, 'Pizza Margherita', 'Traditional pizza margherita recipe') ON DUPLICATE KEY UPDATE name='Pizza Margherita', description='Traditional pizza margherita recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (id, name, description) VALUES (8, 'Sushi Rolls', 'Fresh sushi rolls recipe') ON DUPLICATE KEY UPDATE name='Sushi Rolls', description='Fresh sushi rolls recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (id, name, description) VALUES (9, 'Beef Stew', 'Hearty beef stew recipe') ON DUPLICATE KEY UPDATE name='Beef Stew', description='Hearty beef stew recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (id, name, description) VALUES (10, 'Ratatouille', 'Classic French ratatouille recipe') ON DUPLICATE KEY UPDATE name='Ratatouille', description='Classic French ratatouille recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_used) VALUES (1, 1, 2) ON DUPLICATE KEY UPDATE quantity_used=2;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_used) VALUES (1, 2, 1) ON DUPLICATE KEY UPDATE quantity_used=1;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_used) VALUES (2, 3, 3) ON DUPLICATE KEY UPDATE quantity_used=3;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_used) VALUES (2, 4, 2) ON DUPLICATE KEY UPDATE quantity_used=2;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_used) VALUES (3, 5, 1) ON DUPLICATE KEY UPDATE quantity_used=1;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_used) VALUES (3, 6, 2) ON DUPLICATE KEY UPDATE quantity_used=2;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_used) VALUES (4, 7, 2) ON DUPLICATE KEY UPDATE quantity_used=2;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_used) VALUES (4, 8, 1) ON DUPLICATE KEY UPDATE quantity_used=1;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_used) VALUES (5, 9, 1) ON DUPLICATE KEY UPDATE quantity_used=1;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_used) VALUES (5, 10, 3) ON DUPLICATE KEY UPDATE quantity_used=3;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (1, 'Flour', 100, '2023-01-01') ON DUPLICATE KEY UPDATE quantity = quantity + 50;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (2, 'Sugar', 200, '2023-02-01') ON DUPLICATE KEY UPDATE expiration_date = '2023-03-01';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (3, 'Eggs', 50, '2023-04-01') ON DUPLICATE KEY UPDATE quantity = quantity - 10;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (4, 'Butter', 150, '2023-05-01') ON DUPLICATE KEY UPDATE expiration_date = '2023-06-01';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (5, 'Milk', 120, '2023-07-01') ON DUPLICATE KEY UPDATE quantity = quantity + 20;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (6, 'Salt', 80, '2023-08-01') ON DUPLICATE KEY UPDATE quantity = quantity - 5;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (7, 'Baking Powder', 70, '2023-09-01') ON DUPLICATE KEY UPDATE expiration_date = '2023-10-01';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO ingredients (id, name, quantity, expiration_date) VALUES (8, 'Cinnamon', 30, '2023-11-01') ON DUPLICATE KEY UPDATE quantity = quantity + 10;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (id, name, description) VALUES (1, 'Chocolate Cake', 'Delicious chocolate cake recipe') ON DUPLICATE KEY UPDATE description = 'The ultimate chocolate cake recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (id, name, description) VALUES (2, 'Pasta Carbonara', 'Classic pasta carbonara recipe') ON DUPLICATE KEY UPDATE description = 'Authentic pasta carbonara recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (id, name, description) VALUES (3, 'Apple Pie', 'Homemade apple pie recipe') ON DUPLICATE KEY UPDATE description = 'Grandma''s secret apple pie recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (id, name, description) VALUES (4, 'Chicken Stir-Fry', 'Quick and easy chicken stir-fry recipe') ON DUPLICATE KEY UPDATE description = 'Healthy chicken stir-fry recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (id, name, description) VALUES (5, 'Vegetable Curry', 'Spicy vegetable curry recipe') ON DUPLICATE KEY UPDATE description = 'Mouth-watering vegetable curry recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (id, name, description) VALUES (6, 'Lemon Tart', 'Refreshing lemon tart recipe') ON DUPLICATE KEY UPDATE description = 'Zesty lemon tart recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (id, name, description) VALUES (7, 'Beef Stew', 'Hearty beef stew recipe') ON DUPLICATE KEY UPDATE description = 'Savory beef stew recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO recipes (id, name, description) VALUES (8, 'Fish Tacos', 'Tasty fish tacos recipe') ON DUPLICATE KEY UPDATE description = 'Crunchy fish tacos recipe';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_used) VALUES (1, 1, 2) ON DUPLICATE KEY UPDATE quantity_used = quantity_used + 1;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_used) VALUES (2, 2, 3) ON DUPLICATE KEY UPDATE quantity_used = quantity_used + 2;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_used) VALUES (3, 3, 4) ON DUPLICATE KEY UPDATE quantity_used = quantity_used + 3;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    quantity INT,\n    expiration_date DATE\n);\n\nCREATE TABLE recipes (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n    recipe_id INT,\n    ingredient_id INT,\n    quantity_used INT,\n    FOREIGN KEY (recipe_id) REFERENCES recipes(id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(id)\n);\n\n### STATEMENT\n\nUPSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_used) VALUES (4, 4, 5) ON DUPLICATE KEY UPDATE quantity_used = quantity_used + 4;",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity_in_stock) VALUES (1, 'Flour', 100) ON DUPLICATE KEY UPDATE ingredient_name = 'Flour', quantity_in_stock = 100",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity_in_stock) VALUES (2, 'Sugar', 50) ON DUPLICATE KEY UPDATE ingredient_name = 'Sugar', quantity_in_stock = 50",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, serving_size) VALUES (1, 'Cake', 8) ON DUPLICATE KEY UPDATE recipe_name = 'Cake', serving_size = 8",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, serving_size) VALUES (2, 'Cookies', 12) ON DUPLICATE KEY UPDATE recipe_name = 'Cookies', serving_size = 12",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO ingredient_usage (usage_id, recipe_id, ingredient_id, quantity_used) VALUES (1, 1, 1, 2.5) ON DUPLICATE KEY UPDATE recipe_id = 1, ingredient_id = 1, quantity_used = 2.5",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO ingredient_usage (usage_id, recipe_id, ingredient_id, quantity_used) VALUES (2, 1, 2, 1.5) ON DUPLICATE KEY UPDATE recipe_id = 1, ingredient_id = 2, quantity_used = 1.5",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO alerts (alert_id, ingredient_id, message) VALUES (1, 1, 'Low quantity in stock') ON DUPLICATE KEY UPDATE ingredient_id = 1, message = 'Low quantity in stock'",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO alerts (alert_id, ingredient_id, message) VALUES (2, 2, 'Out of stock') ON DUPLICATE KEY UPDATE ingredient_id = 2, message = 'Out of stock'",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity_in_stock) VALUES (3, 'Eggs', 20) ON DUPLICATE KEY UPDATE ingredient_name = 'Eggs', quantity_in_stock = 20",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity_in_stock) VALUES (4, 'Butter', 30) ON DUPLICATE KEY UPDATE ingredient_name = 'Butter', quantity_in_stock = 30",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, serving_size) VALUES (3, 'Brownies', 6) ON DUPLICATE KEY UPDATE recipe_name = 'Brownies', serving_size = 6",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, serving_size) VALUES (4, 'Pancakes', 10) ON DUPLICATE KEY UPDATE recipe_name = 'Pancakes', serving_size = 10",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO ingredient_usage (usage_id, recipe_id, ingredient_id, quantity_used) VALUES (3, 2, 1, 1.0) ON DUPLICATE KEY UPDATE recipe_id = 2, ingredient_id = 1, quantity_used = 1.0",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO ingredient_usage (usage_id, recipe_id, ingredient_id, quantity_used) VALUES (4, 2, 3, 2.0) ON DUPLICATE KEY UPDATE recipe_id = 2, ingredient_id = 3, quantity_used = 2.0",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO alerts (alert_id, ingredient_id, message) VALUES (3, 3, 'Running low on eggs') ON DUPLICATE KEY UPDATE ingredient_id = 3, message = 'Running low on eggs'",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO alerts (alert_id, ingredient_id, message) VALUES (4, 4, 'Almost out of butter') ON DUPLICATE KEY UPDATE ingredient_id = 4, message = 'Almost out of butter'",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity_in_stock) VALUES (5, 'Milk', 15) ON DUPLICATE KEY UPDATE ingredient_name = 'Milk', quantity_in_stock = 15",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO ingredients (ingredient_id, ingredient_name, quantity_in_stock) VALUES (6, 'Chocolate', 40) ON DUPLICATE KEY UPDATE ingredient_name = 'Chocolate', quantity_in_stock = 40",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, serving_size) VALUES (5, 'Muffins', 6) ON DUPLICATE KEY UPDATE recipe_name = 'Muffins', serving_size = 6",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO recipes (recipe_id, recipe_name, serving_size) VALUES (6, 'Waffles', 8) ON DUPLICATE KEY UPDATE recipe_name = 'Waffles', serving_size = 8",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO ingredient_usage (usage_id, recipe_id, ingredient_id, quantity_used) VALUES (5, 3, 1, 1.5) ON DUPLICATE KEY UPDATE recipe_id = 3, ingredient_id = 1, quantity_used = 1.5",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO ingredient_usage (usage_id, recipe_id, ingredient_id, quantity_used) VALUES (6, 3, 6, 3.0) ON DUPLICATE KEY UPDATE recipe_id = 3, ingredient_id = 6, quantity_used = 3.0",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO alerts (alert_id, ingredient_id, message) VALUES (5, 5, 'Running low on milk') ON DUPLICATE KEY UPDATE ingredient_id = 5, message = 'Running low on milk'",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nUPSERT INTO alerts (alert_id, ingredient_id, message) VALUES (6, 6, 'Running low on chocolate') ON DUPLICATE KEY UPDATE ingredient_id = 6, message = 'Running low on chocolate'",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity_in_stock) VALUES (1, 'Flour', 100.00) ON DUPLICATE KEY UPDATE ingredient_name = VALUES(ingredient_name), quantity_in_stock = VALUES(quantity_in_stock);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity_in_stock) VALUES (2, 'Sugar', 50.00) ON DUPLICATE KEY UPDATE ingredient_name = VALUES(ingredient_name), quantity_in_stock = VALUES(quantity_in_stock);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO recipes (recipe_id, recipe_name, serving_size) VALUES (1, 'Chocolate Cake', 8) ON DUPLICATE KEY UPDATE recipe_name = VALUES(recipe_name), serving_size = VALUES(serving_size);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO recipes (recipe_id, recipe_name, serving_size) VALUES (2, 'Pasta Carbonara', 4) ON DUPLICATE KEY UPDATE recipe_name = VALUES(recipe_name), serving_size = VALUES(serving_size);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO ingredient_usage (usage_id, recipe_id, ingredient_id, quantity_used) VALUES (1, 1, 1, 2.00) ON DUPLICATE KEY UPDATE recipe_id = VALUES(recipe_id), ingredient_id = VALUES(ingredient_id), quantity_used = VALUES(quantity_used);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO ingredient_usage (usage_id, recipe_id, ingredient_id, quantity_used) VALUES (2, 2, 2, 1.50) ON DUPLICATE KEY UPDATE recipe_id = VALUES(recipe_id), ingredient_id = VALUES(ingredient_id), quantity_used = VALUES(quantity_used);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO alerts (alert_id, ingredient_id, message) VALUES (1, 1, 'Low stock of Flour') ON DUPLICATE KEY UPDATE ingredient_id = VALUES(ingredient_id), message = VALUES(message);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO alerts (alert_id, ingredient_id, message) VALUES (2, 2, 'Low stock of Sugar') ON DUPLICATE KEY UPDATE ingredient_id = VALUES(ingredient_id), message = VALUES(message);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity_in_stock) VALUES (3, 'Butter', 30.00) ON DUPLICATE KEY UPDATE ingredient_name = VALUES(ingredient_name), quantity_in_stock = VALUES(quantity_in_stock);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity_in_stock) VALUES (1, 'Flour', 150.00) ON DUPLICATE KEY UPDATE ingredient_name = VALUES(ingredient_name), quantity_in_stock = VALUES(quantity_in_stock);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO recipes (recipe_id, recipe_name, serving_size) VALUES (1, 'Chocolate Cake', 10) ON DUPLICATE KEY UPDATE recipe_name = VALUES(recipe_name), serving_size = VALUES(serving_size);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO recipes (recipe_id, recipe_name, serving_size) VALUES (2, 'Pasta Carbonara', 5) ON DUPLICATE KEY UPDATE recipe_name = VALUES(recipe_name), serving_size = VALUES(serving_size);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO ingredient_usage (usage_id, recipe_id, ingredient_id, quantity_used) VALUES (1, 1, 1, 2.50) ON DUPLICATE KEY UPDATE recipe_id = VALUES(recipe_id), ingredient_id = VALUES(ingredient_id), quantity_used = VALUES(quantity_used);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO ingredient_usage (usage_id, recipe_id, ingredient_id, quantity_used) VALUES (2, 2, 2, 2.00) ON DUPLICATE KEY UPDATE recipe_id = VALUES(recipe_id), ingredient_id = VALUES(ingredient_id), quantity_used = VALUES(quantity_used);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO alerts (alert_id, ingredient_id, message) VALUES (1, 1, 'Running low on Flour') ON DUPLICATE KEY UPDATE ingredient_id = VALUES(ingredient_id), message = VALUES(message);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO alerts (alert_id, ingredient_id, message) VALUES (2, 2, 'Running low on Sugar') ON DUPLICATE KEY UPDATE ingredient_id = VALUES(ingredient_id), message = VALUES(message);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity_in_stock) VALUES (4, 'Eggs', 20.00) ON DUPLICATE KEY UPDATE ingredient_name = VALUES(ingredient_name), quantity_in_stock = VALUES(quantity_in_stock);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity_in_stock) VALUES (5, 'Milk', 40.00) ON DUPLICATE KEY UPDATE ingredient_name = VALUES(ingredient_name), quantity_in_stock = VALUES(quantity_in_stock);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO recipes (recipe_id, recipe_name, serving_size) VALUES (3, 'Lasagna', 6) ON DUPLICATE KEY UPDATE recipe_name = VALUES(recipe_name), serving_size = VALUES(serving_size);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO recipes (recipe_id, recipe_name, serving_size) VALUES (4, 'Chicken Alfredo', 4) ON DUPLICATE KEY UPDATE recipe_name = VALUES(recipe_name), serving_size = VALUES(serving_size);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO ingredient_usage (usage_id, recipe_id, ingredient_id, quantity_used) VALUES (3, 3, 1, 3.00) ON DUPLICATE KEY UPDATE recipe_id = VALUES(recipe_id), ingredient_id = VALUES(ingredient_id), quantity_used = VALUES(quantity_used);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO ingredient_usage (usage_id, recipe_id, ingredient_id, quantity_used) VALUES (4, 4, 3, 2.50) ON DUPLICATE KEY UPDATE recipe_id = VALUES(recipe_id), ingredient_id = VALUES(ingredient_id), quantity_used = VALUES(quantity_used);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO alerts (alert_id, ingredient_id, message) VALUES (3, 1, 'Almost out of Flour') ON DUPLICATE KEY UPDATE ingredient_id = VALUES(ingredient_id), message = VALUES(message);",
  "### TABLEDATA\n\nCREATE TABLE ingredients ( ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity_in_stock DECIMAL(10,2) )\n\nCREATE TABLE recipes ( recipe_id INT PRIMARY KEY, recipe_name VARCHAR(255), serving_size INT )\n\nCREATE TABLE ingredient_usage ( usage_id INT PRIMARY KEY, recipe_id INT, ingredient_id INT, quantity_used DECIMAL(10,2), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\nCREATE TABLE alerts ( alert_id INT PRIMARY KEY, ingredient_id INT, message VARCHAR(255), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id) )\n\n### STATEMENT\n\nINSERT INTO alerts (alert_id, ingredient_id, message) VALUES (4, 3, 'Need more Butter') ON DUPLICATE KEY UPDATE ingredient_id = VALUES(ingredient_id), message = VALUES(message);",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity) VALUES (1, 'Flour', 100) ON DUPLICATE KEY UPDATE ingredient_name = VALUES(ingredient_name), quantity = VALUES(quantity);",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity) VALUES (2, 'Sugar', 200) ON DUPLICATE KEY UPDATE ingredient_name = VALUES(ingredient_name), quantity = VALUES(quantity);",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (recipe_id, recipe_name, description) VALUES (1, 'Cake', 'Chocolate cake recipe') ON DUPLICATE KEY UPDATE recipe_name = VALUES(recipe_name), description = VALUES(description);",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (recipe_id, recipe_name, description) VALUES (2, 'Cookies', 'Chocolate chip cookies recipe') ON DUPLICATE KEY UPDATE recipe_name = VALUES(recipe_name), description = VALUES(description);",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_required) VALUES (1, 1, 2) ON DUPLICATE KEY UPDATE quantity_required = VALUES(quantity_required);",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_required) VALUES (2, 2, 3) ON DUPLICATE KEY UPDATE quantity_required = VALUES(quantity_required);",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_information) VALUES (1, 'Bakery Supply', 'bakery@supply.com') ON DUPLICATE KEY UPDATE supplier_name = VALUES(supplier_name), contact_information = VALUES(contact_information);",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_information) VALUES (2, 'Grocery Mart', 'grocery@mart.com') ON DUPLICATE KEY UPDATE supplier_name = VALUES(supplier_name), contact_information = VALUES(contact_information);",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredient_suppliers (ingredient_id, supplier_id, price) VALUES (1, 1, 5.00) ON DUPLICATE KEY UPDATE price = VALUES(price);",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredient_suppliers (ingredient_id, supplier_id, price) VALUES (2, 2, 3.50) ON DUPLICATE KEY UPDATE price = VALUES(price);",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity) VALUES (1, 'Flour', 100) ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Flour', quantity = 150;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (recipe_id, recipe_name, description) VALUES (1, 'Pancakes', 'Delicious breakfast dish') ON CONFLICT (recipe_id) DO UPDATE SET recipe_name = 'Pancakes', description = 'Delicious breakfast dish';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_required) VALUES (1, 1, 200) ON CONFLICT (recipe_id, ingredient_id) DO UPDATE SET quantity_required = 300;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_information) VALUES (1, 'Supplier A', 'contact@supplierA.com') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier A', contact_information = 'contact@supplierA.com';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredient_suppliers (ingredient_id, supplier_id, price) VALUES (1, 1, 5.00) ON CONFLICT (ingredient_id, supplier_id) DO UPDATE SET price = 6.00;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity) VALUES (2, 'Sugar', 50) ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Sugar', quantity = 75;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (recipe_id, recipe_name, description) VALUES (2, 'Chocolate Cake', 'Decadent dessert') ON CONFLICT (recipe_id) DO UPDATE SET recipe_name = 'Chocolate Cake', description = 'Decadent dessert';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_required) VALUES (2, 2, 100) ON CONFLICT (recipe_id, ingredient_id) DO UPDATE SET quantity_required = 150;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_information) VALUES (2, 'Supplier B', 'contact@supplierB.com') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier B', contact_information = 'contact@supplierB.com';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredient_suppliers (ingredient_id, supplier_id, price) VALUES (2, 2, 8.00) ON CONFLICT (ingredient_id, supplier_id) DO UPDATE SET price = 10.00;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, quantity) VALUES (3, 'Eggs', 20) ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Eggs', quantity = 30;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO recipes (recipe_id, recipe_name, description) VALUES (3, 'Omelette', 'Classic breakfast option') ON CONFLICT (recipe_id) DO UPDATE SET recipe_name = 'Omelette', description = 'Classic breakfast option';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO recipe_ingredients (recipe_id, ingredient_id, quantity_required) VALUES (3, 3, 5) ON CONFLICT (recipe_id, ingredient_id) DO UPDATE SET quantity_required = 8;",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_information) VALUES (3, 'Supplier C', 'contact@supplierC.com') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier C', contact_information = 'contact@supplierC.com';",
  "### TABLEDATA\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(50) NOT NULL,\n  quantity INT NOT NULL\n);\n\nCREATE TABLE recipes (\n  recipe_id INT PRIMARY KEY,\n  recipe_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE recipe_ingredients (\n  recipe_id INT,\n  ingredient_id INT,\n  quantity_required INT,\n  FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_information VARCHAR(100)\n);\n\nCREATE TABLE ingredient_suppliers (\n  ingredient_id INT,\n  supplier_id INT,\n  price DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id),\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredient_suppliers (ingredient_id, supplier_id, price) VALUES (3, 3, 3.50) ON CONFLICT (ingredient_id, supplier_id) DO UPDATE SET price = 4.00;"
]