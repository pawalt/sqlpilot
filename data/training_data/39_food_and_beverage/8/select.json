[
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_pricing;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_pricing;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, price FROM menu_pricing WHERE price > 5.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_pricing WHERE item_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name FROM menu_pricing WHERE price < 10.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_pricing WHERE item_name LIKE 'Pizza%';",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(price) FROM menu_pricing;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(price) FROM menu_pricing;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(price) FROM menu_pricing;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM menu_pricing;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_pricing ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_pricing ORDER BY price ASC;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_pricing LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_pricing LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_pricing WHERE price BETWEEN 5.00 AND 10.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_pricing WHERE item_name IN ('Burger', 'Salad');",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_pricing WHERE item_id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_pricing WHERE item_name = 'Chicken Sandwich' OR price > 7.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_pricing WHERE item_name <> 'Pizza';",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(price) AS avg_price FROM menu_pricing;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_pricing WHERE price > 20.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name FROM menu_pricing WHERE price BETWEEN 10.00 AND 50.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM menu_pricing WHERE price < 15.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_pricing WHERE item_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, AVG(price) AS avg_price FROM menu_pricing GROUP BY item_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(price) AS highest_price FROM menu_pricing;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_pricing WHERE item_name LIKE '%burger%';",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_pricing ORDER BY item_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, price FROM menu_pricing WHERE price >= 30.00 ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, price FROM menu_pricing WHERE price < (SELECT AVG(price) FROM menu_pricing);",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT item_name) AS num_items FROM menu_pricing;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, price FROM menu_pricing WHERE price = (SELECT MAX(price) FROM menu_pricing);",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_pricing WHERE item_name IN ('Pizza', 'Pasta', 'Salad');",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_pricing WHERE item_name = 'Cheeseburger' OR item_name = 'French Fries';",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_pricing WHERE item_name NOT LIKE '%salad%';",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_items, SUM(price) AS total_price FROM menu_pricing;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_pricing WHERE price = (SELECT MIN(price) FROM menu_pricing);",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_pricing WHERE item_name = 'Coke' AND price < 2.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_pricing WHERE item_name = 'Ice Cream' AND price > 5.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_pricing (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, price FROM menu_pricing WHERE price = (SELECT MIN(price) FROM menu_pricing WHERE item_name LIKE '%drink%');",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT * FROM menu_items;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM menu_items;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_id, item_name FROM menu_items WHERE item_price > 10.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_description FROM menu_items WHERE item_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT * FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT order_id, quantity, total_price FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT order_id, item_name, quantity, total_price FROM orders JOIN menu_items ON orders.item_id = menu_items.item_id;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT * FROM menu_items WHERE item_price BETWEEN 5.00 AND 20.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_description FROM menu_items WHERE item_id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM menu_items ORDER BY item_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM menu_items ORDER BY item_price ASC;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM menu_items WHERE item_description LIKE '%vegetarian%';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_items FROM menu_items;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT AVG(item_price) AS avg_price FROM menu_items;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, COUNT(*) AS num_orders FROM orders JOIN menu_items ON orders.item_id = menu_items.item_id GROUP BY item_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, SUM(total_price) AS total_sales FROM orders JOIN menu_items ON orders.item_id = menu_items.item_id GROUP BY item_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_description FROM menu_items WHERE item_name LIKE 'B%';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM menu_items WHERE item_name = 'Pizza';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM menu_items WHERE item_price > (SELECT AVG(item_price) FROM menu_items);",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, total_price FROM menu_items CROSS JOIN orders WHERE menu_items.item_id = orders.item_id;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT * FROM menu_items WHERE item_price > 50",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM menu_items WHERE LENGTH(item_description) > 100",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT * FROM orders WHERE quantity >= 5 AND total_price < 100",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price, quantity FROM menu_items INNER JOIN orders ON menu_items.item_id = orders.item_id",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT * FROM menu_items JOIN orders ON menu_items.item_id = orders.item_id WHERE orders.total_price > 50",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT AVG(item_price) AS average_price FROM menu_items",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT MAX(item_price) AS max_price, MIN(item_price) AS min_price FROM menu_items",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price, total_price FROM menu_items JOIN orders ON menu_items.item_id = orders.item_id WHERE orders.quantity >= 3",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(order_id) AS total_orders FROM orders",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_description FROM menu_items WHERE item_description LIKE '%delicious%'",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT SUM(total_price) AS total_revenue FROM orders",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT * FROM menu_items WHERE item_name LIKE '%pizza%' AND item_price > 10",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_description, item_price FROM menu_items WHERE item_price IN (SELECT MAX(item_price) FROM menu_items)",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT * FROM orders WHERE order_id IN (SELECT order_id FROM orders WHERE quantity > 3)",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, total_price FROM menu_items JOIN orders ON menu_items.item_id = orders.item_id WHERE orders.total_price BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM menu_items WHERE item_price = (SELECT MIN(item_price) FROM menu_items)",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT * FROM orders JOIN menu_items ON orders.item_id = menu_items.item_id",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM menu_items WHERE item_price < (SELECT AVG(item_price) FROM menu_items)",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price, quantity, total_price FROM menu_items JOIN orders ON menu_items.item_id = orders.item_id WHERE item_name LIKE '%burger%'",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_description TEXT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\n### STATEMENT\n\nSELECT * FROM menu_items JOIN orders ON menu_items.item_id = orders.item_id ORDER BY total_price ASC",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_items;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_items WHERE category = 'Desserts';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_items WHERE price < 10.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, item_id, order_date FROM orders WHERE quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, item_id, total_price FROM orders WHERE order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, item_name, order_date FROM customers c JOIN orders o ON c.id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, quantity, total_price FROM menu_items m JOIN orders o ON m.id = o.item_id;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.customer_name, m.item_name, o.quantity FROM customers c JOIN orders o ON c.id = o.customer_id JOIN menu_items m ON o.item_id = m.id;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.customer_name, m.item_name, o.quantity FROM customers c JOIN orders o ON c.id = o.customer_id JOIN menu_items m ON o.item_id = m.id WHERE o.quantity > 3;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.customer_name, m.item_name, o.quantity FROM customers c JOIN orders o ON c.id = o.customer_id JOIN menu_items m ON o.item_id = m.id WHERE m.category = 'Main Course';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.customer_name, m.item_name, o.quantity FROM customers c JOIN orders o ON c.id = o.customer_id JOIN menu_items m ON o.item_id = m.id WHERE o.total_price > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(o.quantity) AS total_quantity FROM customers c JOIN orders o ON c.id = o.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT o.order_id, c.customer_name, m.item_name, o.quantity FROM customers c JOIN orders o ON c.id = o.customer_id JOIN menu_items m ON o.item_id = m.id;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(o.order_id) AS total_orders FROM customers c JOIN orders o ON c.id = o.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT category, MIN(price) AS min_price, MAX(price) AS max_price, AVG(price) AS avg_price FROM menu_items GROUP BY category;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT category, MAX(price) AS max_price FROM menu_items GROUP BY category HAVING MAX(price) > 20.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(o.order_id) AS total_orders FROM customers c LEFT JOIN orders o ON c.id = o.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(o.order_id) AS total_orders FROM customers c RIGHT JOIN orders o ON c.id = o.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM menu_items;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_items WHERE category='Main Course';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE email IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers WHERE phone_number LIKE '555%';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, total_price FROM customers JOIN orders ON customers.id=orders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, item_name, quantity FROM customers JOIN orders ON customers.id=orders.customer_id JOIN menu_items ON orders.item_id=menu_items.id;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT category, SUM(quantity) AS total_quantity FROM menu_items JOIN orders ON menu_items.id=orders.item_id GROUP BY category;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, AVG(price) AS avg_price FROM menu_items GROUP BY item_name HAVING AVG(price) > 10;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(order_id) AS total_orders FROM customers JOIN orders ON customers.id=orders.customer_id GROUP BY customer_name HAVING COUNT(order_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(total_price) AS max_price, MIN(total_price) AS min_price FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(total_price) AS total_spent FROM customers JOIN orders ON customers.id=orders.customer_id GROUP BY customer_name ORDER BY total_spent DESC;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT category, COUNT(item_id) AS total_items FROM menu_items GROUP BY category ORDER BY total_items DESC;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) AS avg_quantity, MIN(quantity) AS min_quantity, MAX(quantity) AS max_quantity FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, item_name, order_date FROM customers JOIN orders ON customers.id=orders.customer_id JOIN menu_items ON orders.item_id=menu_items.id ORDER BY order_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, item_name, total_price FROM customers JOIN orders ON customers.id=orders.customer_id JOIN menu_items ON orders.item_id=menu_items.id ORDER BY total_price ASC;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, COUNT(order_id) AS total_orders FROM orders JOIN menu_items ON orders.item_id=menu_items.id GROUP BY item_name ORDER BY total_orders DESC;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(quantity) AS avg_quantity FROM customers JOIN orders ON customers.id=orders.customer_id GROUP BY customer_name HAVING AVG(quantity) > 2;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    phone_number VARCHAR(15) NOT NULL,\n    email VARCHAR(50)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    item_id INT NOT NULL,\n    order_date TIMESTAMP,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, item_name, order_date FROM customers JOIN orders ON customers.id=orders.customer_id JOIN menu_items ON orders.item_id=menu_items.id WHERE order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM menu_items;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_items;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM restaurants;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT restaurant_name, location FROM restaurants;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT order_id, item_id, quantity FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT item_name, price, category FROM menu_items WHERE price > 10.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT restaurant_name, location FROM restaurants WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_items WHERE category = 'Beverages';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT restaurant_name, location FROM restaurants WHERE location LIKE '%Ave%';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers WHERE phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT item_name, price, category FROM menu_items WHERE category IN ('Appetizers', 'Main Course');",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT restaurant_name, location FROM restaurants WHERE location NOT LIKE '%Lane%';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) AS total_quantity FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT AVG(price) AS avg_price FROM menu_items;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MAX(total_price) AS max_total_price FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MIN(total_price) AS min_total_price FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM menu_items WHERE price > 10.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, category FROM menu_items WHERE category = 'Appetizers';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, price FROM menu_items ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT restaurant_name, location FROM restaurants WHERE location LIKE '%New York%';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_items WHERE category = 'Desserts' ORDER BY price ASC;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT order_id, item_name, quantity, total_price FROM orders JOIN menu_items ON orders.item_id = menu_items.item_id;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, address, phone_number FROM customers WHERE customer_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT restaurant_name, location, phone_number FROM restaurants WHERE phone_number LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT item_name, category, price FROM menu_items WHERE price BETWEEN 5.00 AND 15.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, order_date FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, order_date, total_price FROM customers JOIN orders ON customers.customer_id = orders.customer_id ORDER BY order_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_orders FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT restaurant_name, COUNT(*) AS total_orders FROM restaurants JOIN orders ON restaurants.restaurant_id = orders.restaurant_id GROUP BY restaurant_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT item_name, AVG(price) AS avg_price FROM menu_items GROUP BY item_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(total_price) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT category FROM menu_items;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT restaurant_name, location FROM restaurants WHERE location IN ('New York', 'Los Angeles');",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_items WHERE category = 'Main Course' AND price < 20.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(255),\n    location VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    item_id INT,\n    restaurant_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    order_date DATE,\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(total_price) AS total_spent FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name HAVING SUM(total_price) > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT * FROM menu_items;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_items WHERE price > 10;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT category_name FROM categories;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT restaurant_name FROM restaurant;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT item_name, price, category_name FROM menu_items JOIN menu ON menu.item_id = menu_items.item_id JOIN categories ON menu.category_id = categories.category_id;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT item_name, price, restaurant_name FROM menu_items JOIN menu ON menu.item_id = menu_items.item_id JOIN restaurant ON menu.restaurant_id = restaurant.restaurant_id;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT item_name, price, restaurant_name FROM menu_items JOIN menu ON menu.item_id = menu_items.item_id JOIN restaurant ON menu.restaurant_id = restaurant.restaurant_id WHERE price < 15;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_items WHERE item_name LIKE 'P%';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_items WHERE item_name LIKE '%a';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT * FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT order_id, menu_id, quantity, total_price FROM orders WHERE total_price > 50;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT menu_id, quantity, total_price FROM orders WHERE quantity > 2;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT menu_id, quantity FROM orders WHERE total_price < 20;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_items WHERE item_id IN (SELECT item_id FROM menu WHERE restaurant_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_items WHERE item_id NOT IN (SELECT item_id FROM menu WHERE restaurant_id = 2);",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM menu_items WHERE price BETWEEN 10 AND 20;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT category_name, COUNT(category_id) as total_items FROM categories JOIN menu ON categories.category_id = menu.category_id GROUP BY category_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT restaurant_name, COUNT(menu_id) as total_menu_items FROM restaurant JOIN menu ON restaurant.restaurant_id = menu.restaurant_id GROUP BY restaurant_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT restaurant_name, SUM(total_price) as total_sales FROM restaurant JOIN menu ON restaurant.restaurant_id = menu.restaurant_id JOIN orders ON menu.menu_id = orders.menu_id GROUP BY restaurant_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT item_name, price, restaurant_name FROM menu_items JOIN menu ON menu.item_id = menu_items.item_id JOIN restaurant ON menu.restaurant_id = restaurant.restaurant_id ORDER BY price DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT * FROM menu_items JOIN menu ON menu_items.item_id = menu.item_id WHERE menu_items.price > 50",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT menu_items.item_name, menu_items.price, categories.category_name FROM menu_items JOIN menu ON menu.item_id = menu_items.item_id JOIN categories ON menu.category_id = categories.category_id",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT restaurant.restaurant_name, menu_items.item_name, menu_items.price FROM restaurant JOIN menu ON restaurant.restaurant_id = menu.restaurant_id JOIN menu_items ON menu.item_id = menu_items.item_id WHERE menu_items.price < 30",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT orders.order_id, menu_items.item_name, categories.category_name, orders.quantity FROM orders JOIN menu ON orders.menu_id = menu.menu_id JOIN menu_items ON menu.item_id = menu_items.item_id JOIN categories ON menu.category_id = categories.category_id",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT restaurant.restaurant_name, menu_items.item_name, orders.quantity, orders.total_price FROM restaurant JOIN menu ON restaurant.restaurant_id = menu.restaurant_id JOIN orders ON menu.menu_id = orders.menu_id WHERE orders.quantity > 3",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT menu_items.item_name FROM menu_items JOIN menu ON menu_items.item_id = menu.item_id",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT menu.menu_id, menu_items.item_name, orders.quantity, orders.total_price FROM menu JOIN orders ON menu.menu_id = orders.menu_id JOIN menu_items ON menu.item_id = menu_items.item_id",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT menu_items.item_name, SUM(orders.quantity) AS total_quantity FROM menu_items JOIN menu ON menu_items.item_id = menu.item_id JOIN orders ON menu.menu_id = orders.menu_id GROUP BY menu_items.item_name ORDER BY total_quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT categories.category_name, AVG(menu_items.price) AS average_price FROM categories JOIN menu ON categories.category_id = menu.category_id JOIN menu_items ON menu.item_id = menu_items.item_id GROUP BY categories.category_name",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE restaurant (\n  restaurant_id INT PRIMARY KEY,\n  restaurant_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE menu (\n  menu_id INT PRIMARY KEY,\n  item_id INT,\n  category_id INT,\n  restaurant_id INT,\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (category_id) REFERENCES categories(category_id),\n  FOREIGN KEY (restaurant_id) REFERENCES restaurant(restaurant_id)\n);\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  menu_id INT,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (menu_id) REFERENCES menu(menu_id)\n);\n\n### STATEMENT\n\nSELECT restaurant.restaurant_name, COUNT(DISTINCT menu.item_id) AS total_items FROM restaurant JOIN menu ON restaurant.restaurant_id = menu.restaurant_id GROUP BY restaurant.restaurant_name HAVING total_items > 5"
]