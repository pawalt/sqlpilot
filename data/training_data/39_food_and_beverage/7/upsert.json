[
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Alice', 'Great service!', 5) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Bob', 'Could be better', 3) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Charlie', 'Awesome experience!', 4) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('David', 'Not satisfied', 2) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Eve', 'Excellent support', 5) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Frank', 'Fast delivery', 4) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Grace', 'Helpful staff', 4) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Henry', 'Impressive service', 5) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Ivy', 'Slow response time', 2) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Jack', 'Poor quality product', 1) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Kate', 'Responsive customer service', 5) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Larry', 'Great value for money', 4) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Mia', 'Good experience overall', 3) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Nancy', 'Needs improvement', 2) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Oscar', 'Prompt service', 4) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Penny', 'Quality products', 4) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Quinn', 'Excellent response time', 5) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Ryan', 'Satisfied with the service', 4) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Sara', 'Friendly staff', 5) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Tom', 'Quick response time', 4) ON CONFLICT (feedback_id) DO UPDATE SET customer_name = excluded.customer_name, feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('John Doe', 'Great service!', 5) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Amazing service!', rating = 5",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Jane Smith', 'Good product quality', 4) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Excellent product quality', rating = 5",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Alice Johnson', 'Service needs improvement', 2) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Service improved, thank you', rating = 3",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Bob Brown', 'Fast delivery', 5) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Super fast delivery', rating = 5",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Mary Lee', 'Responsive customer support', 4) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Extremely responsive customer support', rating = 5",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Sam Wilson', 'Average experience', 3) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Improved experience, thank you', rating = 4",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Emily Davis', 'Great packaging', 5) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Superb packaging', rating = 5",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Chris Harris', 'Slow response time', 2) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Improved response time, thank you', rating = 3",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Sara Martinez', 'Highly recommended', 5) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Absolutely recommended', rating = 5",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Alex Thompson', 'Excellent service', 5) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'World-class service', rating = 5",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Jessica Young', 'Good value for money', 4) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Great value for money', rating = 5",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Kevin White', 'Poor quality', 1) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Improved quality, thank you', rating = 2",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Linda Hall', 'Fast shipping', 5) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Lightning-fast shipping', rating = 5",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Mark Murphy', 'Need more options', 3) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Expanding options soon', rating = 4",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Rachel Adams', 'Helpful staff', 4) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Extremely helpful staff', rating = 5",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Tom Clark', 'Great experience overall', 5) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Exceptional experience', rating = 5",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Jennifer King', 'Slow shipping', 2) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Improved shipping speed, thank you', rating = 3",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Michael Wright', 'Fantastic service', 5) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Outstanding service', rating = 5",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Hannah Carter', 'Average product', 3) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Product quality improved, thank you', rating = 4",
  "### TABLEDATA\n\nCREATE TABLE Feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  feedback_text TEXT NOT NULL,\n  rating INT NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Feedback (customer_name, feedback_text, rating) VALUES ('Peter Brown', 'Unsatisfactory experience', 1) ON CONFLICT (customer_name) DO UPDATE SET feedback_text = 'Experience enhanced, thank you', rating = 2",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Alice', 4, 'Good service') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Bob', 3, 'Average experience') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Charlie', 5, 'Excellent service') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('David', 2, 'Poor customer support') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Eve', 4, 'Fast delivery') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Frank', 5, 'Friendly staff') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Grace', 1, 'Late delivery') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Harry', 3, 'Unsatisfactory service') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Ivy', 5, 'Best experience ever') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Jack', 2, 'Incomplete order') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Kelly', 4, 'Responsive support team') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Leo', 3, 'Average quality products') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Maria', 4, 'Timely updates') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Nate', 5, 'Impressive service') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Olivia', 2, 'Below expectations') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Peter', 3, 'Average delivery time') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Quinn', 4, 'Helpful staff') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Rachel', 1, 'Unreliable service') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Sam', 4, 'Good communication') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Tom', 5, 'Exceptional experience') ON CONFLICT(feedback_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, rating = EXCLUDED.rating, comment = EXCLUDED.comment;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('John Doe', 4, 'Great service') ON CONFLICT (feedback_id) DO UPDATE SET customer_name = 'John Doe', rating = 4, comment = 'Great service';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Alice Smith', 5, 'Excellent experience') ON CONFLICT (feedback_id) DO UPDATE SET customer_name = 'Alice Smith', rating = 5, comment = 'Excellent experience';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Bob Johnson', 3, 'Average service') ON CONFLICT (feedback_id) DO UPDATE SET customer_name = 'Bob Johnson', rating = 3, comment = 'Average service';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Emma Davis', 4, 'Good support') ON CONFLICT (feedback_id) DO UPDATE SET customer_name = 'Emma Davis', rating = 4, comment = 'Good support';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Sarah Wilson', 2, 'Poor communication') ON CONFLICT (feedback_id) DO UPDATE SET customer_name = 'Sarah Wilson', rating = 2, comment = 'Poor communication';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Michael Brown', 5, 'Outstanding service') ON CONFLICT (feedback_id) DO UPDATE SET customer_name = 'Michael Brown', rating = 5, comment = 'Outstanding service';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Laura Miller', 3, 'Inadequate response') ON CONFLICT (feedback_id) DO UPDATE SET customer_name = 'Laura Miller', rating = 3, comment = 'Inadequate response';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Kevin Lee', 4, 'Prompt assistance') ON CONFLICT (feedback_id) DO UPDATE SET customer_name = 'Kevin Lee', rating = 4, comment = 'Prompt assistance';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Sophia White', 2, 'Unsatisfactory service') ON CONFLICT (feedback_id) DO UPDATE SET customer_name = 'Sophia White', rating = 2, comment = 'Unsatisfactory service';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_name, rating, comment) VALUES ('Daniel Allen', 5, 'Exceptional support') ON CONFLICT (feedback_id) DO UPDATE SET customer_name = 'Daniel Allen', rating = 5, comment = 'Exceptional support';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (feedback_id, review_text, review_date) VALUES (1, 'Amazing service!', '2022-10-15') ON CONFLICT (review_id) DO UPDATE SET feedback_id = 1, review_text = 'Amazing service!', review_date = '2022-10-15';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (feedback_id, review_text, review_date) VALUES (2, 'Very happy with the experience', '2022-10-16') ON CONFLICT (review_id) DO UPDATE SET feedback_id = 2, review_text = 'Very happy with the experience', review_date = '2022-10-16';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (feedback_id, review_text, review_date) VALUES (3, 'Could be better', '2022-10-17') ON CONFLICT (review_id) DO UPDATE SET feedback_id = 3, review_text = 'Could be better', review_date = '2022-10-17';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (feedback_id, review_text, review_date) VALUES (4, 'Fast response time', '2022-10-18') ON CONFLICT (review_id) DO UPDATE SET feedback_id = 4, review_text = 'Fast response time', review_date = '2022-10-18';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (feedback_id, review_text, review_date) VALUES (5, 'Not satisfied with the service', '2022-10-19') ON CONFLICT (review_id) DO UPDATE SET feedback_id = 5, review_text = 'Not satisfied with the service', review_date = '2022-10-19';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (feedback_id, review_text, review_date) VALUES (6, 'Great communication!', '2022-10-20') ON CONFLICT (review_id) DO UPDATE SET feedback_id = 6, review_text = 'Great communication!', review_date = '2022-10-20';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (feedback_id, review_text, review_date) VALUES (7, 'Could improve response time', '2022-10-21') ON CONFLICT (review_id) DO UPDATE SET feedback_id = 7, review_text = 'Could improve response time', review_date = '2022-10-21';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (feedback_id, review_text, review_date) VALUES (8, 'Quick and efficient', '2022-10-22') ON CONFLICT (review_id) DO UPDATE SET feedback_id = 8, review_text = 'Quick and efficient', review_date = '2022-10-22';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (feedback_id, review_text, review_date) VALUES (9, 'Not happy with the service', '2022-10-23') ON CONFLICT (review_id) DO UPDATE SET feedback_id = 9, review_text = 'Not happy with the service', review_date = '2022-10-23';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  rating INTEGER,\n  comment TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id SERIAL PRIMARY KEY,\n  feedback_id INTEGER REFERENCES feedback(feedback_id),\n  review_text TEXT,\n  review_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (feedback_id, review_text, review_date) VALUES (10, 'Outstanding performance', '2022-10-24') ON CONFLICT (review_id) DO UPDATE SET feedback_id = 10, review_text = 'Outstanding performance', review_date = '2022-10-24';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email, phone_number) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email, phone_number) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '987-654-3210') ON DUPLICATE KEY UPDATE customer_name = 'Jane Smith', email = 'jane.smith@example.com', phone_number = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Alice Johnson', email = 'alice.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (4, 'Bob Brown', 'bob.brown@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Bob Brown', email = 'bob.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (5, 'Emily Davis', 'emily.davis@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Emily Davis', email = 'emily.davis@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email, phone_number) VALUES (6, 'Michael Wilson', 'michael.wilson@example.com', '555-555-5555') ON DUPLICATE KEY UPDATE customer_name = 'Michael Wilson', email = 'michael.wilson@example.com', phone_number = '555-555-5555';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (7, 'Sarah Lee', 'sarah.lee@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Sarah Lee', email = 'sarah.lee@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email, phone_number) VALUES (8, 'Kevin Garcia', 'kevin.garcia@example.com', '999-999-9999') ON DUPLICATE KEY UPDATE customer_name = 'Kevin Garcia', email = 'kevin.garcia@example.com', phone_number = '999-999-9999';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (9, 'Linda Rodriguez', 'linda.rodriguez@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Linda Rodriguez', email = 'linda.rodriguez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (10, 'David Martinez', 'david.martinez@example.com') ON DUPLICATE KEY UPDATE customer_name = 'David Martinez', email = 'david.martinez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email, phone_number) VALUES (11, 'Karen Clark', 'karen.clark@example.com', '777-777-7777') ON DUPLICATE KEY UPDATE customer_name = 'Karen Clark', email = 'karen.clark@example.com', phone_number = '777-777-7777';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (12, 'Jeffrey Hill', 'jeffrey.hill@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Jeffrey Hill', email = 'jeffrey.hill@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email, phone_number) VALUES (13, 'Emma Baker', 'emma.baker@example.com', '123-123-1234') ON DUPLICATE KEY UPDATE customer_name = 'Emma Baker', email = 'emma.baker@example.com', phone_number = '123-123-1234';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (14, 'James White', 'james.white@example.com') ON DUPLICATE KEY UPDATE customer_name = 'James White', email = 'james.white@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (15, 'Catherine Scott', 'catherine.scott@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Catherine Scott', email = 'catherine.scott@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email, phone_number) VALUES (16, 'Richard Young', 'richard.young@example.com', '876-543-2100') ON DUPLICATE KEY UPDATE customer_name = 'Richard Young', email = 'richard.young@example.com', phone_number = '876-543-2100';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (17, 'Julia King', 'julia.king@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Julia King', email = 'julia.king@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email, phone_number) VALUES (18, 'Peter Adams', 'peter.adams@example.com', '987-123-4567') ON DUPLICATE KEY UPDATE customer_name = 'Peter Adams', email = 'peter.adams@example.com', phone_number = '987-123-4567';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (19, 'Victoria Hall', 'victoria.hall@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Victoria Hall', email = 'victoria.hall@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (20, 'Thomas Turner', 'thomas.turner@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Thomas Turner', email = 'thomas.turner@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email, phone_number) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name = 'John Doe updated';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Reviews(review_id, customer_id, review_date, rating, review_text) VALUES (1, 1, '2021-10-15', 5, 'Great product!') ON DUPLICATE KEY UPDATE rating = rating + 1;",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Items(item_id, item_name, item_price) VALUES (1, 'Item 1', 25.99) ON DUPLICATE KEY UPDATE item_price = item_price + 5.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email, phone_number) VALUES (2, 'Alice Smith', 'alice.smith@example.com', '987-654-3210') ON DUPLICATE KEY UPDATE customer_name = 'Alice Smith updated';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Reviews(review_id, customer_id, review_date, rating, review_text) VALUES (2, 2, '2021-10-20', 4, 'Good service!') ON DUPLICATE KEY UPDATE rating = rating - 1;",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Items(item_id, item_name, item_price) VALUES (2, 'Item 2', 35.50) ON DUPLICATE KEY UPDATE item_price = item_price - 10.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email, phone_number) VALUES (3, 'Bob Johnson', 'bob.johnson@example.com', '555-123-4567') ON DUPLICATE KEY UPDATE customer_name = 'Bob Johnson updated';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Reviews(review_id, customer_id, review_date, rating, review_text) VALUES (3, 3, '2021-10-25', 3, 'Average experience.') ON DUPLICATE KEY UPDATE rating = rating;",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Items(item_id, item_name, item_price) VALUES (3, 'Item 3', 50.00) ON DUPLICATE KEY UPDATE item_price = item_price * 1.1;",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email, phone_number) VALUES (4, 'Eva Brown', 'eva.brown@example.com', '777-888-9999') ON DUPLICATE KEY UPDATE customer_name = 'Eva Brown updated';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Reviews(review_id, customer_id, review_date, rating, review_text) VALUES (4, 4, '2021-10-30', 2, 'Disappointed with the product.') ON DUPLICATE KEY UPDATE rating = rating - 2;",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews(\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Items(\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  item_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Items(item_id, item_name, item_price) VALUES (4, 'Item 4', 75.25) ON DUPLICATE KEY UPDATE item_price = item_price / 2;",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerReviews (review_id, customer_name, review_text, rating) VALUES (1, 'John Doe', 'Great service!', 5) ON DUPLICATE KEY UPDATE customer_name = 'John Doe', review_text = 'Great service!', rating = 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerReviews (review_id, customer_name, review_text, rating) VALUES (2, 'Alice Smith', 'Excellent experience!', 4) ON DUPLICATE KEY UPDATE customer_name = 'Alice Smith', review_text = 'Excellent experience!', rating = 4;",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO CoffeeProducts (product_id, product_name, price, origin) VALUES (1, 'Espresso', 2.99, 'Italy') ON DUPLICATE KEY UPDATE product_name = 'Espresso', price = 2.99, origin = 'Italy';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO CoffeeProducts (product_id, product_name, price, origin) VALUES (2, 'Latte', 3.49, 'USA') ON DUPLICATE KEY UPDATE product_name = 'Latte', price = 3.49, origin = 'USA';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, customer_id, product_id, order_date) VALUES (1, 1, 1, '2022-01-15') ON DUPLICATE KEY UPDATE customer_id = 1, product_id = 1, order_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, customer_id, product_id, order_date) VALUES (2, 2, 2, '2022-01-16') ON DUPLICATE KEY UPDATE customer_id = 2, product_id = 2, order_date = '2022-01-16';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, email, phone_number) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, email, phone_number) VALUES (2, 'Alice Smith', 'alice.smith@example.com', '987-654-3210') ON DUPLICATE KEY UPDATE customer_name = 'Alice Smith', email = 'alice.smith@example.com', phone_number = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerReviews (review_id, customer_name, review_text, rating) VALUES (1, 'Alice', 'Great coffee, will buy again!', 5) ON CONFLICT (review_id) DO UPDATE SET customer_name = 'Alice', review_text = 'Updated review text', rating = 4;",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO CoffeeProducts (product_id, product_name, price, origin) VALUES (1, 'Ethiopian Blend', 9.99, 'Ethiopia') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Ethiopian Blend', price = 10.99, origin = 'Ethiopia';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, customer_id, product_id, order_date) VALUES (1, 1, 1, '2022-12-01') ON CONFLICT (order_id) DO UPDATE SET customer_id = 1, product_id = 1, order_date = '2022-12-01';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, email, phone_number) VALUES (1, 'Bob', 'bob@example.com', '123-456-7890') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob', email = 'bob@example.com', phone_number = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerReviews (review_id, customer_name, review_text, rating) VALUES (2, 'Charlie', 'Average coffee, not impressed', 2) ON CONFLICT (review_id) DO UPDATE SET customer_name = 'Charlie', review_text = 'Better than expected', rating = 3;",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO CoffeeProducts (product_id, product_name, price, origin) VALUES (2, 'Colombian Roast', 12.99, 'Colombia') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Colombian Roast', price = 13.99, origin = 'Colombia';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, customer_id, product_id, order_date) VALUES (2, 2, 2, '2022-12-02') ON CONFLICT (order_id) DO UPDATE SET customer_id = 2, product_id = 2, order_date = '2022-12-02';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, email, phone_number) VALUES (2, 'David', 'david@example.com', '111-222-3333') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'David', email = 'david@example.com', phone_number = '333-222-1111';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerReviews (review_id, customer_name, review_text, rating) VALUES (3, 'Emma', 'Spectacular coffee, my new favorite', 5) ON CONFLICT (review_id) DO UPDATE SET customer_name = 'Emma', review_text = 'Absolutely fantastic', rating = 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO CoffeeProducts (product_id, product_name, price, origin) VALUES (3, 'Brazilian Blend', 8.99, 'Brazil') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Brazilian Blend', price = 9.99, origin = 'Brazil';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, customer_id, product_id, order_date) VALUES (3, 3, 3, '2022-12-03') ON CONFLICT (order_id) DO UPDATE SET customer_id = 3, product_id = 3, order_date = '2022-12-03';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, email, phone_number) VALUES (3, 'Fiona', 'fiona@example.com', '555-666-7777') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Fiona', email = 'fiona@example.com', phone_number = '777-666-5555';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerReviews (review_id, customer_name, review_text, rating) VALUES (4, 'George', 'Decent coffee, would recommend', 4) ON CONFLICT (review_id) DO UPDATE SET customer_name = 'George', review_text = 'Good value for money', rating = 4;",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO CoffeeProducts (product_id, product_name, price, origin) VALUES (4, 'Kenyan Brew', 11.99, 'Kenya') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Kenyan Brew', price = 12.99, origin = 'Kenya';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, customer_id, product_id, order_date) VALUES (4, 4, 4, '2022-12-04') ON CONFLICT (order_id) DO UPDATE SET customer_id = 4, product_id = 4, order_date = '2022-12-04';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, email, phone_number) VALUES (4, 'Hannah', 'hannah@example.com', '999-888-7777') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Hannah', email = 'hannah@example.com', phone_number = '777-888-9999';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerReviews (review_id, customer_name, review_text, rating) VALUES (5, 'Isaac', 'Terrible coffee, never again', 1) ON CONFLICT (review_id) DO UPDATE SET customer_name = 'Isaac', review_text = 'Not recommended at all', rating = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO CoffeeProducts (product_id, product_name, price, origin) VALUES (5, 'Peruvian Blend', 10.99, 'Peru') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Peruvian Blend', price = 11.99, origin = 'Peru';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, customer_id, product_id, order_date) VALUES (5, 5, 5, '2022-12-05') ON CONFLICT (order_id) DO UPDATE SET customer_id = 5, product_id = 5, order_date = '2022-12-05';",
  "### TABLEDATA\n\nCREATE TABLE CustomerReviews (\n    review_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    review_text TEXT,\n    rating INT\n);\n\n\nCREATE TABLE CoffeeProducts (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL,\n    origin VARCHAR(50)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    order_date DATE\n);\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, email, phone_number) VALUES (5, 'Jack', 'jack@example.com', '444-555-6666') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jack', email = 'jack@example.com', phone_number = '666-555-4444';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email) VALUES ('1', 'John', 'Doe', 'john.doe@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES ('101', '1', '2022-10-15', 150.50)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, description, price) VALUES ('201', 'Laptop', 'High performance laptop', 1200.00)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO reviews (review_id, customer_id, product_id, rating, review_text) VALUES ('301', '1', '201', 5, 'Great product, highly recommend')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO feedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES ('401', '1', 'Excellent service!', '2022-10-20')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email) VALUES ('2', 'Alice', 'Smith', 'alice.smith@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES ('102', '2', '2022-10-16', 250.75)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, description, price) VALUES ('202', 'Smartphone', 'Latest smartphone model', 800.00)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO reviews (review_id, customer_id, product_id, rating, review_text) VALUES ('302', '2', '202', 4, 'Good quality product')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO feedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES ('402', '2', 'Fast delivery!', '2022-10-18')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email) VALUES ('3', 'Michael', 'Johnson', 'michael.johnson@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES ('103', '3', '2022-10-17', 180.25)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, description, price) VALUES ('203', 'Headphones', 'Noise-cancelling headphones', 100.00)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO reviews (review_id, customer_id, product_id, rating, review_text) VALUES ('303', '3', '203', 3, 'Average quality headphones')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO feedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES ('403', '3', 'Could improve packaging', '2022-10-19')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES ('1a7d0bf1-754e-4f0f-a958-61cda71c9c73', 'John', 'Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES ('ab36fe13-8dd7-4340-8a85-3fe7cd7ce8db', '1a7d0bf1-754e-4f0f-a958-61cda71c9c73', '2022-01-20', 100.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = '1a7d0bf1-754e-4f0f-a958-61cda71c9c73', order_date = '2022-01-20', total_amount = 100.50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, description, price) VALUES ('e45558a4-d77b-4817-9909-922f9f4c4c45', 'Laptop', 'High-performance laptop', 1200.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Laptop', description = 'High-performance laptop', price = 1200.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, customer_id, product_id, rating, review_text) VALUES ('a7d3eb0d-0f4c-49b5-9313-75f01a2f9f1c', '1a7d0bf1-754e-4f0f-a958-61cda71c9c73', 'e45558a4-d77b-4817-9909-922f9f4c4c45', 5, 'Great product, highly recommended!') ON CONFLICT (review_id) DO UPDATE SET customer_id = '1a7d0bf1-754e-4f0f-a958-61cda71c9c73', product_id = 'e45558a4-d77b-4817-9909-922f9f4c4c45', rating = 5, review_text = 'Great product, highly recommended!';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES ('ed671320-1164-4c12-99ff-478c57f3ae7b', '1a7d0bf1-754e-4f0f-a958-61cda71c9c73', 'Excellent service, thank you!', '2022-01-22') ON CONFLICT (feedback_id) DO UPDATE SET customer_id = '1a7d0bf1-754e-4f0f-a958-61cda71c9c73', feedback_text = 'Excellent service, thank you!', feedback_date = '2022-01-22';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES ('b62e3c30-5213-49e4-bfa8-19c24eefc851', 'Jane', 'Smith', 'jane.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', email = 'jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES ('048c5571-198b-4945-9024-579f30aae09e', 'b62e3c30-5213-49e4-bfa8-19c24eefc851', '2022-01-25', 75.25) ON CONFLICT (order_id) DO UPDATE SET customer_id = 'b62e3c30-5213-49e4-bfa8-19c24eefc851', order_date = '2022-01-25', total_amount = 75.25;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, description, price) VALUES ('82f13e64-6285-4b00-8161-9453079b695b', 'Headphones', 'Wireless headphones with noise cancellation', 150.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Headphones', description = 'Wireless headphones with noise cancellation', price = 150.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, customer_id, product_id, rating, review_text) VALUES ('f0f71c7f-c801-4626-b7cf-d1ffc0401a7d', 'b62e3c30-5213-49e4-bfa8-19c24eefc851', '82f13e64-6285-4b00-8161-9453079b695b', 4, 'Good quality headphones, happy with the purchase.') ON CONFLICT (review_id) DO UPDATE SET customer_id = 'b62e3c30-5213-49e4-bfa8-19c24eefc851', product_id = '82f13e64-6285-4b00-8161-9453079b695b', rating = 4, review_text = 'Good quality headphones, happy with the purchase.';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES ('9f2d9b30-e83b-4d73-83f9-365507c017c0', 'b62e3c30-5213-49e4-bfa8-19c24eefc851', 'Fast delivery and great communication', '2022-01-27') ON CONFLICT (feedback_id) DO UPDATE SET customer_id = 'b62e3c30-5213-49e4-bfa8-19c24eefc851', feedback_text = 'Fast delivery and great communication', feedback_date = '2022-01-27';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES ('ec945cc6-951e-4e2d-aa44-6fad55e77ea1', 'Michael', 'Johnson', 'michael.johnson@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Michael', last_name = 'Johnson', email = 'michael.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES ('7153e9bc-4a76-4b21-8d4b-4c97f9665204', 'ec945cc6-951e-4e2d-aa44-6fad55e77ea1', '2022-01-30', 200.75) ON CONFLICT (order_id) DO UPDATE SET customer_id = 'ec945cc6-951e-4e2d-aa44-6fad55e77ea1', order_date = '2022-01-30', total_amount = 200.75;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, description, price) VALUES ('197111e3-18a2-4b10-afd8-eb7e0aae5e0d', 'Smartwatch', 'Fitness tracker with heart rate monitor', 80.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Smartwatch', description = 'Fitness tracker with heart rate monitor', price = 80.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, customer_id, product_id, rating, review_text) VALUES ('534d77ba-68f5-4f1b-a0d1-bbe9b4448927', 'ec945cc6-951e-4e2d-aa44-6fad55e77ea1', '197111e3-18a2-4b10-afd8-eb7e0aae5e0d', 4, 'Nice smartwatch, good value for money.') ON CONFLICT (review_id) DO UPDATE SET customer_id = 'ec945cc6-951e-4e2d-aa44-6fad55e77ea1', product_id = '197111e3-18a2-4b10-afd8-eb7e0aae5e0d', rating = 4, review_text = 'Nice smartwatch, good value for money.';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES ('12555122-4fc7-4895-8d58-288fcf69b74b', 'ec945cc6-951e-4e2d-aa44-6fad55e77ea1', 'Great product, highly recommended!', '2022-02-02') ON CONFLICT (feedback_id) DO UPDATE SET customer_id = 'ec945cc6-951e-4e2d-aa44-6fad55e77ea1', feedback_text = 'Great product, highly recommended!', feedback_date = '2022-02-02';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email) VALUES ('d169a32d-47fb-405a-bf9e-3c86e354f505', 'Emily', 'Brown', 'emily.brown@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Emily', last_name = 'Brown', email = 'emily.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL\n);\n\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    description TEXT,\n    price DECIMAL\n);\n\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    product_id UUID REFERENCES products(product_id),\n    rating INT,\n    review_text TEXT\n);\n\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES ('e920b859-8b5b-4e9f-a19e-79cf3a4fae5e', 'd169a32d-47fb-405a-bf9e-3c86e354f505', '2022-02-05', 50.50) ON CONFLICT (order_id) DO UPDATE SET cus..."
]