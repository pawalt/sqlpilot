[
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeeSchedule;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, schedule_date, shift_start_time FROM EmployeeSchedule;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeeSchedule WHERE employee_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeeSchedule WHERE schedule_date = '2022-10-10';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeeSchedule WHERE shift_start_time >= '08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeeSchedule WHERE shift_end_time < '17:00:00';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeeSchedule WHERE schedule_date BETWEEN '2022-10-01' AND '2022-10-31';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeeSchedule WHERE meal_break_start_time IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, schedule_date FROM EmployeeSchedule ORDER BY schedule_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT DISTINCT schedule_date FROM EmployeeSchedule;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT COUNT(employee_id) FROM EmployeeSchedule;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(hour, shift_start_time, shift_end_time)) AS shift_duration FROM EmployeeSchedule;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT MAX(DATEDIFF(minute, meal_break_start_time, meal_break_end_time)) AS max_meal_break_duration FROM EmployeeSchedule;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, shift_start_time, shift_end_time, TIMESTAMPDIFF(minute, shift_start_time, shift_end_time) AS shift_duration_minutes FROM EmployeeSchedule;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeeSchedule WHERE shift_start_time > '09:00:00' AND shift_end_time < '18:00:00';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeeSchedule WHERE meal_break_start_time < '12:00:00' AND meal_break_end_time > '13:00:00';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, schedule_date, CONCAT(shift_start_time,' - ', shift_end_time) AS shift_timing FROM EmployeeSchedule;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, schedule_date, TIME_FORMAT(shift_start_time, '%h:%i %p') AS shift_start_time_formatted FROM EmployeeSchedule;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT DATE_FORMAT(schedule_date, '%Y-%m-%d') AS formatted_date FROM EmployeeSchedule;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM EmployeeSchedule WHERE employee_id = 1 AND schedule_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, schedule_date, shift_start_time, shift_end_time FROM EmployeeSchedule WHERE shift_start_time < '08:00:00' AND meal_break_end_time > '12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, schedule_date, shift_start_time, shift_end_time FROM EmployeeSchedule WHERE schedule_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, schedule_date, shift_start_time, shift_end_time FROM EmployeeSchedule WHERE meal_break_start_time IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, schedule_date, shift_start_time, shift_end_time FROM EmployeeSchedule WHERE shift_start_time < meal_break_start_time;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, schedule_date, shift_start_time, shift_end_time FROM EmployeeSchedule WHERE shift_start_time < meal_break_start_time AND meal_break_end_time < shift_end_time;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM EmployeeSchedule WHERE shift_start_time = '09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, schedule_date, shift_start_time, shift_end_time FROM EmployeeSchedule ORDER BY schedule_date ASC, shift_start_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE EmployeeSchedule (\n    employee_id INT PRIMARY KEY,\n    schedule_date DATE,\n    shift_start_time TIME,\n    shift_end_time TIME,\n    meal_break_start_time TIME,\n    meal_break_end_time TIME\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(hour, shift_star... [truncated]",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM Employees;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT name, position FROM Employees WHERE position = 'Manager';",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM Employees WHERE hourly_rate > 20.00;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, name, hourly_rate FROM Employees ORDER BY hourly_rate DESC;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, w.date, w.start_time FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, w.date, w.start_time, w.end_time FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id WHERE w.date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, w.date, w.start_time, w.end_time FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id WHERE w.start_time BETWEEN '08:00:00' AND '17:00:00';",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.position, AVG(e.hourly_rate) AS avg_hourly_rate FROM Employees e GROUP BY e.position;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.position, COUNT(*) AS num_employees FROM Employees e GROUP BY e.position;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.position, COUNT(*) AS num_schedules FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.position;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name AS employee_name, w.date, SUM(w.end_time - w.start_time) AS total_hours FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name, w.date;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, COUNT(w.date) AS num_schedules FROM Employees e LEFT JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, MAX(w.end_time - w.start_time) AS max_hours_worked FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, AVG(w.end_time - w.start_time) AS avg_hours_worked FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, MIN(w.start_time) AS earliest_start_time FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, MAX(w.end_time) AS latest_end_time FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT e.position) AS num_positions FROM Employees e;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT e.employee_id) AS num_employees FROM Employees e;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name AS employee_name, SUM(w.end_time - w.start_time) AS total_hours FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name HAVING total_hours > 40;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, COUNT(w.date) AS num_schedules FROM Employees e LEFT JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name HAVING COUNT(w.date) < 5;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, AVG(w.end_time - w.start_time) AS avg_hours_worked FROM Employees e JOIN WorkSchedule w ON e.employee_id = w.employee_id GROUP BY e.name HAVING AVG(w.end_time - w.start_time) > 5;",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM Employees WHERE position = 'Manager' AND hourly_rate > 50",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT name, position FROM Employees WHERE position = 'Supervisor'",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM WorkSchedule WHERE date BETWEEN '2021-01-01' AND '2021-01-31'",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT name, start_time, end_time FROM Employees e JOIN WorkSchedule ws ON e.employee_id = ws.employee_id",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT *, TIMESTAMPDIFF(HOUR, start_time, end_time) AS hours_worked FROM WorkSchedule",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT name, SUM(TIMESTAMPDIFF(HOUR, start_time, end_time)) AS total_hours_worked FROM Employees e JOIN WorkSchedule ws ON e.employee_id = ws.employee_id GROUP BY name",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT name, AVG(hourly_rate) AS avg_hourly_rate FROM Employees GROUP BY position HAVING AVG(hourly_rate) > 30",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT name, start_time, end_time FROM Employees e LEFT JOIN WorkSchedule ws ON e.employee_id = ws.employee_id WHERE ws.schedule_id IS NULL",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT name, position, AVG(hourly_rate) AS avg_hourly_rate FROM Employees GROUP BY position HAVING MAX(hourly_rate) > 40",
  "### TABLEDATA\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    position VARCHAR(50),\n    hourly_rate DECIMAL(10, 2)\n);\n\nCREATE TABLE WorkSchedule (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME\n);\n\n### STATEMENT\n\nSELECT name, position, MIN(hourly_rate) AS min_hourly_rate FROM Employees GROUP BY position HAVING COUNT(employee_id) > 1",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT employee_id, name, position FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT * FROM shifts;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT shift_id, shift_date, start_time, end_time, employee_id FROM shifts;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT * FROM payroll;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT payroll_id, pay_date, employee_id, hours_worked, total_pay FROM payroll;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT employee_id, name, position, hourly_rate FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT employee_id, name, position, hourly_rate FROM employees WHERE position = 'Manager'; ",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT employee_id, name, position, hourly_rate FROM employees WHERE position = 'Supervisor';",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT employee_id, name, position, hourly_rate FROM employees WHERE hourly_rate > 15.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT * FROM shifts WHERE shift_date = '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT * FROM shifts WHERE start_time BETWEEN '08:00:00' AND '12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT * FROM payroll WHERE hours_worked > 40;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT * FROM payroll WHERE total_pay > 500.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, p.pay_date, p.hours_worked, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, p.pay_date, p.hours_worked, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id WHERE p.total_pay > 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT name, position FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, e.position, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, e.position, s.shift_date, s.start_time, s.end_time FROM employees e JOIN shifts s ON e.employee_id = s.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id WHERE p.hours_worked > 40;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id WHERE p.pay_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id WHERE p.total_pay > 1000;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, SUM(p.hours_worked), AVG(p.total_pay) FROM employees e JOIN payroll p ON e.employee_id = p.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id ORDER BY p.total_pay DESC;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id ORDER BY p.total_pay ASC;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, COUNT(*) FROM employees e JOIN payroll p ON e.employee_id = p.employee_id GROUP BY e.name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, p.total_pay FROM employees e LEFT JOIN payroll p ON e.employee_id = p.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, p.total_pay FROM employees e RIGHT JOIN payroll p ON e.employee_id = p.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT DISTINCT e.position FROM employees e;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT * FROM shifts WHERE shift_date = '2022-06-15';",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT s.shift_id, e.name FROM shifts s JOIN employees e ON s.employee_id = e.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, MAX(p.hours_worked) FROM employees e JOIN payroll p ON e.employee_id = p.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, MIN(p.total_pay) FROM employees e JOIN payroll p ON e.employee_id = p.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, SUM(p.hours_worked * p.hourly_rate) AS total_earning FROM employees e JOIN payroll p ON e.employee_id = p.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE employees (    employee_id INT PRIMARY KEY,    name VARCHAR(50) NOT NULL,    position VARCHAR(50) NOT NULL,    hourly_rate DECIMAL(10, 2) NOT NULL );\n\nCREATE TABLE shifts (    shift_id INT PRIMARY KEY,    shift_date DATE NOT NULL,    start_time TIME NOT NULL,    end_time TIME NOT NULL,    employee_id INT REFERENCES employees(employee_id) );\n\nCREATE TABLE payroll (    payroll_id INT PRIMARY KEY,    pay_date DATE NOT NULL,    employee_id INT REFERENCES employees(employee_id),    hours_worked DECIMAL(5, 2) NOT NULL,    total_pay DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nSELECT e.name, p.total_pay FROM employees e JOIN payroll p ON e.employee_id = p.employee_id WHERE p.total_pay >= e.hourly_rate * p.hours_worked;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM employees",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT id, name FROM employees",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT position FROM employees",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM schedules",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT event_date, start_time, end_time FROM schedules",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM events",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT event_name, location FROM events",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM payroll",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT pay_date, total_pay FROM payroll",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT id, name, position FROM employees",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT event_name, event_date, location FROM events",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT employee_id, event_date FROM schedules",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT id, name, position, hourly_rate FROM employees",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT event_name, location FROM events WHERE event_date = '2022-08-15'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM payroll WHERE total_pay > 1000",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT name, hourly_rate FROM employees WHERE position = 'Manager'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT employee_id, event_date FROM schedules WHERE event_date BETWEEN '2022-08-01' AND '2022-08-31'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM schedules WHERE employee_id = 101",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT employee_id, total_pay FROM payroll ORDER BY total_pay DESC",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM employees LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT e.name, e.position, s.event_date\nFROM employees e\nJOIN schedules s ON e.id = s.employee_id\nWHERE e.position = 'Manager'\nORDER BY s.event_date DESC",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT e.name, p.pay_date, p.total_pay\nFROM employees e\nJOIN payroll p ON e.id = p.employee_id\nWHERE p.total_pay > 1000\nORDER BY p.pay_date ASC",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT e.name, p.hours_worked, p.total_pay\nFROM employees e\nJOIN payroll p ON e.id = p.employee_id\nWHERE p.hours_worked > 40\nORDER BY p.total_pay DESC",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT e.name, s.event_date, s.start_time, s.end_time\nFROM employees e\nJOIN schedules s ON e.id = s.employee_id\nWHERE s.event_date BETWEEN '2022-10-01' AND '2022-10-31'\nORDER BY s.event_date ASC",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT e.name, p.pay_date, p.total_pay\nFROM employees e\nJOIN payroll p ON e.id = p.employee_id\nWHERE e.position = 'Staff'\nORDER BY p.pay_date DESC",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hourly_rate DECIMAL(10, 2)\n)\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    employee_id INT,\n    event_date DATE,\n    start_time TIME,\n    end_time TIME\n)\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(255)\n)\n\nCREATE TABLE payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    pay_date DATE,\n    hours_worked DECIMAL(5, 2),\n    total_pay DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT e.name, p.hours_worked, p.total_pay\nFROM employees e\nJOIN payroll p ON e.id = p.employee_id\nWHERE p.hou...",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT name, position FROM employees WHERE hourly_rate > 20;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT DISTINCT position FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM schedules WHERE shift_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, shift_date FROM schedules WHERE shift_hours > 8;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, pay_date, total_pay FROM payroll WHERE total_hours > 40;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT title, base_salary FROM positions WHERE base_salary < 50000;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM shifts WHERE shift_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT shift_date, start_time, end_time FROM shifts WHERE start_time > '08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM employees ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT name, position, hourly_rate FROM employees WHERE position LIKE '%Manager%';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, shift_date, shift_hours FROM schedules WHERE shift_hours BETWEEN 4 AND 8;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT title, base_salary FROM positions WHERE title = 'Software Engineer';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM payroll ORDER BY pay_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM shifts WHERE end_time < '18:00:00';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, pay_date, total_pay FROM payroll WHERE total_hours >= 30 AND total_pay < 2000;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT position_id, title FROM positions WHERE title LIKE '%Associate%';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM schedules WHERE employee_id = 2002 ORDER BY shift_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT employee_id, shift_date, shift_hours FROM schedules WHERE shift_hours > 6 ORDER BY shift_hours DESC;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE position = 'Manager';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT name, position, hourly_rate FROM employees WHERE hourly_rate > 30.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, s.shift_date FROM employees e INNER JOIN schedules s ON e.id = s.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT p.title, p.base_salary FROM positions p INNER JOIN employees e ON p.position_id = e.id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, p.title, p.base_salary FROM employees e INNER JOIN positions p ON e.position = p.title;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, SUM(s.shift_hours) AS total_hours_worked FROM employees e INNER JOIN schedules s ON e.id = s.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, COUNT(s.schedule_id) AS total_shifts FROM employees e LEFT JOIN schedules s ON e.id = s.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, SUM(p.total_pay) AS total_pay FROM employees e INNER JOIN payroll p ON e.id = p.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT DISTINCT e.name, s.shift_date FROM employees e INNER JOIN schedules s ON e.id = s.employee_id WHERE s.shift_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name AS employee_name, p.title AS position_title, s.shift_date AS last_shift_date FROM employees e INNER JOIN positions p ON e.position = p.title LEFT JOIN schedules s ON e.id = s.employee_id ORDER BY s.shift_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, COUNT(p.payroll_id) AS total_payrolls FROM employees e LEFT JOIN payroll p ON e.id = p.employee_id GROUP BY e.name HAVING total_payrolls >= 3;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name AS employee_name, SUM(p.total_pay) AS total_pay FROM employees e INNER JOIN payroll p ON e.id = p.employee_id GROUP BY e.name HAVING total_pay > 500.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, AVG(hourly_rate) AS avg_hourly_rate FROM employees e GROUP BY e.name HAVING avg_hourly_rate < 20.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, MAX(hourly_rate) AS max_hourly_rate FROM employees e GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT DISTINCT e.name AS employee_name, p.title AS position_title, SUM(s.shift_hours) AS total_hours_worked FROM employees e INNER JOIN positions p ON e.position = p.title INNER JOIN schedules s ON e.id = s.employee_id GROUP BY e.name, p.title;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, MIN(p.pay_date) AS first_pay_date FROM employees e INNER JOIN payroll p ON e.id = p.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name AS employee_name, COUNT(s.schedule_id) AS total_shifts, AVG(s.shift_hours) AS avg_shift_hours FROM employees e LEFT JOIN schedules s ON e.id = s.employee_id GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, p.base_salary, p.base_salary * AVG(s.shift_hours) AS total_pay FROM employees e INNER JOIN positions p ON e.position = p.title INNER JOIN schedules s ON e.id = s.employee_id GROUP BY e.name, p.base_salary;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, DATE_ADD(s.shift_date, INTERVAL 1 WEEK) AS next_shift_date FROM employees e INNER JOIN schedules s ON e.id = s.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, SEC_TO_TIME(SUM(TIME_TO_SEC(s.end_time) - TIME_TO_SEC(s.start_time))) AS total_working_hours FROM employees e INNER JOIN shifts s ON e.shift_date = s.shift_date GROUP BY e.name;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n id INT PRIMARY KEY,\n name VARCHAR(50),\n position VARCHAR(100),\n hourly_rate DECIMAL(10,2)\n);\n\nCREATE TABLE schedules (\n schedule_id INT PRIMARY KEY,\n employee_id INT,\n shift_date DATE,\n shift_hours DECIMAL(5,2)\n);\n\nCREATE TABLE payroll (\n payroll_id INT PRIMARY KEY,\n employee_id INT,\n pay_date DATE,\n total_hours DECIMAL(5,2),\n total_pay DECIMAL(10,2)\n);\n\nCREATE TABLE positions (\n position_id INT PRIMARY KEY,\n title VARCHAR(100),\n base_salary DECIMAL(10,2)\n);\n\nCREATE TABLE shifts (\n shift_id INT PRIMARY KEY,\n shift_date DATE,\n start_time TIME,\n end_time TIME\n);\n\n### STATEMENT\n\nSELECT e.name, MAX(p.total_hours) AS max_hours_worked FROM employees e INNER JOIN payroll p ON e.id = p.employee_id GROUP BY e.name;"
]