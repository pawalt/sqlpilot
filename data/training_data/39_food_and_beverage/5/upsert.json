[
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (1, 'Burger', 500, 20.5, 30, 25);",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (2, 'Fries', 300, 15.5, 40, 5);",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (3, 'Salad', 200, 5.5, 15, 10);",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (4, 'Soda', 150, 0, 40, 0)",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (1, 'Cheeseburger', 550, 25.5, 40, 20) ON DUPLICATE KEY UPDATE item_name = 'Cheeseburger', calories = 550, fat_grams = 25.5, carbohydrates = 40, protein = 20;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (2, 'French Fries', 300, 15.0, 40, 4) ON DUPLICATE KEY UPDATE item_name = 'French Fries', calories = 300, fat_grams = 15.0, carbohydrates = 40, protein = 4;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (3, 'Chicken Tenders', 400, 20.0, 25, 30) ON DUPLICATE KEY UPDATE item_name = 'Chicken Tenders', calories = 400, fat_grams = 20.0, carbohydrates = 25, protein = 30;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (4, 'Caesar Salad', 250, 15.6, 10, 12) ON DUPLICATE KEY UPDATE item_name = 'Caesar Salad', calories = 250, fat_grams = 15.6, carbohydrates = 10, protein = 12;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (5, 'Hamburger', 500, 22.0, 35, 19) ON DUPLICATE KEY UPDATE item_name = 'Hamburger', calories = 500, fat_grams = 22.0, carbohydrates = 35, protein = 19;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (6, 'Onion Rings', 350, 18.5, 30, 5) ON DUPLICATE KEY UPDATE item_name = 'Onion Rings', calories = 350, fat_grams = 18.5, carbohydrates = 30, protein = 5;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (7, 'Grilled Chicken Sandwich', 400, 15.0, 30, 25) ON DUPLICATE KEY UPDATE item_name = 'Grilled Chicken Sandwich', calories = 400, fat_grams = 15.0, carbohydrates = 30, protein = 25;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (8, 'Lemonade', 150, 0.5, 35, 0) ON DUPLICATE KEY UPDATE item_name = 'Lemonade', calories = 150, fat_grams = 0.5, carbohydrates = 35, protein = 0;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (9, 'Milkshake', 450, 20.0, 50, 8) ON DUPLICATE KEY UPDATE item_name = 'Milkshake', calories = 450, fat_grams = 20.0, carbohydrates = 50, protein = 8;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (10, 'Fish Sandwich', 350, 14.5, 25, 18) ON DUPLICATE KEY UPDATE item_name = 'Fish Sandwich', calories = 350, fat_grams = 14.5, carbohydrates = 25, protein = 18;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (11, 'Chicken Nuggets', 300, 17.0, 20, 15) ON DUPLICATE KEY UPDATE item_name = 'Chicken Nuggets', calories = 300, fat_grams = 17.0, carbohydrates = 20, protein = 15;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (12, 'Poutine', 600, 30.0, 45, 22) ON DUPLICATE KEY UPDATE item_name = 'Poutine', calories = 600, fat_grams = 30.0, carbohydrates = 45, protein = 22;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (13, 'Soft Drink', 200, 0.0, 50, 0) ON DUPLICATE KEY UPDATE item_name = 'Soft Drink', calories = 200, fat_grams = 0.0, carbohydrates = 50, protein = 0;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (14, 'Taco', 350, 18.0, 30, 12) ON DUPLICATE KEY UPDATE item_name = 'Taco', calories = 350, fat_grams = 18.0, carbohydrates = 30, protein = 12;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (15, 'Ice Cream Sundae', 400, 12.5, 35, 10) ON DUPLICATE KEY UPDATE item_name = 'Ice Cream Sundae', calories = 400, fat_grams = 12.5, carbohydrates = 35, protein = 10;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (16, 'Vegetable Wrap', 300, 8.0, 30, 15) ON DUPLICATE KEY UPDATE item_name = 'Vegetable Wrap', calories = 300, fat_grams = 8.0, carbohydrates = 30, protein = 15;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (17, 'Nachos', 500, 25.0, 40, 15) ON DUPLICATE KEY UPDATE item_name = 'Nachos', calories = 500, fat_grams = 25.0, carbohydrates = 40, protein = 15;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (18, 'Chicken Wrap', 400, 12.0, 30, 20) ON DUPLICATE KEY UPDATE item_name = 'Chicken Wrap', calories = 400, fat_grams = 12.0, carbohydrates = 30, protein = 20;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (19, 'Mozzarella Sticks', 350, 16.5, 25, 12) ON DUPLICATE KEY UPDATE item_name = 'Mozzarella Sticks', calories = 350, fat_grams = 16.5, carbohydrates = 25, protein = 12;",
  "### TABLEDATA\n\nCREATE TABLE fast_food_menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  fat_grams DECIMAL,\n  carbohydrates INT,\n  protein INT\n)\n\n### STATEMENT\n\nUPSERT INTO fast_food_menu_items (item_id, item_name, calories, fat_grams, carbohydrates, protein) VALUES (20, 'Breakfast Burrito', 450, 18.0, 30, 22) ON DUPLICATE KEY UPDATE item_name = 'Breakfast Burrito', calories = 450, fat_grams = 18.0, carbohydrates = 30, protein = 22;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (1, 'Chicken Salad', 350, 12.5, 20.3, 25.8) ON DUPLICATE KEY UPDATE item_name='Chicken Salad', calories=350, fat_g=12.5, carb_g=20.3, protein_g=25.8;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (2, 'Vegetable Stir-fry', 280, 7.2, 30.1, 15.6) ON DUPLICATE KEY UPDATE item_name='Vegetable Stir-fry', calories=280, fat_g=7.2, carb_g=30.1, protein_g=15.6;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (3, 'Grilled Salmon', 400, 18.4, 0.8, 30.5) ON DUPLICATE KEY UPDATE item_name='Grilled Salmon', calories=400, fat_g=18.4, carb_g=0.8, protein_g=30.5;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (4, 'Pasta Carbonara', 500, 22.1, 45.3, 28.7) ON DUPLICATE KEY UPDATE item_name='Pasta Carbonara', calories=500, fat_g=22.1, carb_g=45.3, protein_g=28.7;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (5, 'Fruit Salad', 150, 0.5, 40.2, 1.8) ON DUPLICATE KEY UPDATE item_name='Fruit Salad', calories=150, fat_g=0.5, carb_g=40.2, protein_g=1.8;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (6, 'Tofu Stir-fry', 240, 8.7, 25.6, 18.2) ON DUPLICATE KEY UPDATE item_name='Tofu Stir-fry', calories=240, fat_g=8.7, carb_g=25.6, protein_g=18.2;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (7, 'Burger', 600, 30.2, 42.5, 35.6) ON DUPLICATE KEY UPDATE item_name='Burger', calories=600, fat_g=30.2, carb_g=42.5, protein_g=35.6;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (8, 'Caesar Salad', 320, 15.8, 12.3, 20.5) ON DUPLICATE KEY UPDATE item_name='Caesar Salad', calories=320, fat_g=15.8, carb_g=12.3, protein_g=20.5;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (9, 'Shrimp Scampi', 450, 24.6, 30.9, 27.3) ON DUPLICATE KEY UPDATE item_name='Shrimp Scampi', calories=450, fat_g=24.6, carb_g=30.9, protein_g=27.3;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (10, 'Mushroom Risotto', 380, 13.9, 28.4, 22.1) ON DUPLICATE KEY UPDATE item_name='Mushroom Risotto', calories=380, fat_g=13.9, carb_g=28.4, protein_g=22.1;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (11, 'Steak', 700, 35.7, 2.5, 45.3) ON DUPLICATE KEY UPDATE item_name='Steak', calories=700, fat_g=35.7, carb_g=2.5, protein_g=45.3;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (12, 'French Fries', 320, 16.3, 45.2, 3.8) ON DUPLICATE KEY UPDATE item_name='French Fries', calories=320, fat_g=16.3, carb_g=45.2, protein_g=3.8;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (13, 'Fish Tacos', 420, 18.9, 30.8, 26.4) ON DUPLICATE KEY UPDATE item_name='Fish Tacos', calories=420, fat_g=18.9, carb_g=30.8, protein_g=26.4;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (14, 'Pancakes', 280, 10.2, 39.7, 8.5) ON DUPLICATE KEY UPDATE item_name='Pancakes', calories=280, fat_g=10.2, carb_g=39.7, protein_g=8.5;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (15, 'Grilled Veggies', 180, 4.2, 25.1, 11.6) ON DUPLICATE KEY UPDATE item_name='Grilled Veggies', calories=180, fat_g=4.2, carb_g=25.1, protein_g=11.6;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (16, 'Lasagna', 550, 26.4, 48.2, 31.6) ON DUPLICATE KEY UPDATE item_name='Lasagna', calories=550, fat_g=26.4, carb_g=48.2, protein_g=31.6;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (17, 'Vegetarian Chili', 320, 6.7, 40.6, 18.9) ON DUPLICATE KEY UPDATE item_name='Vegetarian Chili', calories=320, fat_g=6.7, carb_g=40.6, protein_g=18.9;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (18, 'Beef Gyros', 480, 21.5, 38.4, 27.2) ON DUPLICATE KEY UPDATE item_name='Beef Gyros', calories=480, fat_g=21.5, carb_g=38.4, protein_g=27.2;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (19, 'Crispy Tofu', 290, 12.7, 22.6, 15.8) ON DUPLICATE KEY UPDATE item_name='Crispy Tofu', calories=290, fat_g=12.7, carb_g=22.6, protein_g=15.8;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (20, 'Greek Salad', 250, 14.3, 10.5, 18.2) ON DUPLICATE KEY UPDATE item_name='Greek Salad', calories=250, fat_g=14.3, carb_g=10.5, protein_g=18.2;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (1, 'Chicken Sandwich', 450, 15.5, 35.2, 20.8) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (2, 'Caesar Salad', 320, 12.6, 20.3, 15.2) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (3, 'Beef Burger', 550, 20.1, 42.8, 26.5) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (4, 'Pizza Margherita', 400, 14.3, 30.5, 18.7) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (5, 'Fish Tacos', 380, 12.9, 25.3, 22.1) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (6, 'Vegetable Stir-Fry', 280, 8.5, 18.7, 14.6) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (7, 'Pasta Carbonara', 460, 16.7, 32.2, 21.3) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (8, 'Grilled Salmon', 320, 11.4, 23.9, 24.5) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (9, 'Mushroom Risotto', 340, 12.3, 25.6, 14.7) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (10, 'Fruit Salad', 200, 6.5, 15.2, 9.8) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (11, 'BBQ Ribs', 600, 25.6, 38.9, 30.3) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (12, 'Chicken Caesar Wrap', 420, 15.4, 32.8, 18.9) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (13, 'Vegetarian Pizza', 380, 13.5, 29.4, 17.7) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (14, 'Shrimp Scampi', 340, 11.7, 26.2, 22.4) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (15, 'Tofu Stir-Fry', 290, 8.8, 19.5, 15.3) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (16, 'Greek Salad', 280, 9.2, 17.8, 12.6) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (17, 'Beef Stir-Fry', 420, 16.3, 28.7, 24.1) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (18, 'Spaghetti Bolognese', 480, 17.9, 33.5, 26.2) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (19, 'Cobb Salad', 360, 14.2, 26.8, 18.5) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    calories INT,\n    fat_g FLOAT,\n    carb_g FLOAT,\n    protein_g FLOAT\n);\n\nCREATE TABLE menu_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, carb_g, protein_g) VALUES (20, 'Lemon Herb Chicken', 390, 13.8, 29.6, 21.7) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, fat_g = EXCLUDED.fat_g, carb_g = EXCLUDED.carb_g, protein_g = EXCLUDED.protein_g;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, protein_g) VALUES (1, 'Burger', 500, 20, 25) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Burger', calories = 500, fat_g = 20, protein_g = 25;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, protein_g) VALUES (2, 'Pizza', 800, 30, 35) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Pizza', calories = 800, fat_g = 30, protein_g = 35;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, protein_g) VALUES (3, 'Salad', 300, 15, 10) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Salad', calories = 300, fat_g = 15, protein_g = 10;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, protein_g) VALUES (4, 'Sandwich', 400, 18, 20) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Sandwich', calories = 400, fat_g = 18, protein_g = 20;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, protein_g) VALUES (5, 'Pasta', 600, 25, 30) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Pasta', calories = 600, fat_g = 25, protein_g = 30;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, fat_g_per_unit, protein_g_per_unit) VALUES (1, 'Tomato', 20, 1, 1) ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Tomato', calories_per_unit = 20, fat_g_per_unit = 1, protein_g_per_unit = 1;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, fat_g_per_unit, protein_g_per_unit) VALUES (2, 'Cheese', 50, 5, 10) ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Cheese', calories_per_unit = 50, fat_g_per_unit = 5, protein_g_per_unit = 10;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, fat_g_per_unit, protein_g_per_unit) VALUES (3, 'Lettuce', 5, 0, 1) ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Lettuce', calories_per_unit = 5, fat_g_per_unit = 0, protein_g_per_unit = 1;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, fat_g_per_unit, protein_g_per_unit) VALUES (4, 'Bread', 80, 2, 5) ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Bread', calories_per_unit = 80, fat_g_per_unit = 2, protein_g_per_unit = 5;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, fat_g_per_unit, protein_g_per_unit) VALUES (5, 'Chicken', 100, 4, 20) ON CONFLICT (ingredient_id) DO UPDATE SET ingredient_name = 'Chicken', calories_per_unit = 100, fat_g_per_unit = 4, protein_g_per_unit = 20;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (1, 1, 2) ON CONFLICT (item_id, ingredient_id) DO UPDATE SET quantity = 2;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (1, 2, 1) ON CONFLICT (item_id, ingredient_id) DO UPDATE SET quantity = 1;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (2, 1, 2) ON CONFLICT (item_id, ingredient_id) DO UPDATE SET quantity = 2;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (2, 2, 1) ON CONFLICT (item_id, ingredient_id) DO UPDATE SET quantity = 1;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (3, 3, 3) ON CONFLICT (item_id, ingredient_id) DO UPDATE SET quantity = 3;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (3, 4, 2) ON CONFLICT (item_id, ingredient_id) DO UPDATE SET quantity = 2;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (4, 1, 1) ON CONFLICT (item_id, ingredient_id) DO UPDATE SET quantity = 1;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (4, 3, 3) ON CONFLICT (item_id, ingredient_id) DO UPDATE SET quantity = 3;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (5, 2, 2) ON CONFLICT (item_id, ingredient_id) DO UPDATE SET quantity = 2;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (5, 5, 4) ON CONFLICT (item_id, ingredient_id) DO UPDATE SET quantity = 4;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, protein_g) VALUES (1, 'Burger', 500, 20, 30) ON DUPLICATE KEY UPDATE calories = VALUES(calories), fat_g = VALUES(fat_g), protein_g = VALUES(protein_g);",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, fat_g_per_unit, protein_g_per_unit) VALUES (1, 'Beef Patty', 200, 15, 20) ON DUPLICATE KEY UPDATE calories_per_unit = VALUES(calories_per_unit), fat_g_per_unit = VALUES(fat_g_per_unit), protein_g_per_unit = VALUES(protein_g_per_unit);",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (1, 1, 1) ON DUPLICATE KEY UPDATE quantity = VALUES(quantity);",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, fat_g, protein_g) VALUES (2, 'Salad', 300, 10, 5) ON DUPLICATE KEY UPDATE calories = VALUES(calories), fat_g = VALUES(fat_g), protein_g = VALUES(protein_g);",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    calories INT,\n    fat_g INT,\n    protein_g INT\n);\n\nCREATE TABLE ingredients (\n    ingredient_id INT PRIMARY KEY,\n    ingredient_name VARCHAR(255) NOT NULL,\n    calories_per_unit INT,\n    fat_g_per_unit INT,\n    protein_g_per_unit INT\n);\n\nCREATE TABLE item_ingredients (\n    item_id INT,\n    ingredient_id INT,\n    quantity INT,\n    PRIMARY KEY (item_id, ingredient_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n    FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, fat_g_pe...",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, protein, fat, carbs) VALUES (1, 'Cheeseburger', 500, 20.5, 25.3, 40.2) ON DUPLICATE KEY UPDATE item_name='Cheeseburger', calories=500, protein=20.5, fat=25.3, carbs=40.2;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, protein_per_unit, fat_per_unit, carbs_per_unit) VALUES (1, 'Beef patty', 250, 15.4, 20.1, 10.3) ON DUPLICATE KEY UPDATE ingredient_name='Beef patty', calories_per_unit=250, protein_per_unit=15.4, fat_per_unit=20.1, carbs_per_unit=10.3;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (1, 1, 1) ON DUPLICATE KEY UPDATE quantity=1;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO locations (location_id, location_name, address, phone_number) VALUES (1, 'Main Street Restaurant', '123 Main Street', '555-1234') ON DUPLICATE KEY UPDATE location_name='Main Street Restaurant', address='123 Main Street', phone_number='555-1234';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, protein, fat, carbs) VALUES (1, 'Pasta Alfredo', 800, 25.5, 16.2, 120.3) ON DUPLICATE KEY UPDATE item_name = 'Pasta Alfredo', calories = 800, protein = 25.5, fat = 16.2, carbs = 120.3;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, protein_per_unit, fat_per_unit, carbs_per_unit) VALUES (1, 'Pasta', 300, 5.0, 1.5, 50.0) ON DUPLICATE KEY UPDATE ingredient_name = 'Pasta', calories_per_unit = 300, protein_per_unit = 5.0, fat_per_unit = 1.5, carbs_per_unit = 50.0;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (1, 1, 2) ON DUPLICATE KEY UPDATE quantity = 2;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, protein, fat, carbs) VALUES (2, 'Chicken Salad', 600, 30.0, 12.5, 80.5) ON DUPLICATE KEY UPDATE item_name = 'Chicken Salad', calories = 600, protein = 30.0, fat = 12.5, carbs = 80.5;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, protein_per_unit, fat_per_unit, carbs_per_unit) VALUES (2, 'Chicken', 200, 15.0, 5.0, 2.0) ON DUPLICATE KEY UPDATE ingredient_name = 'Chicken', calories_per_unit = 200, protein_per_unit = 15.0, fat_per_unit = 5.0, carbs_per_unit = 2.0;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (2, 2, 1) ON DUPLICATE KEY UPDATE quantity = 1;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO locations (location_id, location_name, address, phone_number) VALUES (1, 'Restaurant A', '123 Main St', '555-1234') ON DUPLICATE KEY UPDATE location_name = 'Restaurant A', address = '123 Main St', phone_number = '555-1234';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO locations (location_id, location_name, address, phone_number) VALUES (2, 'Restaurant B', '456 Elm St', '555-5678') ON DUPLICATE KEY UPDATE location_name = 'Restaurant B', address = '456 Elm St', phone_number = '555-5678';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, protein, fat, carbs) VALUES (3, 'Vegetable Stir Fry', 400, 10.5, 5.0, 60.2) ON DUPLICATE KEY UPDATE item_name = 'Vegetable Stir Fry', calories = 400, protein = 10.5, fat = 5.0, carbs = 60.2;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, protein_per_unit, fat_per_unit, carbs_per_unit) VALUES (3, 'Vegetables', 100, 2.5, 1.0, 15.0) ON DUPLICATE KEY UPDATE ingredient_name = 'Vegetables', calories_per_unit = 100, protein_per_unit = 2.5, fat_per_unit = 1.0, carbs_per_unit = 15.0;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, protein_per_unit, fat_per_unit, carbs_per_unit) VALUES (4, 'Sauce', 50, 1.0, 3.0, 10.0) ON DUPLICATE KEY UPDATE ingredient_name = 'Sauce', calories_per_unit = 50, protein_per_unit = 1.0, fat_per_unit = 3.0, carbs_per_unit = 10.0;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (3, 3, 2) ON DUPLICATE KEY UPDATE quantity = 2;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (3, 4, 1) ON DUPLICATE KEY UPDATE quantity = 1;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO locations (location_id, location_name, address, phone_number) VALUES (3, 'Restaurant C', '789 Oak St', '555-9101') ON DUPLICATE KEY UPDATE location_name = 'Restaurant C', address = '789 Oak St', phone_number = '555-9101';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, protein, fat, carbs) VALUES (4, 'Pizza', 1200, 35.5, 25.0, 150.5) ON DUPLICATE KEY UPDATE item_name = 'Pizza', calories = 1200, protein = 35.5, fat = 25.0, carbs = 150.5;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, protein_per_unit, fat_per_unit, carbs_per_unit) VALUES (5, 'Dough', 500, 10.0, 15.0, 100.0) ON DUPLICATE KEY UPDATE ingredient_name = 'Dough', calories_per_unit = 500, protein_per_unit = 10.0, fat_per_unit = 15.0, carbs_per_unit = 100.0;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, protein_per_unit, fat_per_unit, carbs_per_unit) VALUES (6, 'Cheese', 300, 20.0, 25.0, 5.0) ON DUPLICATE KEY UPDATE ingredient_name = 'Cheese', calories_per_unit = 300, protein_per_unit = 20.0, fat_per_unit = 25.0, carbs_per_unit = 5.0;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO ingredients (ingredient_id, ingredient_name, calories_per_unit, protein_per_unit, fat_per_unit, carbs_per_unit) VALUES (7, 'Sausage', 400, 25.0, 20.0, 10.0) ON DUPLICATE KEY UPDATE ingredient_name = 'Sausage', calories_per_unit = 400, protein_per_unit = 25.0, fat_per_unit = 20.0, carbs_per_unit = 10.0;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (4, 5, 2) ON DUPLICATE KEY UPDATE quantity = 2;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (4, 6, 1) ON DUPLICATE KEY UPDATE quantity = 1;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO item_ingredients (item_id, ingredient_id, quantity) VALUES (4, 7, 1) ON DUPLICATE KEY UPDATE quantity = 1;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(255),\n  calories INT,\n  protein DECIMAL,\n  fat DECIMAL,\n  carbs DECIMAL\n);\n\nCREATE TABLE ingredients (\n  ingredient_id INT PRIMARY KEY,\n  ingredient_name VARCHAR(255),\n  calories_per_unit INT,\n  protein_per_unit DECIMAL,\n  fat_per_unit DECIMAL,\n  carbs_per_unit DECIMAL\n);\n\nCREATE TABLE item_ingredients (\n  item_id INT,\n  ingredient_id INT,\n  quantity INT,\n  PRIMARY KEY (item_id, ingredient_id),\n  FOREIGN KEY (item_id) REFERENCES menu_items(item_id),\n  FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)\n);\n\nCREATE TABLE locations (\n  location_id INT PRIMARY KEY,\n  location_name VARCHAR(255),\n  address VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO locations (location_id, location_name, address, phone_number) VALUES (4, 'Restaurant D', '101 Pine St', '555-1212') ON DUPLICATE KEY UPDATE location_name = 'Restaurant D', address = '101 Pine St', phone_number = '555-1212';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, protein, fat, carbohydrates) VALUES (1, 'Burger', 500, 20, 25, 40) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Burger', calories = 500, protein = 20, fat = 25, carbohydrates = 40;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (1, 'Fast Food') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Fast Food';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO restaurants (restaurant_id, restaurant_name, location) VALUES (1, 'McDonalds', 'New York') ON CONFLICT (restaurant_id) DO UPDATE SET restaurant_name = 'McDonalds', location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO menu (menu_id, item_id, category_id, restaurant_id, price) VALUES (1, 1, 1, 1, 5.99) ON CONFLICT (menu_id) DO UPDATE SET item_id = 1, category_id = 1, restaurant_id = 1, price = 5.99;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO promotions (promotion_id, promotion_name, start_date, end_date) VALUES (1, 'Happy Hour', '2023-01-01', '2023-12-31') ON CONFLICT (promotion_id) DO UPDATE SET promotion_name = 'Happy Hour', start_date = '2023-01-01', end_date = '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, protein, fat, carbohydrates) VALUES (2, 'Salad', 250, 10, 5, 20) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Salad', calories = 250, protein = 10, fat = 5, carbohydrates = 20;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (2, 'Healthy') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Healthy';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO restaurants (restaurant_id, restaurant_name, location) VALUES (2, 'Panera Bread', 'Los Angeles') ON CONFLICT (restaurant_id) DO UPDATE SET restaurant_name = 'Panera Bread', location = 'Los Angeles';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO menu (menu_id, item_id, category_id, restaurant_id, price) VALUES (2, 2, 2, 2, 7.99) ON CONFLICT (menu_id) DO UPDATE SET item_id = 2, category_id = 2, restaurant_id = 2, price = 7.99;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO promotions (promotion_id, promotion_name, start_date, end_date) VALUES (2, 'Lunch Special', '2023-01-01', '2023-12-31') ON CONFLICT (promotion_id) DO UPDATE SET promotion_name = 'Lunch Special', start_date = '2023-01-01', end_date = '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, protein, fat, carbohydrates) VALUES (3, 'Pizza', 800, 30, 40, 60) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Pizza', calories = 800, protein = 30, fat = 40, carbohydrates = 60;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (3, 'Italian') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Italian';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO restaurants (restaurant_id, restaurant_name, location) VALUES (3, 'Pizza Hut', 'Chicago') ON CONFLICT (restaurant_id) DO UPDATE SET restaurant_name = 'Pizza Hut', location = 'Chicago';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO menu (menu_id, item_id, category_id, restaurant_id, price) VALUES (3, 3, 3, 3, 10.99) ON CONFLICT (menu_id) DO UPDATE SET item_id = 3, category_id = 3, restaurant_id = 3, price = 10.99;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO promotions (promotion_id, promotion_name, start_date, end_date) VALUES (3, 'Family Meal Deal', '2023-01-01', '2023-12-31') ON CONFLICT (promotion_id) DO UPDATE SET promotion_name = 'Family Meal Deal', start_date = '2023-01-01', end_date = '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO menu_items (item_id, item_name, calories, protein, fat, carbohydrates) VALUES (4, 'Sushi', 400, 25, 15, 30) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Sushi', calories = 400, protein = 25, fat = 15, carbohydrates = 30;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (4, 'Japanese') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Japanese';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO restaurants (restaurant_id, restaurant_name, location) VALUES (4, 'Sushi Express', 'San Francisco') ON CONFLICT (restaurant_id) DO UPDATE SET restaurant_name = 'Sushi Express', location = 'San Francisco';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO menu (menu_id, item_id, category_id, restaurant_id, price) VALUES (4, 4, 4, 4, 12.99) ON CONFLICT (menu_id) DO UPDATE SET item_id = 4, category_id = 4, restaurant_id = 4, price = 12.99;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO promotions (promotion_id, promotion_name, start_date, end_date) VALUES (4, 'Sushi Night', '2023-01-01', '2023-12-31') ON CONFLICT (promotion_id) DO UPDATE SET promotion_name = 'Sushi Night', start_date = '2023-01-01', end_date = '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO menu_items (item_id, item_name, calories, protein, fat, carbohydrates) VALUES (1, 'Burger', 500, 20, 30, 40) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, protein = EXCLUDED.protein, fat = EXCLUDED.fat, carbohydrates = EXCLUDED.carbohydrates;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO categories (category_id, category_name) VALUES (1, 'Burgers') ON CONFLICT (category_id) DO UPDATE SET category_name = EXCLUDED.category_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO restaurants (restaurant_id, restaurant_name, location) VALUES (1, 'Burger Joint', 'Downtown') ON CONFLICT (restaurant_id) DO UPDATE SET restaurant_name = EXCLUDED.restaurant_name, location = EXCLUDED.location;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO menu (menu_id, item_id, category_id, restaurant_id, price) VALUES (1, 1, 1, 1, 9.99) ON CONFLICT (menu_id) DO UPDATE SET item_id = EXCLUDED.item_id, category_id = EXCLUDED.category_id, restaurant_id = EXCLUDED.restaurant_id, price = EXCLUDED.price;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO promotions (promotion_id, promotion_name, start_date, end_date) VALUES (1, 'Buy One Get One Free', '2022-01-01', '2022-01-31') ON CONFLICT (promotion_id) DO UPDATE SET promotion_name = EXCLUDED.promotion_name, start_date = EXCLUDED.start_date, end_date = EXCLUDED.end_date;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO menu_items (item_id, item_name, calories, protein, fat, carbohydrates) VALUES (2, 'Salad', 200, 10, 5, 25) ON CONFLICT (item_id) DO UPDATE SET item_name = EXCLUDED.item_name, calories = EXCLUDED.calories, protein = EXCLUDED.protein, fat = EXCLUDED.fat, carbohydrates = EXCLUDED.carbohydrates;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO categories (category_id, category_name) VALUES (2, 'Salads') ON CONFLICT (category_id) DO UPDATE SET category_name = EXCLUDED.category_name;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO restaurants (restaurant_id, restaurant_name, location) VALUES (2, 'Salad Bar', 'City Center') ON CONFLICT (restaurant_id) DO UPDATE SET restaurant_name = EXCLUDED.restaurant_name, location = EXCLUDED.location;",
  "### TABLEDATA\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name TEXT NOT NULL,\n    calories INT,\n    protein INT,\n    fat INT,\n    carbohydrates INT\n);\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name TEXT NOT NULL\n);\n\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name TEXT NOT NULL,\n    location TEXT\n);\n\nCREATE TABLE menu (\n    menu_id INT PRIMARY KEY,\n    item_id INT REFERENCES menu_items(item_id),\n    category_id INT REFERENCES categories(category_id),\n    restaurant_id INT REFERENCES restaurants(restaurant_id),\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE promotions (\n    promotion_id INT PRIMARY KEY,\n    promotion_name TEXT NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO menu (..."
]