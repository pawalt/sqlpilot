[
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM bar_sales LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT id, drink_name, drink_price FROM bar_sales WHERE quantity >= 5",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, SUM(quantity) AS total_quantity FROM bar_sales GROUP BY drink_name",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, AVG(drink_price) AS avg_price FROM bar_sales GROUP BY drink_name",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM bar_sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT id, drink_name, total_sales FROM bar_sales ORDER BY total_sales DESC",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM bar_sales",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, MAX(drink_price) AS max_price FROM bar_sales",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(quantity) AS average_quantity FROM bar_sales",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, COUNT(*) AS num_sales FROM bar_sales WHERE sale_date = '2022-02-14'",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, SUM(quantity) AS total_quantity_sold FROM bar_sales GROUP BY drink_name;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, AVG(drink_price) AS avg_price FROM bar_sales GROUP BY drink_name;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, COUNT(*) AS num_sales FROM bar_sales GROUP BY drink_name;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, MAX(drink_price) AS max_price FROM bar_sales GROUP BY drink_name;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, MIN(drink_price) AS min_price FROM bar_sales GROUP BY drink_name;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT sale_date, SUM(total_sales) AS total_sales_per_day FROM bar_sales GROUP BY sale_date;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT sale_date, COUNT(*) AS num_sales_per_day FROM bar_sales GROUP BY sale_date;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT sale_date, MAX(total_sales) AS max_sales_per_day FROM bar_sales GROUP BY sale_date;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT sale_date, MIN(total_sales) AS min_sales_per_day FROM bar_sales GROUP BY sale_date;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, SUM(quantity*drink_price) AS total_revenue FROM bar_sales GROUP BY drink_name;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, AVG(quantity) AS avg_quantity_sold FROM bar_sales GROUP BY drink_name;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT sale_date, AVG(total_sales) AS avg_sales_per_day FROM bar_sales GROUP BY sale_date;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, quantity, total_sales, sale_date FROM bar_sales WHERE drink_price > 5;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, quantity, total_sales, sale_date FROM bar_sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, total_sales FROM bar_sales ORDER BY total_sales DESC;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, total_sales FROM bar_sales ORDER BY total_sales ASC;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, quantity FROM bar_sales WHERE drink_price < 5;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, quantity FROM bar_sales WHERE total_sales > 100;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT drink_name, drink_price, quantity, total_sales FROM bar_sales WHERE drink_price BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE bar_sales (\n  id INT PRIMARY KEY,\n  drink_name VARCHAR(255),\n  drink_price DECIMAL(10, 2),\n  quantity INT,\n  total_sales DECIMAL(10, 2),\n  sale_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT drink_name FROM bar_sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT sale_id, sale_date, total_amount FROM Sales WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Sales WHERE sale_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(total_amount) AS total_sales FROM Sales GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_id, AVG(total_amount) AS avg_amount FROM Sales GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Sales ORDER BY total_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Sales WHERE sale_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(total_amount) AS max_amount FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MIN(total_amount) AS min_amount FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_sales FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Revenue;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT amount, source FROM Revenue WHERE revenue_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT SUM(amount) AS total_revenue FROM Revenue;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(amount) AS max_revenue FROM Revenue;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT source FROM Revenue;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Revenue ORDER BY revenue_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Revenue WHERE revenue_id = 50;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MIN(amount) AS min_revenue FROM Revenue;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM Revenue;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Sales WHERE total_amount > 1000",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(sale_id) FROM Sales GROUP BY customer_id HAVING COUNT(sale_id) > 5",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT R.revenue_date, R.amount, S.sale_date FROM Revenue R INNER JOIN Sales S ON R.revenue_date = S.sale_date",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT S.sale_date, S.total_amount, R.source FROM Sales S LEFT JOIN Revenue R ON S.customer_id = R.revenue_id",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(total_amount) AS max_amount FROM Sales",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MIN(total_amount) AS min_amount FROM Sales",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(total_amount) AS avg_amount FROM Sales",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT SUM(total_amount) AS total_sales FROM Sales",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT sale_date, customer_id, product_id FROM Sales WHERE customer_id = 1001",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) AS unique_customers FROM Sales",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(amount) AS avg_revenue FROM Revenue",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT source, SUM(amount) AS total_revenue FROM Revenue GROUP BY source",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(total_amount) AS total_purchase_amount FROM Sales GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Sales ORDER BY sale_date DESC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT sale_id, sale_date, total_amount FROM Sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Revenue WHERE amount > 500",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Sales WHERE customer_id IN (SELECT customer_id FROM Sales GROUP BY customer_id HAVING COUNT(sale_id) > 1)",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(total_amount) AS avg_amount FROM Sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT R.source, SUM(S.total_amount) AS total_sales FROM Sales S INNER JOIN Revenue R ON S.product_id = R.revenue_id GROUP BY R.source",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    customer_id INT,\n    product_id INT\n);\n\n\nCREATE TABLE Revenue (\n    revenue_id INT PRIMARY KEY,\n    revenue_date DATE,\n    amount DECIMAL(10,2),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Sales WHERE product_id IS NULL",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT * FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT sale_id, sale_date FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT * FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT product_id, product_name FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT * FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT sale_id, total_amount FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT product_id, price FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT customer_id, email FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT sale_id, sale_date, total_amount FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT product_id, product_name, price FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT customer_id, customer_name, email FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT sale_id, total_amount, sale_date FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT product_id, price, product_name FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT customer_id, email, customer_name FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT sale_id, sale_date, total_amount FROM Sales WHERE sale_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT product_id, product_name, price FROM Products WHERE price > 50;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT customer_id, customer_name, email FROM Customers WHERE customer_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT * FROM Sales WHERE total_amount < 1000;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT * FROM Products WHERE price BETWEEN 10 AND 50;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT sale_id, sale_date, total_amount FROM Sales WHERE total_amount > 1000 ORDER BY sale_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT product_id, product_name, price FROM Products WHERE price BETWEEN 10 AND 50 ORDER BY product_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT customer_id, customer_name, email FROM Customers WHERE LENGTH(customer_name) > 10 ORDER BY customer_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT product_name, price, customer_name FROM Products p JOIN Sales s ON p.product_id = s.sale_id JOIN Customers c ON s.sale_id = c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT customer_id, customer_name, total_amount FROM Sales s JOIN Customers c ON c.customer_id = s.sale_id WHERE total_amount > 5000 ORDER BY total_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT MAX(total_amount) AS max_amount, MIN(total_amount) AS min_amount FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT AVG(price) AS avg_price FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) AS total_customers FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT SUM(total_amount) AS total_sales_amount FROM Sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT product_name, COUNT(sale_id) AS total_sales FROM Products p JOIN Sales s ON p.product_id = s.sale_id GROUP BY product_name HAVING COUNT(sale_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT customer_name, AVG(price) AS avg_price FROM Customers c JOIN Sales s ON c.customer_id = s.sale_id JOIN Products p ON s.sale_id = p.product_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT product_name, AVG(total_amount) AS avg_sale_amount FROM Products p JOIN Sales s ON p.product_id = s.sale_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT DISTINCT customer_name FROM Customers WHERE customer_id IN (SELECT sale_id FROM Sales WHERE total_amount > 2000);",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT customer_name, SUM(price) AS total_spent FROM Customers c JOIN Sales s ON c.customer_id = s.sale_id JOIN Products p ON s.sale_id = p.product_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT customer_name, total_amount FROM Customers LEFT JOIN Sales ON Customers.customer_id = Sales.sale_id WHERE Sales.total_amount IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT product_name, COUNT(DISTINCT customer_id) AS unique_customers FROM Products p JOIN Sales s ON p.product_id = s.sale_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT product_name, MAX(price) AS max_price, MIN(price) AS min_price FROM Products GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT customer_name, total_amount FROM Customers c JOIN Sales s ON c.customer_id = s.sale_id WHERE sale_date = '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT customer_id, customer_name, total_amount FROM Customers c JOIN Sales s ON c.customer_id = s.sale_id ORDER BY total_amount DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT product_name, price, total_amount FROM Products p JOIN Sales s ON p.product_id = s.sale_id WHERE price > 50 AND total_amount < 5000;",
  "### TABLEDATA\n\nCREATE TABLE Sales (    sale_id INT PRIMARY KEY,    sale_date DATE,    total_amount DECIMAL(10, 2) );\n\nCREATE TABLE Products (    product_id INT PRIMARY KEY,    product_name VARCHAR(50),    price DECIMAL(6, 2) );\n\nCREATE TABLE Customers (    customer_id INT PRIMARY KEY,    customer_name VARCHAR(50),    email VARCHAR(50) );\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_sales FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT * FROM Bar;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT id, bar_name FROM Bar;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT address FROM Bar;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT * FROM Bartender;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT id, bartender_name FROM Bartender;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT years_of_experience FROM Bartender;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT * FROM Drink;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT id, drink_name FROM Drink;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT price FROM Drink;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT * FROM Transaction;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT id, drink_id, bartender_id, sale_date, quantity, total_price FROM Transaction;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT total_price FROM Transaction;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT Bar.bar_name, Transaction.sale_date FROM Bar JOIN Transaction ON Bar.id = Transaction.drink_id;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT Bartender.bartender_name, Transaction.quantity FROM Bartender JOIN Transaction ON Bartender.id = Transaction.bartender_id;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT Drink.drink_name, Transaction.total_price FROM Drink JOIN Transaction ON Drink.id = Transaction.drink_id;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT Bar.bar_name, Transaction.sale_date, Bartender.bartender_name FROM Bar JOIN Transaction ON Bar.id = Transaction.drink_id JOIN Bartender ON Bartender.id = Transaction.bartender_id;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT Bar.bar_name, Transaction.sale_date, Drink.drink_name, Transaction.quantity FROM Bar JOIN Transaction ON Bar.id = Transaction.drink_id JOIN Drink ON Drink.id = Transaction.drink_id;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT Bartender.bartender_name, Transaction.sale_date, Drink.drink_name, Transaction.total_price FROM Bartender JOIN Transaction ON Bartender.id = Transaction.bartender_id JOIN Drink ON Drink.id = Transaction.drink_id;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT Bar.bar_name, Bartender.bartender_name FROM Bar, Bartender WHERE Bar.id = Bartender.id;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT Drink.drink_name, Transaction.sale_date, Bartender.bartender_name FROM Drink, Bartender, Transaction WHERE Drink.id = Transaction.drink_id AND Bartender.id = Transaction.bartender_id;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT * FROM Bar WHERE address LIKE '%Street%'",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT bartender_name, years_of_experience FROM Bartender WHERE years_of_experience > 5",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT drink_name, price FROM Drink ORDER BY price DESC",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT * FROM Transaction WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT bar_name, address, bartender_name FROM Bar INNER JOIN Bartender ON Bar.id = Bartender.id",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT drink_name, quantity, total_price FROM Drink INNER JOIN Transaction ON Drink.id = Transaction.drink_id",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT * FROM Bar WHERE id IN (SELECT bartender_id FROM Transaction)",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT bartender_name FROM Bartender",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Drink",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT AVG(price) FROM Drink",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) FROM Transaction",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT MAX(total_price) FROM Transaction",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT MIN(years_of_experience) FROM Bartender",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT bar_name, SUM(quantity) AS total_quantity FROM Bar INNER JOIN Transaction ON Bar.id = Transaction.bartender_id GROUP BY bar_name ORDER BY total_quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT bartender_name, COUNT(*) AS transaction_count FROM Bartender INNER JOIN Transaction ON Bartender.id = Transaction.bartender_id GROUP BY bartender_name",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT bar_name, COUNT(*) AS total_transactions FROM Bar INNER JOIN Transaction ON Bar.id = Transaction.bartender_id GROUP BY bar_name HAVING COUNT(*) > 10",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT bartender_name, SUM(total_price) AS total_sales FROM Bartender INNER JOIN Transaction ON Bartender.id = Transaction.bartender_id GROUP BY bartender_name ORDER BY total_sales DESC",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT * FROM Bar WHERE address LIKE '%Avenue%' OR address LIKE '%Road%'",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT drink_name, AVG(price) AS avg_price FROM Drink GROUP BY drink_name HAVING AVG(price) > 5",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    id INT PRIMARY KEY,\n    bar_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Bartender (\n    id INT PRIMARY KEY,\n    bartender_name VARCHAR(255) NOT NULL,\n    years_of_experience INT\n);\n\nCREATE TABLE Drink (\n    id INT PRIMARY KEY,\n    drink_name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Transaction (\n    id INT PRIMARY KEY,\n    drink_id INT,\n    bartender_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (drink_id) REFERENCES Drink(id),\n    FOREIGN KEY (bartender_id) REFERENCES Bartender(id)\n);\n\n### STATEMENT\n\nSELECT bartender_name, SUM(total_price) AS total_revenue FROM Bartender INNER JOIN Transaction ON Bartender.id = Transaction.bartender_id GROUP BY bartender_name HAVING SUM(total_price) > 1000",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Bar;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT name, location FROM Bar;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT bar_id, name FROM Bar;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT name FROM Bar;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Employee;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT name, position FROM Employee;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, position FROM Employee;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT name, price FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, category FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Sale;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, sale_date FROM Sale;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT sale_id, quantity FROM Sale;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Revenue;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT sale_id, revenue_amount FROM Revenue;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT revenue_id, revenue_date FROM Revenue;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT name, price FROM Product WHERE category='Electronics';",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT name, hire_date FROM Employee WHERE position='Manager';",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT bar_id, location FROM Bar WHERE name='ABC Bar';",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT sale_id, product_id, employee_id FROM Sale WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Bar;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT name, location FROM Bar WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT name, position FROM Employee WHERE hire_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT name, price FROM Product WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT name, price, category FROM Product WHERE price > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT name, sale_date, quantity FROM Sale WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT name, revenue_amount FROM Revenue WHERE revenue_date >= '2021-06-01';",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT Employee.name, Product.name, Sale.sale_date FROM Employee JOIN Sale ON Employee.employee_id = Sale.employee_id JOIN Product ON Sale.product_id = Product.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT Product.name, Sale.quantity, Revenue.revenue_amount FROM Product JOIN Sale ON Product.product_id = Sale.product_id JOIN Revenue ON Sale.sale_id = Revenue.sale_id WHERE Sale.quantity >= 5 AND Revenue.revenue_amount >= 100;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT Bar.name AS bar_name, Employee.name AS employee_name, Sale.sale_date FROM Bar JOIN Employee ON Bar.bar_id = Employee.employee_id JOIN Sale ON Employee.employee_id = Sale.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT Product.name, SUM(Sale.quantity) AS total_quantity_sold FROM Product JOIN Sale ON Product.product_id = Sale.product_id GROUP BY Product.name ORDER BY total_quantity_sold DESC;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT Employee.name, COUNT(Sale.sale_id) AS total_sales FROM Employee JOIN Sale ON Employee.employee_id = Sale.employee_id GROUP BY Employee.name ORDER BY total_sales DESC;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT Product.category, AVG(Revenue.revenue_amount) AS average_revenue FROM Product JOIN Sale ON Product.product_id = Sale.product_id JOIN Revenue ON Sale.sale_id = Revenue.sale_id GROUP BY Product.category;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT name, hire_date, position FROM Employee WHERE hire_date > '2020-01-01' AND position = 'Manager';",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT Employee.name, ROUND(SUM(Revenue.revenue_amount), 2) AS total_revenue FROM Employee JOIN Sale ON Employee.employee_id = Sale.employee_id JOIN Revenue ON Sale.sale_id = Revenue.sale_id GROUP BY Employee.name;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT Bar.name, Employee.position, AVG(Sale.quantity) AS average_quantity FROM Bar JOIN Employee ON Bar.bar_id = Employee.employee_id JOIN Sale ON Employee.employee_id = Sale.employee_id GROUP BY Bar.name, Employee.position;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT Sale.sale_date, SUM(Revenue.revenue_amount) AS total_revenue FROM Sale JOIN Revenue ON Sale.sale_id = Revenue.sale_id GROUP BY Sale.sale_date ORDER BY total_revenue DESC;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT name, price, category, revenue_amount FROM Product JOIN Sale ON Product.product_id = Sale.product_id JOIN Revenue ON Sale.sale_id = Revenue.sale_id;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT Bar.name, Employee.name, Product.name, Sale.quantity, Revenue.revenue_amount FROM Bar JOIN Employee JOIN Product JOIN Sale JOIN Revenue ON Bar.bar_id = Employee.employee_id AND Employee.employee_id = Sale.employee_id AND Sale.product_id = Product.product_id AND Sale.sale_id = Revenue.sale_id;",
  "### TABLEDATA\n\nCREATE TABLE Bar (\n    bar_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE Employee (\n    employee_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    position VARCHAR(255),\n    hire_date DATE\n);\n\nCREATE TABLE Product (\n    product_id UUID PRIMARY KEY,\n    name VARCHAR(255),\n    price DECIMAL(10, 2),\n    category VARCHAR(255)\n);\n\nCREATE TABLE Sale (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    employee_id UUID,\n    sale_date DATE,\n    quantity INT\n);\n\nCREATE TABLE Revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID,\n    revenue_amount DECIMAL(10, 2),\n    revenue_date DATE\n);\n\n### STATEMENT\n\nSELECT Bar.name AS bar_name, AVG(Sale.quantity) AS average_quantity_sold FROM Bar JOIN Sale ON Bar.bar_id = Sale.bar_id GROUP BY Bar.name ORDER BY average_quantity_sold DESC;"
]