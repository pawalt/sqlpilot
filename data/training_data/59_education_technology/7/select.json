[
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT * FROM participation_tracking",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, discussion_participation FROM participation_tracking",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, quiz_score FROM participation_tracking",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, project_completion FROM participation_tracking",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT AVG(discussion_participation) FROM participation_tracking",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT MAX(quiz_score) FROM participation_tracking",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT MIN(project_completion) FROM participation_tracking",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, discussion_participation, quiz_score FROM participation_tracking",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT AVG(discussion_participation), MAX(quiz_score) FROM participation_tracking",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, project_completion, AVG(discussion_participation) FROM participation_tracking",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT * FROM participation_tracking WHERE student_id = 1",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT * FROM participation_tracking WHERE quiz_score > 80",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT * FROM participation_tracking WHERE project_completion < 50",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT * FROM participation_tracking WHERE discussion_participation BETWEEN 30 AND 70",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, SUM(quiz_score) FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) FROM participation_tracking WHERE project_completion = 100 GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT MIN(discussion_participation), MAX(quiz_score) FROM participation_tracking",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT AVG(project_completion) FROM participation_tracking",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, AVG(discussion_participation), AVG(quiz_score) FROM participation_tracking",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, AVG(discussion_participation) AS avg_participation FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, SUM(quiz_score) AS total_quiz_score FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, MAX(project_completion) AS highest_project_completion FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) AS total_records FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, SUM(discussion_participation) AS total_participation FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, AVG(quiz_score) AS avg_quiz_score FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, MIN(project_completion) AS lowest_project_completion FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(DISTINCT quiz_score) AS unique_quiz_scores FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, AVG(project_completion) AS avg_project_completion FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, SUM(project_completion) AS total_project_completion FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, MAX(discussion_participation) AS highest_participation FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, MIN(quiz_score) AS lowest_quiz_score FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) AS total_records FROM participation_tracking",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, AVG(discussion_participation * quiz_score) AS avg_participation_quiz FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, SUM(discussion_participation * project_completion) AS total_participation_project FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, SUM(quiz_score * project_completion) AS total_quiz_project FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(DISTINCT discussion_participation) AS unique_participation FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, AVG(quiz_score + project_completion) AS avg_quiz_project FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, MAX(discussion_participation + quiz_score) AS highest_participation_quiz FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE participation_tracking ( \n    student_id INT, \n    discussion_participation INT, \n    quiz_score INT, \n    project_completion INT \n);\n\n### STATEMENT\n\nSELECT student_id, MIN(quiz_score - project_completion) AS min_quiz_project_diff FROM participation_tracking GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT student_name, class_id FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT * FROM participation;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT discussion_participation, quiz_score FROM participation;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM students WHERE class_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT student_name, discussion_participation FROM students JOIN participation ON students.student_id = participation.student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT student_id, quiz_score FROM students JOIN participation ON students.student_id = participation.student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT student_id, project_involvement FROM participation WHERE quiz_score > 80;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT student_name, class_id FROM students WHERE student_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT * FROM students ORDER BY student_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT * FROM students ORDER BY student_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT * FROM students LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT AVG(quiz_score) FROM participation;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT MAX(discussion_participation) FROM participation;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT student_id, MAX(quiz_score) FROM participation GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) AS participation_count FROM participation GROUP BY student_id HAVING participation_count > 2;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT AVG(quiz_score) AS avg_score, MAX(quiz_score) AS max_score FROM participation GROUP BY student_id HAVING avg_score > 70;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT * FROM students JOIN participation ON students.student_id = participation.student_id WHERE students.class_id = 1",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT student_name, discussion_participation, quiz_score FROM students JOIN participation ON students.student_id = participation.student_id WHERE students.student_id = 5",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT AVG(quiz_score) AS average_quiz_score FROM participation",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT MAX(project_involvement) AS max_project_involvement FROM participation",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT student_name, discussion_participation FROM students JOIN participation ON students.student_id = participation.student_id WHERE participation.project_involvement > 80",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(student_id) AS total_students FROM students",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT student_name, participation_id, discussion_participation, quiz_score FROM students JOIN participation ON students.student_id = participation.student_id WHERE students.class_id = 2",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id = (SELECT MAX(student_id) FROM students)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT student_name, SUM(quiz_score) AS total_quiz_score FROM students JOIN participation ON students.student_id = participation.student_id GROUP BY students.student_id",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT,\n    student_name VARCHAR(255),\n    class_id INT,\n    PRIMARY KEY (student_id)\n);\n\nCREATE TABLE participation (\n    participation_id INT,\n    student_id INT,\n    discussion_participation INT,\n    quiz_score INT,\n    project_involvement INT,\n    PRIMARY KEY (participation_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nSELECT student_name, AVG(discussion_participation) AS average_discussion_participation FROM students JOIN participation ON students.student_id = participation.student_id GROUP BY students.student_id",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM discussions;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT discussion_id, discussion_topic FROM discussions WHERE participation_count > 10;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM quizzes;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT quiz_topic, total_score FROM quizzes WHERE student_id = 'abc123';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT project_title FROM collaborative_projects WHERE submission_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT project_id, student_id FROM collaborative_projects;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT discussion_id, discussion_topic, participation_count FROM discussions WHERE discussion_topic LIKE '%database%';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM quizzes WHERE total_score > 80;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM collaborative_projects WHERE student_id = 'def456';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT SUM(participation_count) FROM discussions;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(total_score) FROM quizzes;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(participation_count) AS max_participation_count FROM discussions;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(total_score) AS min_total_score FROM quizzes;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM collaborative_projects;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(total_score) AS avg_score, MAX(total_score) AS max_score FROM quizzes WHERE quiz_topic LIKE '%math%';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT discussion_id, student_id, discussion_topic FROM discussions WHERE student_id = 'ghi789';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(participation_count) AS avg_participation_count FROM discussions;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM collaborative_projects WHERE project_id = 'xyz321';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT project_title FROM collaborative_projects WHERE project_title LIKE '%AI%';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT project_id, submission_date FROM collaborative_projects WHERE student_id = 'stu789';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM discussions WHERE student_id = '123e4567-e89b-12d3-a456-426614174000' LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT discussion_id, discussion_topic FROM discussions WHERE participation_count > 50;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT quiz_topic, total_score FROM quizzes WHERE student_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT project_id, project_title FROM collaborative_projects WHERE submission_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT discussion_topic, participation_count FROM discussions WHERE student_id = '123e4567-e89b-12d3-a456-426614174003' AND participation_count > 20;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM quizzes WHERE total_score >= 80 AND student_id = '123e4567-e89b-12d3-a456-426614174004';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT discussion_id, discussion_topic FROM discussions WHERE student_id = '123e4567-e89b-12d3-a456-426614174005' AND participation_count > 30 ORDER BY participation_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT quiz_topic, total_score FROM quizzes WHERE student_id = '123e4567-e89b-12d3-a456-426614174006' AND total_score <= 60;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT project_id, project_title FROM collaborative_projects WHERE student_id = '123e4567-e89b-12d3-a456-426614174007' AND submission_date < '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM discussions WHERE participation_count < 10 OR student_id = '123e4567-e89b-12d3-a456-426614174008';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT discussion_id, discussion_topic FROM discussions WHERE student_id = '123e4567-e89b-12d3-a456-426614174009' AND participation_count BETWEEN 20 AND 50;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT quiz_topic, total_score FROM quizzes WHERE student_id = '123e4567-e89b-12d3-a456-426614174010' AND total_score IN (70, 80, 90);",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT project_id, project_title FROM collaborative_projects WHERE submission_date BETWEEN '2022-02-01' AND '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT discussion_topic, participation_count FROM discussions WHERE student_id = '123e4567-e89b-12d3-a456-426614174011' AND participation_count >= 40 AND participation_count < 60;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM quizzes WHERE total_score > 75 OR student_id = '123e4567-e89b-12d3-a456-426614174012';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT discussion_id, discussion_topic FROM discussions WHERE student_id = '123e4567-e89b-12d3-a456-426614174013' AND participation_count < 30 ORDER BY participation_count ASC;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT quiz_topic, total_score FROM quizzes WHERE student_id = '123e4567-e89b-12d3-a456-426614174014' AND total_score >= 50 AND total_score <= 70;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT project_id, project_title FROM collaborative_projects WHERE student_id = '123e4567-e89b-12d3-a456-426614174015' AND submission_date > '2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM discussions WHERE participation_count BETWEEN 10 AND 30 OR student_id = '123e4567-e89b-12d3-a456-426614174016';",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT discussion_id, discussion_topic FROM discussions WHERE student_id = '123e4567-e89b-12d3-a456-426614174017' AND participation_count > 70;",
  "### TABLEDATA\n\nCREATE TABLE discussions (\n    discussion_id UUID PRIMARY KEY,\n    student_id UUID,\n    discussion_topic TEXT,\n    participation_count INT\n);\n\nCREATE TABLE quizzes (\n    quiz_id UUID PRIMARY KEY,\n    student_id UUID,\n    quiz_topic TEXT,\n    total_score INT\n);\n\nCREATE TABLE collaborative_projects (\n    project_id UUID PRIMARY KEY,\n    student_id UUID,\n    project_title TEXT,\n    submission_date DATE\n);\n\n### STATEMENT\n\nSELECT quiz_topic, total_score FROM quizzes WHERE student_id = '123e4567-e89b-12d3-a456-426614174018' AND total_score < 50;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM Participants;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name FROM Participants WHERE participation_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Participants;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM Discussions;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT discussion_topic, discussion_date FROM Discussions WHERE discussion_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM Quizzes;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT quiz_topic, quiz_date FROM Quizzes WHERE quiz_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT project_id, project_topic FROM Projects WHERE project_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT DISTINCT participant_name FROM Participants;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT discussion_topic, discussion_date FROM Discussions ORDER BY discussion_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT quiz_topic, quiz_date FROM Quizzes ORDER BY quiz_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT project_topic, project_status FROM Projects WHERE project_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT participant_name, participation_status FROM Participants WHERE participation_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT participant_name AS Name, participation_status AS Status FROM Participants;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT project_topic, 'Project' AS Category FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT quiz_topic, 'Quiz' AS Category FROM Quizzes;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT discussion_topic, 'Discussion' AS Category FROM Discussions;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT participant_name, 'Participant' AS Category FROM Participants;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM Participants WHERE participation_status = true;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name FROM Participants WHERE participation_status = false;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT DISTINCT discussion_topic FROM Discussions;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT project_topic, project_status FROM Projects WHERE project_status = true;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT participant_name, discussion_topic FROM Participants JOIN Discussions ON Participants.participant_id = Discussions.discussion_id;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT quiz_id, quiz_topic, quiz_date FROM Quizzes WHERE quiz_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM Participants WHERE participant_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Participants;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT MAX(participant_id) AS max_id FROM Participants;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT MIN(discussion_date) AS earliest_date FROM Discussions;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT AVG(quiz_id) AS avg_quiz_id FROM Quizzes;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT participant_name, project_topic FROM Participants JOIN Projects ON Participants.participant_id = Projects.project_id WHERE project_status = true;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_discussions FROM Discussions;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT AVG(discussion_id) AS avg_discussion_id FROM Discussions;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT project_topic, COUNT(*) AS total_participants FROM Projects JOIN Participants ON Projects.project_id = Participants.participant_id GROUP BY project_topic;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT MAX(quiz_date) AS latest_quiz_date FROM Quizzes;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT participant_name, discussion_topic, quiz_topic FROM Participants JOIN Discussions ON Participants.participant_id = Discussions.participant_id JOIN Quizzes ON Participants.participant_id = Quizzes.quiz_id;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT project_id, project_topic FROM Projects WHERE project_status = false;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_projects, project_status FROM Projects GROUP BY project_status;",
  "### TABLEDATA\n\nCREATE TABLE Participants (\n    participant_id INT PRIMARY KEY,\n    participant_name TEXT,\n    participation_status BOOLEAN\n);\n\n\nCREATE TABLE Discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic TEXT,\n    discussion_date DATE\n);\n\n\nCREATE TABLE Quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic TEXT,\n    quiz_date DATE\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_topic TEXT,\n    project_status BOOLEAN\n);\n\n### STATEMENT\n\nSELECT project_id, project_topic FROM Projects WHERE project_status = true ORDER BY project_id DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM discussions;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT discussion_topic, discussion_date FROM discussions WHERE discussion_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM quizzes;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT quiz_topic, total_marks FROM quizzes WHERE quiz_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM projects;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT project_name, project_deadline FROM projects WHERE project_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM participation;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_id, activity_type FROM participation WHERE participation_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, discussion_topic, discussion_date FROM students JOIN discussions ON students.student_id = discussions.discussion_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, quiz_topic, total_marks FROM students JOIN quizzes ON students.student_id = quizzes.quiz_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, project_name, project_deadline FROM students JOIN projects ON students.student_id = projects.project_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, activity_type FROM students JOIN participation ON students.student_id = participation.student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, discussion_topic, quiz_topic, project_name FROM students JOIN discussions ON students.student_id = discussions.discussion_id JOIN quizzes ON students.student_id = quizzes.quiz_id JOIN projects ON students.student_id = projects.project_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, discussion_topic, quiz_topic, project_name, activity_type FROM students JOIN discussions ON students.student_id = discussions.discussion_id JOIN quizzes ON students.student_id = quizzes.quiz_id JOIN projects ON students.student_id = projects.project_id JOIN participation ON students.student_id = participation.student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, discussion_topic, quiz_topic, project_name, activity_type FROM students LEFT JOIN discussions ON students.student_id = discussions.discussion_id LEFT JOIN quizzes ON students.student_id = quizzes.quiz_id LEFT JOIN projects ON students.student_id = projects.project_id LEFT JOIN participation ON students.student_id = participation.student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, discussion_topic, quiz_topic, project_name, activity_type FROM students RIGHT JOIN discussions ON students.student_id = discussions.discussion_id RIGHT JOIN quizzes ON students.student_id = quizzes.quiz_id RIGHT JOIN projects ON students.student_id = projects.project_id RIGHT JOIN participation ON students.student_id = participation.student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, discussion_topic, discussion_date FROM students JOIN participation ON students.student_id = participation.student_id JOIN discussions ON participation.activity_id = discussions.discussion_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, quiz_topic, total_marks FROM students JOIN participation ON students.student_id = participation.student_id JOIN quizzes ON participation.activity_id = quizzes.quiz_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, project_name, project_deadline FROM students JOIN participation ON students.student_id = participation.student_id JOIN projects ON participation.activity_id = projects.project_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, activity_type FROM students JOIN participation ON students.student_id = participation.student_id WHERE activity_type = 'quiz';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, project_name FROM students JOIN participation ON students.student_id = participation.student_id JOIN projects ON participation.activity_id = projects.project_id WHERE activity_type = 'project';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT MAX(total_marks) AS highest_marks FROM quizzes;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT AVG(total_marks) AS average_marks FROM quizzes;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_discussions FROM discussions;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, COUNT(activity_id) AS total_activities FROM students JOIN participation ON students.student_id = participation.student_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, project_name, DATEDIFF(project_deadline, CURDATE()) AS days_left FROM students JOIN participation ON students.student_id = participation.student_id JOIN projects ON participation.activity_id = projects.project_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, AVG(total_marks) AS average_marks FROM students JOIN participation ON students.student_id = participation.student_id JOIN quizzes ON participation.activity_id = quizzes.quiz_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_participations, activity_type FROM participation GROUP BY activity_type;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, project_name, project_deadline, DATEDIFF(project_deadline, CURDATE()) AS days_left FROM students JOIN participation ON students.student_id = participation.student_id JOIN projects ON participation.activity_id = projects.project_id ORDER BY days_left ASC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, quiz_topic, total_marks FROM students JOIN participation ON students.student_id = participation.student_id JOIN quizzes ON participation.activity_id = quizzes.quiz_id WHERE total_marks > 80;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, project_name, project_deadline FROM students JOIN participation ON students.student_id = participation.student_id JOIN projects ON participation.activity_id = projects.project_id WHERE project_deadline BETWEEN '2021-10-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, project_name, project_deadline, DATEDIFF(project_deadline, CURDATE()) AS days_left FROM students JOIN participation ON students.student_id = participation.student_id JOIN projects ON participation.activity_id = projects.project_id WHERE DATEDIFF(project_deadline, CURDATE()) <= 7;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, MAX(total_marks) AS highest_marks FROM students JOIN participation ON students.student_id = participation.student_id JOIN quizzes ON participation.activity_id = quizzes.quiz_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE discussions (\n    discussion_id INT PRIMARY KEY,\n    discussion_topic VARCHAR(100) NOT NULL,\n    discussion_date DATE\n);\n\n\nCREATE TABLE quizzes (\n    quiz_id INT PRIMARY KEY,\n    quiz_topic VARCHAR(100) NOT NULL,\n    total_marks DECIMAL\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    project_deadline DATE\n);\n\n\nCREATE TABLE participation (\n    participation_id INT PRIMARY KEY,\n    student_id INT,\n    activity_type VARCHAR(20) NOT NULL,\n    activity_id INT\n);\n\n### STATEMENT\n\nSELECT student_name, project_name, project_deadline FROM students JOIN participation ON students.student_id = participation.student_id JOIN projects ON participation.activity_id = projects.project_id WHERE project_deadline > CURDATE();"
]