[
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (1, 'Alice', 101, 90, 'Great student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice', class_id = 101, grade = 90, feedback = 'Great student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (2, 'Bob', 102, 85, 'Good student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Bob', class_id = 102, grade = 85, feedback = 'Good student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (3, 'Charlie', 103, 95, 'Excellent student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Charlie', class_id = 103, grade = 95, feedback = 'Excellent student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (4, 'David', 104, 80, 'Hardworking student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'David', class_id = 104, grade = 80, feedback = 'Hardworking student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (5, 'Eve', 105, 88, 'Dedicated student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Eve', class_id = 105, grade = 88, feedback = 'Dedicated student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (6, 'Frank', 106, 92, 'Motivated student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Frank', class_id = 106, grade = 92, feedback = 'Motivated student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (7, 'Grace', 107, 87, 'Passionate student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Grace', class_id = 107, grade = 87, feedback = 'Passionate student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (8, 'Henry', 108, 78, 'Responsible student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Henry', class_id = 108, grade = 78, feedback = 'Responsible student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (9, 'Ivy', 109, 94, 'Talented student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Ivy', class_id = 109, grade = 94, feedback = 'Talented student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (10, 'Jack', 110, 83, 'Creative student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Jack', class_id = 110, grade = 83, feedback = 'Creative student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (11, 'Karen', 111, 96, 'Intelligent student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Karen', class_id = 111, grade = 96, feedback = 'Intelligent student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (12, 'Leo', 112, 85, 'Analytical student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Leo', class_id = 112, grade = 85, feedback = 'Analytical student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (13, 'Mia', 113, 90, 'Observant student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Mia', class_id = 113, grade = 90, feedback = 'Observant student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (14, 'Nathan', 114, 82, 'Persevering student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Nathan', class_id = 114, grade = 82, feedback = 'Persevering student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (15, 'Olivia', 115, 88, 'Team player student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Olivia', class_id = 115, grade = 88, feedback = 'Team player student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (16, 'Peter', 116, 93, 'Resourceful student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Peter', class_id = 116, grade = 93, feedback = 'Resourceful student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (17, 'Queenie', 117, 86, 'Innovative student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Queenie', class_id = 117, grade = 86, feedback = 'Innovative student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (18, 'Robert', 118, 77, 'Goal-oriented student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Robert', class_id = 118, grade = 77, feedback = 'Goal-oriented student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (19, 'Sophia', 119, 95, 'Leadership student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Sophia', class_id = 119, grade = 95, feedback = 'Leadership student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (20, 'Tom', 120, 84, 'Communicative student!') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Tom', class_id = 120, grade = 84, feedback = 'Communicative student!';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (1, 'Alice', 101, 90, 'Great student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice', class_id = 101, grade = 90, feedback = 'Great student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (2, 'Bob', 102, 85, 'Good student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Bob', class_id = 102, grade = 85, feedback = 'Good student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (3, 'Charlie', 103, 80, 'Average student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Charlie', class_id = 103, grade = 80, feedback = 'Average student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (4, 'David', 104, 75, 'Needs improvement') ON CONFLICT (student_id) DO UPDATE SET student_name = 'David', class_id = 104, grade = 75, feedback = 'Needs improvement';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (5, 'Eve', 105, 95, 'Excellent student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Eve', class_id = 105, grade = 95, feedback = 'Excellent student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (6, 'Frank', 106, 88, 'Hardworking student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Frank', class_id = 106, grade = 88, feedback = 'Hardworking student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (7, 'Grace', 107, 92, 'Top performer') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Grace', class_id = 107, grade = 92, feedback = 'Top performer';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (8, 'Henry', 108, 78, 'Improving student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Henry', class_id = 108, grade = 78, feedback = 'Improving student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (9, 'Ivy', 109, 87, 'Dedicated student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Ivy', class_id = 109, grade = 87, feedback = 'Dedicated student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (10, 'Jack', 110, 83, 'Consistent student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Jack', class_id = 110, grade = 83, feedback = 'Consistent student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (11, 'Kate', 111, 89, 'Interactive student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Kate', class_id = 111, grade = 89, feedback = 'Interactive student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (12, 'Leo', 112, 94, 'Talented student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Leo', class_id = 112, grade = 94, feedback = 'Talented student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (13, 'Mia', 113, 82, 'Adaptable student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Mia', class_id = 113, grade = 82, feedback = 'Adaptable student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (14, 'Nathan', 114, 86, 'Resourceful student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Nathan', class_id = 114, grade = 86, feedback = 'Resourceful student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (15, 'Olivia', 115, 91, 'Inspiring student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Olivia', class_id = 115, grade = 91, feedback = 'Inspiring student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (16, 'Peter', 116, 79, 'Creative student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Peter', class_id = 116, grade = 79, feedback = 'Creative student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (17, 'Quinn', 117, 84, 'Analytical student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Quinn', class_id = 117, grade = 84, feedback = 'Analytical student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (18, 'Rachel', 118, 75, 'Detail-oriented student') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Rachel', class_id = 118, grade = 75, feedback = 'Detail-oriented student';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (19, 'Sam', 119, 88, 'Team player') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Sam', class_id = 119, grade = 88, feedback = 'Team player';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    class_id INT,\n    grade INT,\n    feedback TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, class_id, grade, feedback) VALUES (20, 'Tom', 120, 90, 'Leadership qualities') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Tom', class_id = 120, grade = 90, feedback = 'Leadership qualities';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (1, 'Alice', 'alice@example.com', 85) ON DUPLICATE KEY UPDATE name='Alice', email='alice@example.com', grade=85;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (2, 'Bob', 'bob@example.com', 75) ON DUPLICATE KEY UPDATE name='Bob', email='bob@example.com', grade=75;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (3, 'Charlie', 'charlie@example.com', 90) ON DUPLICATE KEY UPDATE name='Charlie', email='charlie@example.com', grade=90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (4, 'David', 'david@example.com', 80) ON DUPLICATE KEY UPDATE name='David', email='david@example.com', grade=80;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (5, 'Eve', 'eve@example.com', 95) ON DUPLICATE KEY UPDATE name='Eve', email='eve@example.com', grade=95;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (6, 'Frank', 'frank@example.com', 88.5) ON DUPLICATE KEY UPDATE name='Frank', email='frank@example.com', grade=88.5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (7, 'Grace', 'grace@example.com', 78.7) ON DUPLICATE KEY UPDATE name='Grace', email='grace@example.com', grade=78.7;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (8, 'Harry', 'harry@example.com', 92.3) ON DUPLICATE KEY UPDATE name='Harry', email='harry@example.com', grade=92.3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (9, 'Ivy', 'ivy@example.com', 87.2) ON DUPLICATE KEY UPDATE name='Ivy', email='ivy@example.com', grade=87.2;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (10, 'Jack', 'jack@example.com', 79.4) ON DUPLICATE KEY UPDATE name='Jack', email='jack@example.com', grade=79.4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (11, 'Kevin', 'kevin@example.com', 83.6) ON DUPLICATE KEY UPDATE name='Kevin', email='kevin@example.com', grade=83.6;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (12, 'Lucy', 'lucy@example.com', 91.8) ON DUPLICATE KEY UPDATE name='Lucy', email='lucy@example.com', grade=91.8;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (13, 'Mike', 'mike@example.com', 86.1) ON DUPLICATE KEY UPDATE name='Mike', email='mike@example.com', grade=86.1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (14, 'Nancy', 'nancy@example.com', 82.9) ON DUPLICATE KEY UPDATE name='Nancy', email='nancy@example.com', grade=82.9;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (15, 'Olivia', 'olivia@example.com', 77.3) ON DUPLICATE KEY UPDATE name='Olivia', email='olivia@example.com', grade=77.3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (16, 'Peter', 'peter@example.com', 89.6) ON DUPLICATE KEY UPDATE name='Peter', email='peter@example.com', grade=89.6;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (17, 'Queenie', 'queenie@example.com', 81.2) ON DUPLICATE KEY UPDATE name='Queenie', email='queenie@example.com', grade=81.2;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (18, 'Ryan', 'ryan@example.com', 88.3) ON DUPLICATE KEY UPDATE name='Ryan', email='ryan@example.com', grade=88.3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (19, 'Stella', 'stella@example.com', 79.8) ON DUPLICATE KEY UPDATE name='Stella', email='stella@example.com', grade=79.8;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (20, 'Tom', 'tom@example.com', 84.7) ON DUPLICATE KEY UPDATE name='Tom', email='tom@example.com', grade=84.7;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (1, 'Alice', 'alice@example.com', 95.6);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (2, 'Bob', 'bob@example.com', 85.3);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (3, 'Charlie', 'charlie@example.com', 91.8);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (4, 'David', 'david@example.com', 88.5);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (5, 'Eve', 'eve@example.com', 79.1);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (6, 'Frank', 'frank@example.com', 97.2);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (7, 'Grace', 'grace@example.com', 83.4);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (8, 'Hannah', 'hannah@example.com', 94.7);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (9, 'Ian', 'ian@example.com', 89.9);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (10, 'Jane', 'jane@example.com', 85.6);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (11, 'Kevin', 'kevin@example.com', 92.3);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (12, 'Lily', 'lily@example.com', 78.9);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (13, 'Mike', 'mike@example.com', 90.4);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (14, 'Nancy', 'nancy@example.com', 86.7);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (15, 'Oscar', 'oscar@example.com', 83.1);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (16, 'Penny', 'penny@example.com', 95.2);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (17, 'Quinn', 'quinn@example.com', 87.5);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (18, 'Ryan', 'ryan@example.com', 82.8);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (19, 'Sara', 'sara@example.com', 88.3);",
  "### TABLEDATA\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100),\n  grade DECIMAL\n);\n\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  subject VARCHAR(50),\n  score DECIMAL,\n  feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (id, name, email, grade) VALUES (20, 'Tom', 'tom@example.com', 96.1);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (1, 'Alice', '2022-01-10') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice', enrollment_date = '2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (2, 'Bob', '2022-02-15') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Bob', enrollment_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (3, 'Charlie', '2022-03-20') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Charlie', enrollment_date = '2022-03-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (4, 'David', '2022-04-25') ON CONFLICT (student_id) DO UPDATE SET student_name = 'David', enrollment_date = '2022-04-25';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (5, 'Eve', '2022-05-30') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Eve', enrollment_date = '2022-05-30';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (6, 'Frank', '2022-06-05') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Frank', enrollment_date = '2022-06-05';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (7, 'Grace', '2022-07-10') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Grace', enrollment_date = '2022-07-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (8, 'Henry', '2022-08-15') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Henry', enrollment_date = '2022-08-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (9, 'Ivy', '2022-09-20') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Ivy', enrollment_date = '2022-09-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (10, 'Jack', '2022-10-25') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Jack', enrollment_date = '2022-10-25';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (11, 'Kelly', '2022-11-30') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Kelly', enrollment_date = '2022-11-30';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (12, 'Leo', '2022-12-05') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Leo', enrollment_date = '2022-12-05';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (13, 'Mia', '2023-01-10') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Mia', enrollment_date = '2023-01-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (14, 'Noah', '2023-02-15') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Noah', enrollment_date = '2023-02-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (15, 'Olivia', '2023-03-20') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Olivia', enrollment_date = '2023-03-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (16, 'Peter', '2023-04-25') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Peter', enrollment_date = '2023-04-25';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (17, 'Queen', '2023-05-30') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Queen', enrollment_date = '2023-05-30';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (18, 'Ryan', '2023-06-05') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Ryan', enrollment_date = '2023-06-05';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (19, 'Sara', '2023-07-10') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Sara', enrollment_date = '2023-07-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (20, 'Tom', '2023-08-15') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Tom', enrollment_date = '2023-08-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (1, 'Alice', '2021-09-01') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, course_description) VALUES (1, 'Mathematics', 'John Doe', 'Advanced Math Course') ON CONFLICT (course_id) DO UPDATE SET course_name = EXCLUDED.course_name, instructor = EXCLUDED.instructor, course_description = EXCLUDED.course_description;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, feedback) VALUES (1, 1, 1, 92.5, 'Great job!') ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, course_id = EXCLUDED.course_id, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (2, 'Bob', '2021-09-05') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, course_description) VALUES (2, 'History', 'Jane Smith', 'World History Course') ON CONFLICT (course_id) DO UPDATE SET course_name = EXCLUDED.course_name, instructor = EXCLUDED.instructor, course_description = EXCLUDED.course_description;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, feedback) VALUES (2, 2, 2, 85.7, 'Good work!') ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, course_id = EXCLUDED.course_id, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (3, 'Charlie', '2021-09-10') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, course_description) VALUES (3, 'Science', 'Sarah Johnson', 'Biology Course') ON CONFLICT (course_id) DO UPDATE SET course_name = EXCLUDED.course_name, instructor = EXCLUDED.instructor, course_description = EXCLUDED.course_description;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, feedback) VALUES (3, 3, 3, 78.9, 'Needs improvement') ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, course_id = EXCLUDED.course_id, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (4, 'David', '2021-09-15') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, course_description) VALUES (4, 'English', 'Michael Adams', 'Literature Course') ON CONFLICT (course_id) DO UPDATE SET course_name = EXCLUDED.course_name, instructor = EXCLUDED.instructor, course_description = EXCLUDED.course_description;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, feedback) VALUES (4, 4, 4, 90.3, 'Excellent performance!') ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, course_id = EXCLUDED.course_id, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (5, 'Eva', '2021-09-20') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, course_description) VALUES (5, 'Computer Science', 'Peter Brown', 'Programming Course') ON CONFLICT (course_id) DO UPDATE SET course_name = EXCLUDED.course_name, instructor = EXCLUDED.instructor, course_description = EXCLUDED.course_description;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, feedback) VALUES (5, 5, 5, 88.0, 'Well done!') ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, course_id = EXCLUDED.course_id, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (6, 'Fiona', '2021-09-25') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, course_description) VALUES (6, 'Art', 'Emily Wilson', 'Painting and Drawing Course') ON CONFLICT (course_id) DO UPDATE SET course_name = EXCLUDED.course_name, instructor = EXCLUDED.instructor, course_description = EXCLUDED.course_description;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, feedback) VALUES (6, 6, 6, 75.5, 'Keep practicing!') ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, course_id = EXCLUDED.course_id, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (7, 'George', '2021-09-30') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, course_description) VALUES (7, 'Music', 'Olivia Clark', 'Music Theory Course') ON CONFLICT (course_id) DO UPDATE SET course_name = EXCLUDED.course_name, instructor = EXCLUDED.instructor, course_description = EXCLUDED.course_description;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, feedback) VALUES (7, 7, 7, 82.4, 'Good effort!') ON CONFLICT (grade_id) DO UPDATE SET student_id = EXCLUDED.student_id, course_id = EXCLUDED.course_id, grade = EXCLUDED.grade, feedback = EXCLUDED.feedback;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, enrollment_date) VALUES (8, 'Hannah', '2021-10-05') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  enrollment_date DATE\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  instructor VARCHAR(50) NOT NULL,\n  course_description TEXT\n);\n\n\nCREATE TABLE Grades (\n  grade_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  grade DECIMAL(5,2),\n  feedback TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students(student_id),\n  FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, course_description) VALUES (8, 'Physics', 'Robert Smith', 'Physics Course') ON CONFLICT (course_id) DO UPDATE SET course_name = EXCLUDED.course_name, instructor = EXCLUDED.instructor, course_description = EXCLUDED.course_description;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email, enrollment_date) VALUES (1, 'John Doe', 'john.doe@example.com', '2022-01-01') ON DUPLICATE KEY UPDATE student_name = 'John Doe', student_email = 'john.doe@example.com', enrollment_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email, enrollment_date) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '2022-01-15') ON DUPLICATE KEY UPDATE student_name = 'Jane Smith', student_email = 'jane.smith@example.com', enrollment_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email, enrollment_date) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '2022-02-01') ON DUPLICATE KEY UPDATE student_name = 'Alice Johnson', student_email = 'alice.johnson@example.com', enrollment_date = '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email, enrollment_date) VALUES (4, 'Bob Brown', 'bob.brown@example.com', '2022-02-15') ON DUPLICATE KEY UPDATE student_name = 'Bob Brown', student_email = 'bob.brown@example.com', enrollment_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email, enrollment_date) VALUES (5, 'Eve Wilson', 'eve.wilson@example.com', '2022-03-01') ON DUPLICATE KEY UPDATE student_name = 'Eve Wilson', student_email = 'eve.wilson@example.com', enrollment_date = '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description) VALUES (1, 'Mathematics', 'Basic math concepts') ON DUPLICATE KEY UPDATE course_name = 'Mathematics', course_description = 'Basic math concepts';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description) VALUES (2, 'English', 'Grammar and writing skills') ON DUPLICATE KEY UPDATE course_name = 'English', course_description = 'Grammar and writing skills';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description) VALUES (3, 'Science', 'Physics, chemistry, biology') ON DUPLICATE KEY UPDATE course_name = 'Science', course_description = 'Physics, chemistry, biology';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description) VALUES (4, 'History', 'World history events') ON DUPLICATE KEY UPDATE course_name = 'History', course_description = 'World history events';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description) VALUES (5, 'Computer Science', 'Programming and algorithms') ON DUPLICATE KEY UPDATE course_name = 'Computer Science', course_description = 'Programming and algorithms';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, grade_date) VALUES (1, 1, 2, 85.5, '2022-01-10') ON DUPLICATE KEY UPDATE student_id = 1, course_id = 2, grade = 85.5, grade_date = '2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, grade_date) VALUES (2, 1, 3, 92.3, '2022-01-20') ON DUPLICATE KEY UPDATE student_id = 1, course_id = 3, grade = 92.3, grade_date = '2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, grade_date) VALUES (3, 2, 1, 78.9, '2022-02-05') ON DUPLICATE KEY UPDATE student_id = 2, course_id = 1, grade = 78.9, grade_date = '2022-02-05';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, grade_date) VALUES (4, 2, 3, 88.7, '2022-02-15') ON DUPLICATE KEY UPDATE student_id = 2, course_id = 3, grade = 88.7, grade_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, grade_date) VALUES (5, 3, 4, 95.0, '2022-03-01') ON DUPLICATE KEY UPDATE student_id = 3, course_id = 4, grade = 95.0, grade_date = '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Feedback (feedback_id, student_id, course_id, feedback_text, feedback_date) VALUES (1, 1, 2, 'Great course!', '2022-01-10') ON DUPLICATE KEY UPDATE student_id = 1, course_id = 2, feedback_text = 'Great course!', feedback_date = '2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Feedback (feedback_id, student_id, course_id, feedback_text, feedback_date) VALUES (2, 1, 3, 'Excellent instructor!', '2022-01-20') ON DUPLICATE KEY UPDATE student_id = 1, course_id = 3, feedback_text = 'Excellent instructor!', feedback_date = '2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Feedback (feedback_id, student_id, course_id, feedback_text, feedback_date) VALUES (3, 2, 1, 'Enjoyed the lessons', '2022-02-05') ON DUPLICATE KEY UPDATE student_id = 2, course_id = 1, feedback_text = 'Enjoyed the lessons', feedback_date = '2022-02-05';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Feedback (feedback_id, student_id, course_id, feedback_text, feedback_date) VALUES (4, 2, 3, 'Helpful content', '2022-02-15') ON DUPLICATE KEY UPDATE student_id = 2, course_id = 3, feedback_text = 'Helpful content', feedback_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Feedback (feedback_id, student_id, course_id, feedback_text, feedback_date) VALUES (5, 3, 4, 'Informative course material', '2022-03-01') ON DUPLICATE KEY UPDATE student_id = 3, course_id = 4, feedback_text = 'Informative course material', feedback_date = '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email, enrollment_date) VALUES (1, 'Alice', 'alice@example.com', '2022-01-01') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice', enrollment_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description) VALUES (1, 'Mathematics', 'Advanced mathematics course') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics', course_description = 'Advanced mathematics course';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, grade_date) VALUES (1, 1, 1, 95.5, '2022-03-15') ON CONFLICT (grade_id) DO UPDATE SET student_id = 1, course_id = 1, grade = 95.5, grade_date = '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Feedback (feedback_id, student_id, course_id, feedback_text, feedback_date) VALUES (1, 1, 1, 'Great course, highly recommended!', '2022-04-02') ON CONFLICT (feedback_id) DO UPDATE SET student_id = 1, course_id = 1, feedback_text = 'Great course, highly recommended!', feedback_date = '2022-04-02';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email, enrollment_date) VALUES (2, 'Bob', 'bob@example.com', '2022-02-01') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Bob', enrollment_date = '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description) VALUES (2, 'Physics', 'Introductory physics course') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Physics', course_description = 'Introductory physics course';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, grade_date) VALUES (2, 2, 2, 87.3, '2022-03-20') ON CONFLICT (grade_id) DO UPDATE SET student_id = 2, course_id = 2, grade = 87.3, grade_date = '2022-03-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Feedback (feedback_id, student_id, course_id, feedback_text, feedback_date) VALUES (2, 2, 2, 'Good content, enjoyed the lectures!', '2022-04-05') ON CONFLICT (feedback_id) DO UPDATE SET student_id = 2, course_id = 2, feedback_text = 'Good content, enjoyed the lectures!', feedback_date = '2022-04-05';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email, enrollment_date) VALUES (3, 'Charlie', 'charlie@example.com', '2022-01-15') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Charlie', enrollment_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description) VALUES (3, 'Chemistry', 'Basic chemistry course') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Chemistry', course_description = 'Basic chemistry course';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, grade_date) VALUES (3, 3, 3, 78.9, '2022-03-18') ON CONFLICT (grade_id) DO UPDATE SET student_id = 3, course_id = 3, grade = 78.9, grade_date = '2022-03-18';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Feedback (feedback_id, student_id, course_id, feedback_text, feedback_date) VALUES (3, 3, 3, 'Helpful course material, improved my understanding!', '2022-04-03') ON CONFLICT (feedback_id) DO UPDATE SET student_id = 3, course_id = 3, feedback_text = 'Helpful course material, improved my understanding!', feedback_date = '2022-04-03';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email, enrollment_date) VALUES (4, 'David', 'david@example.com', '2022-02-10') ON CONFLICT (student_id) DO UPDATE SET student_name = 'David', enrollment_date = '2022-02-10';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description) VALUES (4, 'History', 'World history course') ON CONFLICT (course_id) DO UPDATE SET course_name = 'History', course_description = 'World history course';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, grade_date) VALUES (4, 4, 4, 82.4, '2022-03-22') ON CONFLICT (grade_id) DO UPDATE SET student_id = 4, course_id = 4, grade = 82.4, grade_date = '2022-03-22';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Feedback (feedback_id, student_id, course_id, feedback_text, feedback_date) VALUES (4, 4, 4, 'Interesting course content, enjoyed the readings!', '2022-04-07') ON CONFLICT (feedback_id) DO UPDATE SET student_id = 4, course_id = 4, feedback_text = 'Interesting course content, enjoyed the readings!', feedback_date = '2022-04-07';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_email, enrollment_date) VALUES (5, 'Eve', 'eve@example.com', '2022-01-20') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Eve', enrollment_date = '2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description) VALUES (5, 'Computer Science', 'Programming fundamentals course') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Computer Science', course_description = 'Programming fundamentals course';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade, grade_date) VALUES (5, 5, 5, 90.1, '2022-03-24') ON CONFLICT (grade_id) DO UPDATE SET student_id = 5, course_id = 5, grade = 90.1, grade_date = '2022-03-24';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    student_email VARCHAR(255) NOT NULL,\n    enrollment_date DATE\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_description TEXT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade DECIMAL(5, 2),\n    grade_date DATE\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    feedback_text TEXT,\n    feedback_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Feedback (feedback_id, student_id, course_id, feedback_text, feedback_date) VALUES (5, 5, 5, 'Excellent course structure, improved my coding skills!', '2022-04-10') ON CONFLICT (feedback_id) DO UPDATE SET student_id = 5, course_id = 5, feedback_text = 'Excellent course structure, improved my coding skills!', feedback_date = '2022-04-10';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (1, 'Alice', 101, 85, '2022-01-15') ON CONFLICT (student_id) DO UPDATE SET grade = 90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (2, 'Bob', 102, 78, '2022-01-20') ON CONFLICT (student_id) DO UPDATE SET grade = 82;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (3, 'Charlie', 103, 92, '2022-01-25') ON CONFLICT (student_id) DO UPDATE SET grade = 88;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (4, 'David', 104, 79, '2022-01-30') ON CONFLICT (student_id) DO UPDATE SET grade = 85;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (5, 'Eve', 105, 88, '2022-02-05') ON CONFLICT (student_id) DO UPDATE SET grade = 90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (6, 'Frank', 101, 95, '2022-02-10') ON CONFLICT (student_id) DO UPDATE SET grade = 97;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (7, 'Grace', 102, 84, '2022-02-15') ON CONFLICT (student_id) DO UPDATE SET grade = 89;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (8, 'Henry', 103, 91, '2022-02-20') ON CONFLICT (student_id) DO UPDATE SET grade = 93;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (9, 'Ivy', 104, 77, '2022-02-25') ON CONFLICT (student_id) DO UPDATE SET grade = 81;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (10, 'Jack', 105, 86, '2022-03-01') ON CONFLICT (student_id) DO UPDATE SET grade = 88;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, instructor) VALUES (101, 'Mathematics', 'Professor X') ON CONFLICT (course_id) DO UPDATE SET instructor = 'Professor Y';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, instructor) VALUES (102, 'Physics', 'Professor A') ON CONFLICT (course_id) DO UPDATE SET instructor = 'Professor B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, instructor) VALUES (103, 'Chemistry', 'Professor C') ON CONFLICT (course_id) DO UPDATE SET instructor = 'Professor D';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, instructor) VALUES (104, 'Biology', 'Professor E') ON CONFLICT (course_id) DO UPDATE SET instructor = 'Professor F';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, instructor) VALUES (105, 'History', 'Professor G') ON CONFLICT (course_id) DO UPDATE SET instructor = 'Professor H';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO grades (grade_id, student_id, course_id, grade_value, feedback) VALUES (1, 1, 101, 85, 'Good progress') ON CONFLICT (grade_id) DO UPDATE SET grade_value = 88, feedback = 'Excellent work';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO grades (grade_id, student_id, course_id, grade_value, feedback) VALUES (2, 2, 102, 78, 'Needs improvement') ON CONFLICT (grade_id) DO UPDATE SET grade_value = 80, feedback = 'Making progress';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO grades (grade_id, student_id, course_id, grade_value, feedback) VALUES (3, 3, 103, 92, 'Well done') ON CONFLICT (grade_id) DO UPDATE SET grade_value = 95, feedback = 'Outstanding performance';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO grades (grade_id, student_id, course_id, grade_value, feedback) VALUES (4, 4, 104, 79, 'Average work') ON CONFLICT (grade_id) DO UPDATE SET grade_value = 82, feedback = 'Improvement needed';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO grades (grade_id, student_id, course_id, grade_value, feedback) VALUES (5, 5, 105, 88, 'Great effort') ON CONFLICT (grade_id) DO UPDATE SET grade_value = 90, feedback = 'Keep it up';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (1, 'Alice', 101, 85, '2022-01-15') ON DUPLICATE KEY UPDATE grade = 90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (2, 'Bob', 102, 90, '2022-02-20') ON DUPLICATE KEY UPDATE grade = 95;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (3, 'Charlie', 103, 88, '2022-03-25') ON DUPLICATE KEY UPDATE grade = 92;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (4, 'David', 104, 75, '2022-04-30') ON DUPLICATE KEY UPDATE grade = 80;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (5, 'Eve', 105, 92, '2022-05-05') ON DUPLICATE KEY UPDATE grade = 95;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (6, 'Frank', 106, 85, '2022-06-10') ON DUPLICATE KEY UPDATE grade = 90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (7, 'Grace', 107, 95, '2022-07-15') ON DUPLICATE KEY UPDATE grade = 98;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (8, 'Henry', 108, 80, '2022-08-20') ON DUPLICATE KEY UPDATE grade = 85;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (9, 'Ivy', 109, 88, '2022-09-25') ON DUPLICATE KEY UPDATE grade = 92;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (10, 'Jack', 110, 85, '2022-10-30') ON DUPLICATE KEY UPDATE grade = 90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (11, 'Kim', 111, 90, '2022-11-05') ON DUPLICATE KEY UPDATE grade = 95;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (12, 'Lily', 112, 85, '2022-12-10') ON DUPLICATE KEY UPDATE grade = 90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (13, 'Mike', 113, 92, '2023-01-15') ON DUPLICATE KEY UPDATE grade = 95;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (14, 'Nora', 114, 88, '2023-02-20') ON DUPLICATE KEY UPDATE grade = 92;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (15, 'Oscar', 115, 75, '2023-03-25') ON DUPLICATE KEY UPDATE grade = 80;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (16, 'Penny', 116, 92, '2023-04-30') ON DUPLICATE KEY UPDATE grade = 95;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (17, 'Quinn', 117, 85, '2023-05-05') ON DUPLICATE KEY UPDATE grade = 90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (18, 'Ron', 118, 95, '2023-06-10') ON DUPLICATE KEY UPDATE grade = 98;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (19, 'Sara', 119, 80, '2023-07-15') ON DUPLICATE KEY UPDATE grade = 85;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT,\n    date_enrolled DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    course_id INT NOT NULL,\n    grade_value INT,\n    feedback TEXT\n);\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    instructor_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE feedback_template (\n    template_id INT PRIMARY KEY,\n    template_name VARCHAR(50) NOT NULL,\n    question_1 TEXT,\n    question_2 TEXT,\n    question_3 TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, course_id, grade, date_enrolled) VALUES (20, 'Tom', 120, 88, '2023-08-20') ON DUPLICATE KEY UPDATE grade = 92;"
]