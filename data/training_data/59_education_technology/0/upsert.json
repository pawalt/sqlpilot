[
  "### TABLEDATA\n\nCREATE TABLE student_info (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    grade INT,\n    attendance_record TEXT\n)\n\n### STATEMENT\n\nINSERT INTO student_info (student_id, name, grade, attendance_record) VALUES (1, 'Alice', 95, 'Present') ON CONFLICT (student_id) DO UPDATE SET name = EXCLUDED.name, grade = EXCLUDED.grade, attendance_record = EXCLUDED.attendance_record",
  "### TABLEDATA\n\nCREATE TABLE student_info (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    grade INT,\n    attendance_record TEXT\n)\n\n### STATEMENT\n\nINSERT INTO student_info (student_id, name, grade, attendance_record) VALUES (2, 'Bob', 85, 'Present') ON CONFLICT (student_id) DO UPDATE SET name = EXCLUDED.name, grade = EXCLUDED.grade, attendance_record = EXCLUDED.attendance_record",
  "### TABLEDATA\n\nCREATE TABLE student_info (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    grade INT,\n    attendance_record TEXT\n)\n\n### STATEMENT\n\nINSERT INTO student_info (student_id, name, grade, attendance_record) VALUES (3, 'Charlie', 75, 'Absent') ON CONFLICT (student_id) DO UPDATE SET name = EXCLUDED.name, grade = EXCLUDED.grade, attendance_record = EXCLUDED.attendance_record",
  "### TABLEDATA\n\nCREATE TABLE student_info (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    grade INT,\n    attendance_record TEXT\n)\n\n### STATEMENT\n\nINSERT INTO student_info (student_id, name, grade, attendance_record) VALUES (4, 'David', 80, 'Present') ON CONFLICT (student_id) DO UPDATE SET name = EXCLUDED.name, grade = EXCLUDED.grade, attendance_record = EXCLUDED.attendance_record",
  "### TABLEDATA\n\nCREATE TABLE student_info (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    grade INT,\n    attendance_record TEXT\n)\n\n### STATEMENT\n\nINSERT INTO student_info (student_id, name, grade, attendance_record) VALUES (5, 'Eve', 90, 'Present') ON CONFLICT (student_id) DO UPDATE SET name = EXCLUDED.name, grade = EXCLUDED.grade, attendance_record = EXCLUDED.attendance_record",
  "### TABLEDATA\n\nCREATE TABLE student_info (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    grade INT,\n    attendance_record TEXT\n)\n\n### STATEMENT\n\nINSERT INTO student_info...",
  "### TABLEDATA\n\nCREATE TABLE student_info (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    grade INT,\n    attendance_record TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO student_info (student_id, name, grade, attendance_record) VALUES (1, 'John Doe', 90, 'Present') ON CONFLICT(student_id) DO UPDATE SET name = 'John Doe', grade = 90, attendance_record = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_info (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    grade INT,\n    attendance_record TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO student_info (student_id, name, grade, attendance_record) VALUES (2, 'Alice Smith', 85, 'Absent') ON CONFLICT(student_id) DO UPDATE SET name = 'Alice Smith', grade = 85, attendance_record = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_info (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    grade INT,\n    attendance_record TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO student_info (student_id, name, grade, attendance_record) VALUES (3, 'Mike Johnson', 95, 'Present') ON CONFLICT(student_id) DO UPDATE SET name = 'Mike Johnson', grade = 95, attendance_record = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_info (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    grade INT,\n    attendance_record TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO student_info (student_id, name, grade, attendance_record) VALUES (4, 'Sarah Brown', 88, 'Present') ON CONFLICT(student_id) DO UPDATE SET name = 'Sarah Brown', grade = 88, attendance_record = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_info (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    grade INT,\n    attendance_record TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO student_inf...",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, name, grade, attendance) VALUES (1, 'John Doe', 'A', 95);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, name, grade, attendance) VALUES (2, 'Jane Smith', 'B', 85);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, name, grade, attendance) VALUES (3, 'Alice Johnson', 'C', 75);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, name, grade, attendance) VALUES (4, 'Bob Brown', 'B', 80);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, name, grade, attendance) VALUES (5, 'Sara Davis', 'A', 90);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (101, 'Mathematics', 'Professor X', 'Monday 10am');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (102, 'History', 'Professor Y', 'Wednesday 2pm');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (103, 'Science', 'Professor Z', 'Friday 4pm');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (104, 'English', 'Professor W', 'Tuesday 1pm');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (105, 'Art', 'Professor V', 'Thursday 3pm');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, name, grade, attendance) VALUES (6, 'Emily Wilson', 'A', 96);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, name, grade, attendance) VALUES (7, 'Michael Lee', 'B', 83);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, name, grade, attendance) VALUES (8, 'Sarah Brown', 'C', 78);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, name, grade, attendance) VALUES (9, 'Ryan Taylor', 'B', 82);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, name, grade, attendance) VALUES (10, 'Jessica Martinez', 'A', 92);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (106, 'Computer Science', 'Professor M', 'Monday 1pm');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (107, 'Music', 'Professor N', 'Wednesday 3pm');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (108, 'Physical Education', 'Professor O', 'Friday 5pm');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (109, 'Geography', 'Professor P', 'Tuesday 2pm');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (110, 'Chemistry', 'Professor Q', 'Thursday 4pm');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, grade, attendance) VALUES (1, 'Alice', 'A', 95) ON DUPLICATE KEY UPDATE name = 'Alice', grade = 'A', attendance = 95;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, grade, attendance) VALUES (2, 'Bob', 'B', 85) ON DUPLICATE KEY UPDATE name = 'Bob', grade = 'B', attendance = 85;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, grade, attendance) VALUES (3, 'Charlie', 'C', 75) ON DUPLICATE KEY UPDATE name = 'Charlie', grade = 'C', attendance = 75;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, grade, attendance) VALUES (4, 'David', 'D', 65) ON DUPLICATE KEY UPDATE name = 'David', grade = 'D', attendance = 65;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, grade, attendance) VALUES (5, 'Eve', 'E', 55) ON DUPLICATE KEY UPDATE name = 'Eve', grade = 'E', attendance = 55;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (101, 'Mathematics', 'Mr. Smith', 'Mon-Wed-Fri 9am') ON DUPLICATE KEY UPDATE course_name = 'Mathematics', instructor = 'Mr. Smith', schedule = 'Mon-Wed-Fri 9am';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (102, 'Science', 'Ms. Johnson', 'Tue-Thu 11am') ON DUPLICATE KEY UPDATE course_name = 'Science', instructor = 'Ms. Johnson', schedule = 'Tue-Thu 11am';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (103, 'History', 'Mr. Brown', 'Mon-Fri 2pm') ON DUPLICATE KEY UPDATE course_name = 'History', instructor = 'Mr. Brown', schedule = 'Mon-Fri 2pm';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (104, 'English', 'Ms. Davis', 'Wed-Fri 10am') ON DUPLICATE KEY UPDATE course_name = 'English', instructor = 'Ms. Davis', schedule = 'Wed-Fri 10am';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (105, 'Computer Science', 'Mr. White', 'Tue-Thu 1pm') ON DUPLICATE KEY UPDATE course_name = 'Computer Science', instructor = 'Mr. White', schedule = 'Tue-Thu 1pm';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, grade, attendance) VALUES (6, 'Fiona', 'A', 98) ON DUPLICATE KEY UPDATE name = 'Fiona', grade = 'A', attendance = 98;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, grade, attendance) VALUES (7, 'George', 'B', 88) ON DUPLICATE KEY UPDATE name = 'George', grade = 'B', attendance = 88;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, grade, attendance) VALUES (8, 'Hannah', 'C', 78) ON DUPLICATE KEY UPDATE name = 'Hannah', grade = 'C', attendance = 78;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, grade, attendance) VALUES (9, 'Ian', 'D', 68) ON DUPLICATE KEY UPDATE name = 'Ian', grade = 'D', attendance = 68;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, name, grade, attendance) VALUES (10, 'Jenna', 'E', 58) ON DUPLICATE KEY UPDATE name = 'Jenna', grade = 'E', attendance = 58;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (106, 'Physics', 'Mr. Gray', 'Mon-Wed-Fri 11am') ON DUPLICATE KEY UPDATE course_name = 'Physics', instructor = 'Mr. Gray', schedule = 'Mon-Wed-Fri 11am';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (107, 'Chemistry', 'Ms. Black', 'Tue-Thu 10am') ON DUPLICATE KEY UPDATE course_name = 'Chemistry', instructor = 'Ms. Black', schedule = 'Tue-Thu 10am';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (108, 'Geography', 'Mr. Green', 'Mon-Fri 3pm') ON DUPLICATE KEY UPDATE course_name = 'Geography', instructor = 'Mr. Green', schedule = 'Mon-Fri 3pm';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (109, 'Biology', 'Ms. Yellow', 'Wed-Fri 9am') ON DUPLICATE KEY UPDATE course_name = 'Biology', instructor = 'Ms. Yellow', schedule = 'Wed-Fri 9am';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  grade VARCHAR(10),\n  attendance INT\n);\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  instructor VARCHAR(50),\n  schedule VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, instructor, schedule) VALUES (110, 'Art', 'Mr. Orange', 'Tue-Thu 2pm') ON DUPLICATE KEY UPDATE course_name = 'Art', instructor = 'Mr. Orange', schedule = 'Tue-Thu 2pm';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    student_grade INT,\n    attendance_records ARRAY<STRING>\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    grade_title STRING,\n    grade_value FLOAT,\n    student_id INT REFERENCES students(student_id)\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    date DATE,\n    present BOOLEAN,\n    student_id INT REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_grade, attendance_records) VALUES (1, 'Alice', 10, ['2022-01-01', '2022-01-02']), (2, 'Bob', 9, ['2022-01-01', '2022-01-03']), (3, 'Charlie', 8, ['2022-01-02']), (4, 'David', 7, ['2022-01-01']), (5, 'Eva', 6, ['2022-01-03']), (6, 'Frank', 5, ['2022-01-02', '2022-01-03']), (7, 'Grace', 4, ['2022-01-01']), (8, 'Hannah', 3, ['2022-01-02']), (9, 'Ian', 2, []), (10, 'Julia', 1, ['2022-01-01']);UPSERT INTO grades (grade_id, grade_title, grade_value, student_id) VALUES (1, 'A', 4.0, 1), (2, 'B', 3.5, 2), (3, 'C', 3.0, 3), (4, 'D', 2.5, 4), (5, 'F', 2.0, 5), (6, 'A', 4.0, 6), (7, 'B', 3.5, 7), (8, 'C', 3.0, 8), (9, 'D', 2.5, 9), (10, 'F', 2.0, 10);UPSERT INTO attendance (attendance_id, date, present, student_id) VALUES (1, '2022-01-01', true, 1), (2, '2022-01-02', true, 2), (3, '2022-01-03', false, 3), (4, '2022-01-01', true, 4), (5, '2022-01-02', false, 5), (6, '2022-01-03', true, 6), (7, '2022-01-01', true, 7), (8, '2022-01-02', true, 8), (9, '2022-01-03', false, 9), (10, '2022-01-01', false, 10);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    student_grade INT,\n    attendance_records ARRAY<STRING>\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    grade_title STRING,\n    grade_value FLOAT,\n    student_id INT REFERENCES students(student_id)\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    date DATE,\n    present BOOLEAN,\n    student_id INT REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_grade, attendance_records) VALUES (1, 'Alice', 10, ['Monday', 'Wednesday', 'Friday']), (2, 'Bob', 9, ['Tuesday', 'Thursday']), (3, 'Charlie', 8, ['Monday', 'Thursday', 'Friday']);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    student_grade INT,\n    attendance_records ARRAY<STRING>\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    grade_title STRING,\n    grade_value FLOAT,\n    student_id INT REFERENCES students(student_id)\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    date DATE,\n    present BOOLEAN,\n    student_id INT REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_grade, attendance_records) VALUES (4, 'David', 7, ['Tuesday', 'Wednesday']), (5, 'Emma', 10, ['Monday', 'Wednesday']), (6, 'Frank', 9, ['Monday', 'Thursday', 'Friday']);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    student_grade INT,\n    attendance_records ARRAY<STRING>\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    grade_title STRING,\n    grade_value FLOAT,\n    student_id INT REFERENCES students(student_id)\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    date DATE,\n    present BOOLEAN,\n    student_id INT REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_grade, attendance_records) VALUES (7, 'Grace', 8, ['Tuesday', 'Friday']), (8, 'Hannah', 6, ['Monday', 'Wednesday']), (9, 'Isaac', 9, ['Monday', 'Wednesday', 'Friday']);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    student_grade INT,\n    attendance_records ARRAY<STRING>\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    grade_title STRING,\n    grade_value FLOAT,\n    student_id INT REFERENCES students(student_id)\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    date DATE,\n    present BOOLEAN,\n    student_id INT REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_grade, attendance_records) VALUES (10, 'Jack', 7, ['Monday', 'Thursday']), (11, 'Katie', 8, ['Tuesday', 'Wednesday']), (12, 'Liam', 9, ['Tuesday', 'Thursday', 'Friday']);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    student_grade INT,\n    attendance_records ARRAY<STRING>\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    grade_title STRING,\n    grade_value FLOAT,\n    student_id INT REFERENCES students(student_id)\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    date DATE,\n    present BOOLEAN,\n    student_id INT REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_grade, attendance_records) VALUES (13, 'Mia', 10, ['Wednesday', 'Friday']), (14, 'Noah', 9, ['Monday', 'Thursday']), (15, 'Olivia', 8, ['Tuesday', 'Friday']);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    student_grade INT,\n    attendance_records ARRAY<STRING>\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    grade_title STRING,\n    grade_value FLOAT,\n    student_id INT REFERENCES students(student_id)\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    date DATE,\n    present BOOLEAN,\n    student_id INT REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_grade, attendance_records) VALUES (16, 'Peter', 7, ['Monday', 'Wednesday']), (17, 'Quinn', 8, ['Tuesday', 'Thursday']), (18, 'Rachel', 9, ['Wednesday', 'Friday']);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    student_grade INT,\n    attendance_records ARRAY<STRING>\n);\n\nCREATE TABLE grades (\n    grade_id INT PRIMARY KEY,\n    grade_title STRING,\n    grade_value FLOAT,\n    student_id INT REFERENCES students(student_id)\n);\n\nCREATE TABLE attendance (\n    attendance_id INT PRIMARY KEY,\n    date DATE,\n    present BOOLEAN,\n    student_id INT REFERENCES students(student_id)\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, student_grade, attendance_records) VALUES (19, 'Sarah', 10, ['Tuesday', 'Friday']), (20, 'Tom', 6, ['Monday', 'Thursday']);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, grade, attendance) VALUES ('123e4567-e89b-12d3-a456-426614174000', 'John Doe', 85.5, true) ON CONFLICT (student_id) DO UPDATE SET student_name = 'John Doe', grade = 85.5, attendance = true;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, credits) VALUES ('223e4567-e89b-12d3-a456-426614174000', 'Mathematics', 3) ON CONFLICT (course_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES ('323e4567-e89b-12d3-a456-426614174000', '123e4567-e89b-12d3-a456-426614174000', '223e4567-e89b-12d3-a456-426614174000', 85.5) ON CONFLICT (grade_id) DO UPDATE SET student_id = '123e4567-e89b-12d3-a456-426614174000', course_id = '223e4567-e89b-12d3-a456-426614174000', grade = 85.5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, date) VALUES ('423e4567-e89b-12d3-a456-426614174000', '123e4567-e89b-12d3-a456-426614174000', '2022-10-30') ON CONFLICT (attendance_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, grade, attendance) VALUES ('523e4567-e89b-12d3-a456-426614174000', 'Jane Smith', 90.0, false) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Jane Smith', grade = 90.0, attendance = false;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, credits) VALUES ('623e4567-e89b-12d3-a456-426614174000', 'History', 4) ON CONFLICT (course_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES ('723e4567-e89b-12d3-a456-426614174000', '523e4567-e89b-12d3-a456-426614174000', '623e4567-e89b-12d3-a456-426614174000', 90.0) ON CONFLICT (grade_id) DO UPDATE SET student_id = '523e4567-e89b-12d3-a456-426614174000', course_id = '623e4567-e89b-12d3-a456-426614174000', grade = 90.0;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, date) VALUES ('823e4567-e89b-12d3-a456-426614174000', '523e4567-e89b-12d3-a456-426614174000', '2022-10-31') ON CONFLICT (attendance_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, grade, attendance) VALUES ('923e4567-e89b-12d3-a456-426614174000', 'Alice Johnson', 78.5, true) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice Johnson', grade = 78.5, attendance = true;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, credits) VALUES ('a23e4567-e89b-12d3-a456-426614174000', 'Science', 5) ON CONFLICT (course_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES ('b23e4567-e89b-12d3-a456-426614174000', '923e4567-e89b-12d3-a456-426614174000', 'a23e4567-e89b-12d3-a456-426614174000', 78.5) ON CONFLICT (grade_id) DO UPDATE SET student_id = '923e4567-e89b-12d3-a456-426614174000', course_id = 'a23e4567-e89b-12d3-a456-426614174000', grade = 78.5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, date) VALUES ('c23e4567-e89b-12d3-a456-426614174000', '923e4567-e89b-12d3-a456-426614174000', '2022-11-01') ON CONFLICT (attendance_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, grade, attendance) VALUES ('d23e4567-e89b-12d3-a456-426614174000', 'Tom Williams', 88.0, false) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Tom Williams', grade = 88.0, attendance = false;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, credits) VALUES ('e23e4567-e89b-12d3-a456-426614174000', 'English', 4) ON CONFLICT (course_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES ('f23e4567-e89b-12d3-a456-426614174000', 'd23e4567-e89b-12d3-a456-426614174000', 'e23e4567-e89b-12d3-a456-426614174000', 88.0) ON CONFLICT (grade_id) DO UPDATE SET student_id = 'd23e4567-e89b-12d3-a456-426614174000', course_id = 'e23e4567-e89b-12d3-a456-426614174000', grade = 88.0;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, date) VALUES ('g23e4567-e89b-12d3-a456-426614174000', 'd23e4567-e89b-12d3-a456-426614174000', '2022-11-02') ON CONFLICT (attendance_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, grade, attendance) VALUES ('h23e4567-e89b-12d3-a456-426614174000', 'Emily Brown', 92.5, true) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Emily Brown', grade = 92.5, attendance = true;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, credits) VALUES ('i23e4567-e89b-12d3-a456-426614174000', 'Art', 2) ON CONFLICT (course_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES ('j23e4567-e89b-12d3-a456-426614174000', 'h23e4567-e89b-12d3-a456-426614174000', 'i23e4567-e89b-12d3-a456-426614174000', 92.5) ON CONFLICT (grade_id) DO UPDATE SET student_id = 'h23e4567-e89b-12d3-a456-426614174000', course_id = 'i23e4567-e89b-12d3-a456-426614174000', grade = 92.5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, date) VALUES ('k23e4567-e89b-12d3-a456-426614174000', 'h23e4567-e89b-12d3-a456-426614174000', '2022-11-03') ON CONFLICT (attendance_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, grade, attendance) VALUES ('b6f61be8-4f0a-4d12-b848-ef9bdd1ad53e', 'Alice', 85.5, true) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice', grade = 85.5, attendance = true;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, credits) VALUES ('d0e76046-2712-4183-ae97-868fea633c18', 'Mathematics', 4) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics', credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES ('c7ce31cd-228d-45b1-9b51-4f52255868cb', 'b6f61be8-4f0a-4d12-b848-ef9bdd1ad53e', 'd0e76046-2712-4183-ae97-868fea633c18', 90.0) ON CONFLICT (grade_id) DO UPDATE SET student_id = 'b6f61be8-4f0a-4d12-b848-ef9bdd1ad53e', course_id = 'd0e76046-2712-4183-ae97-868fea633c18', grade = 90.0;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, date) VALUES ('d442dcd4-bb9e-4d10-b2f6-29a613eaa6f5', 'b6f61be8-4f0a-4d12-b848-ef9bdd1ad53e', '2022-10-31') ON CONFLICT (attendance_id) DO UPDATE SET student_id = 'b6f61be8-4f0a-4d12-b848-ef9bdd1ad53e', date = '2022-10-31';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, grade, attendance) VALUES ('42a4aa54-47c1-4873-88fc-dcc99b26a751', 'Bob', 79.25, true) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Bob', grade = 79.25, attendance = true;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, credits) VALUES ('05b3f997-7687-41bc-9274-31126072bdb0', 'Physics', 3) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Physics', credits = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES ('1fae9f9a-cd86-420e-a534-5082ef85f62d', '42a4aa54-47c1-4873-88fc-dcc99b26a751', '05b3f997-7687-41bc-9274-31126072bdb0', 82.5) ON CONFLICT (grade_id) DO UPDATE SET student_id = '42a4aa54-47c1-4873-88fc-dcc99b26a751', course_id = '05b3f997-7687-41bc-9274-31126072bdb0', grade = 82.5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, date) VALUES ('84798dd1-adbb-4c67-a653-98e9b72034d4', '42a4aa54-47c1-4873-88fc-dcc99b26a751', '2022-11-01') ON CONFLICT (attendance_id) DO UPDATE SET student_id = '42a4aa54-47c1-4873-88fc-dcc99b26a751', date = '2022-11-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, grade, attendance) VALUES ('f7e4e447-02cf-4dc7-af0d-ef370aa1a498', 'Charlie', 88.75, false) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Charlie', grade = 88.75, attendance = false;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, credits) VALUES ('45f985ea-457b-463f-b0c8-59f7b5104acd', 'Chemistry', 4) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Chemistry', credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES ('76c8d7f4-a42a-49e4-942b-0372716234fe', 'f7e4e447-02cf-4dc7-af0d-ef370aa1a498', '45f985ea-457b-463f-b0c8-59f7b5104acd', 87.0) ON CONFLICT (grade_id) DO UPDATE SET student_id = 'f7e4e447-02cf-4dc7-af0d-ef370aa1a498', course_id = '45f985ea-457b-463f-b0c8-59f7b5104acd', grade = 87.0;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, date) VALUES ('890c5cca-b0a3-4543-a5e4-03b8cebde14c', 'f7e4e447-02cf-4dc7-af0d-ef370aa1a498', '2022-10-30') ON CONFLICT (attendance_id) DO UPDATE SET student_id = 'f7e4e447-02cf-4dc7-af0d-ef370aa1a498', date = '2022-10-30';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, grade, attendance) VALUES ('24e55574-3bf1-4eb0-a875-925f0443724e', 'David', 95.0, true) ON CONFLICT (student_id) DO UPDATE SET student_name = 'David', grade = 95.0, attendance = true;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, credits) VALUES ('b49d63dd-8046-4134-b79b-c1b6c5a276d1', 'History', 3) ON CONFLICT (course_id) DO UPDATE SET course_name = 'History', credits = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES ('4678e56c-28b3-44cb-82b9-61763d72c6c1', '24e55574-3bf1-4eb0-a875-925f0443724e', 'b49d63dd-8046-4134-b79b-c1b6c5a276d1', 91.5) ON CONFLICT (grade_id) DO UPDATE SET student_id = '24e55574-3bf1-4eb0-a875-925f0443724e', course_id = 'b49d63dd-8046-4134-b79b-c1b6c5a276d1', grade = 91.5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, date) VALUES ('57460600-c8ee-41a7-8713-4d7dc4c6d5f4', '24e55574-3bf1-4eb0-a875-925f0443724e', '2022-11-02') ON CONFLICT (attendance_id) DO UPDATE SET student_id = '24e55574-3bf1-4eb0-a875-925f0443724e', date = '2022-11-02';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, grade, attendance) VALUES ('c1700d53-926c-4b9e-bce8-b505ae86590c', 'Eve', 82.0, false) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Eve', grade = 82.0, attendance = false;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, credits) VALUES ('3543d4c3-d370-4604-aa15-45a81250cfec', 'Biology', 4) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Biology', credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES ('3d8b075e-f6a4-47c5-9b6b-8bfaa7a77651', 'c1700d53-926c-4b9e-bce8-b505ae86590c', '3543d4c3-d370-4604-aa15-45a81250cfec', 85.75) ON CONFLICT (grade_id) DO UPDATE SET student_id = 'c1700d53-926c-4b9e-bce8-b505ae86590c', course_id = '3543d4c3-d370-4604-aa15-45a81250cfec', grade = 85.75;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade DOUBLE PRECISION NOT NULL,\n  attendance BOOLEAN\n);\n\nCREATE TABLE Courses (\n  course_id UUID PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL,\n  credits INTEGER\n);\n\nCREATE TABLE Grades (\n  grade_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  course_id UUID REFERENCES Courses(course_id),\n  grade DOUBLE PRECISION NOT NULL\n);\n\nCREATE TABLE Attendance (\n  attendance_id UUID PRIMARY KEY,\n  student_id UUID REFERENCES Students(student_id),\n  date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (attendance_id, student_id, date) VALUES ('66eb4a0e-247d-4f3b-8f85-e7cd21205b05', 'c1700d53-926c-4b9e-bce8-b505ae86590c', '2022-10-29') ON CONFLICT (attendance_id) DO UPDATE SET student_id = 'c1700d53-926c-4b9e-bce8-b505ae86590c', date = '2022-10-29';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Students (name, grade, attendance) VALUES ('Alice', 10, TRUE) ON CONFLICT (name) DO UPDATE SET grade = EXCLUDED.grade, attendance = EXCLUDED.attendance;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_name, professor, credits) VALUES ('Mathematics', 'Dr. Smith', 3) ON CONFLICT (course_name) DO UPDATE SET professor = EXCLUDED.professor, credits = EXCLUDED.credits;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Enrollments (student_id, course_id, enrollment_date) VALUES (1, 1, CURRENT_TIMESTAMP) ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Grades (student_id, course_id, grade) VALUES (1, 1, 90) ON CONFLICT (student_id, course_id) DO UPDATE SET grade = EXCLUDED.grade;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (student_id, attendance_date, status) VALUES (1, '2022-01-01', TRUE) ON CONFLICT (student_id, attendance_date) DO UPDATE SET status = EXCLUDED.status;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Students (name, grade, attendance) VALUES ('Bob', 9, FALSE) ON CONFLICT (name) DO UPDATE SET grade = EXCLUDED.grade, attendance = EXCLUDED.attendance;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_name, professor, credits) VALUES ('Science', 'Prof. Johnson', 4) ON CONFLICT (course_name) DO UPDATE SET professor = EXCLUDED.professor, credits = EXCLUDED.credits;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Enrollments (student_id, course_id, enrollment_date) VALUES (2, 2, CURRENT_TIMESTAMP) ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Grades (student_id, course_id, grade) VALUES (2, 2, 85) ON CONFLICT (student_id, course_id) DO UPDATE SET grade = EXCLUDED.grade;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (student_id, attendance_date, status) VALUES (2, '2022-01-02', FALSE) ON CONFLICT (student_id, attendance_date) DO UPDATE SET status = EXCLUDED.status;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Students (name, grade, attendance) VALUES ('Charlie', 11, TRUE) ON CONFLICT (name) DO UPDATE SET grade = EXCLUDED.grade, attendance = EXCLUDED.attendance;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_name, professor, credits) VALUES ('History', 'Prof. Williams', 3) ON CONFLICT (course_name) DO UPDATE SET professor = EXCLUDED.professor, credits = EXCLUDED.credits;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Enrollments (student_id, course_id, enrollment_date) VALUES (3, 3, CURRENT_TIMESTAMP) ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Grades (student_id, course_id, grade) VALUES (3, 3, 95) ON CONFLICT (student_id, course_id) DO UPDATE SET grade = EXCLUDED.grade;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (student_id, attendance_date, status) VALUES (3, '2022-01-03', TRUE) ON CONFLICT (student_id, attendance_date) DO UPDATE SET status = EXCLUDED.status;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Students (name, grade, attendance) VALUES ('David', 10, FALSE) ON CONFLICT (name) DO UPDATE SET grade = EXCLUDED.grade, attendance = EXCLUDED.attendance;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_name, professor, credits) VALUES ('English', 'Dr. Brown', 4) ON CONFLICT (course_name) DO UPDATE SET professor = EXCLUDED.professor, credits = EXCLUDED.credits;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Enrollments (student_id, course_id, enrollment_date) VALUES (4, 4, CURRENT_TIMESTAMP) ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Grades (student_id, course_id, grade) VALUES (4, 4, 88) ON CONFLICT (student_id, course_id) DO UPDATE SET grade = EXCLUDED.grade;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (student_id, attendance_date, status) VALUES (4, '2022-01-04', FALSE) ON CONFLICT (student_id, attendance_date) DO UPDATE SET status = EXCLUDED.status;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Students (name, grade, attendance) VALUES ('Alice', 90, TRUE) ON CONFLICT (name) DO UPDATE SET grade = 90, attendance = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_name, professor, credits) VALUES ('Math', 'Prof. Smith', 3) ON CONFLICT (course_name) DO UPDATE SET professor = 'Prof. Smith', credits = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Enrollments (student_id, course_id, enrollment_date) VALUES (1, 1, '2022-01-01') ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Grades (student_id, course_id, grade) VALUES (1, 1, 85) ON CONFLICT (student_id, course_id) DO UPDATE SET grade = 85;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (student_id, attendance_date, status) VALUES (1, '2022-01-01', TRUE) ON CONFLICT (student_id, attendance_date) DO UPDATE SET status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Students (name, grade, attendance) VALUES ('Bob', 80, FALSE) ON CONFLICT (name) DO UPDATE SET grade = 80, attendance = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_name, professor, credits) VALUES ('Science', 'Prof. Johnson', 4) ON CONFLICT (course_name) DO UPDATE SET professor = 'Prof. Johnson', credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Enrollments (student_id, course_id, enrollment_date) VALUES (2, 2, '2022-01-02') ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Grades (student_id, course_id, grade) VALUES (2, 2, 75) ON CONFLICT (student_id, course_id) DO UPDATE SET grade = 75;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (student_id, attendance_date, status) VALUES (2, '2022-01-02', FALSE) ON CONFLICT (student_id, attendance_date) DO UPDATE SET status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Students (name, grade, attendance) VALUES ('Charlie', 95, TRUE) ON CONFLICT (name) DO UPDATE SET grade = 95, attendance = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_name, professor, credits) VALUES ('History', 'Prof. Brown', 3) ON CONFLICT (course_name) DO UPDATE SET professor = 'Prof. Brown', credits = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Enrollments (student_id, course_id, enrollment_date) VALUES (3, 3, '2022-01-03') ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Grades (student_id, course_id, grade) VALUES (3, 3, 90) ON CONFLICT (student_id, course_id) DO UPDATE SET grade = 90;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (student_id, attendance_date, status) VALUES (3, '2022-01-03', TRUE) ON CONFLICT (student_id, attendance_date) DO UPDATE SET status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Students (name, grade, attendance) VALUES ('David', 85, TRUE) ON CONFLICT (name) DO UPDATE SET grade = 85, attendance = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_name, professor, credits) VALUES ('English', 'Prof. White', 4) ON CONFLICT (course_name) DO UPDATE SET professor = 'Prof. White', credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Enrollments (student_id, course_id, enrollment_date) VALUES (4, 4, '2022-01-04') ON CONFLICT (student_id, course_id) DO UPDATE SET enrollment_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Grades (student_id, course_id, grade) VALUES (4, 4, 80) ON CONFLICT (student_id, course_id) DO UPDATE SET grade = 80;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    grade INTEGER NOT NULL,\n    attendance BOOLEAN\n);\n\n\nCREATE TABLE Courses (\n    id SERIAL PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    professor VARCHAR(50),\n    credits INTEGER\n);\n\n\nCREATE TABLE Enrollments (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    enrollment_date TIMESTAMP\n);\n\n\nCREATE TABLE Grades (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    course_id INTEGER NOT NULL,\n    grade INTEGER\n);\n\n\nCREATE TABLE Attendance (\n    id SERIAL PRIMARY KEY,\n    student_id INTEGER NOT NULL,\n    attendance_date DATE,\n    status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Attendance (student_id, attendance_date, status) VALUES (4, '2022-01-04', TRUE) ON CONFLICT (student_id, attendance_date) DO UPDATE SET status = TRUE;"
]