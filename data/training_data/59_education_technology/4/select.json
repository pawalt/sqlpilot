[
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT * FROM student_data;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, student_age FROM student_data;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM student_data WHERE student_age > 20;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM student_data;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT AVG(student_age) FROM student_data;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT MAX(student_age) FROM student_data;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name FROM student_data WHERE student_age < 25;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT * FROM student_data WHERE course_name = 'Math';",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM student_data WHERE student_age BETWEEN 18 AND 25;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT DISTINCT course_name FROM student_data;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, student_age, course_name FROM student_data WHERE student_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, student_age FROM student_data ORDER BY student_age DESC;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM student_data WHERE course_name IN ('Math', 'Science');",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT MIN(student_age) FROM student_data;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name FROM student_data WHERE course_name LIKE '%Science%';",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT * FROM student_data WHERE student_age >= 30;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM student_data WHERE student_age < 20 OR course_name = 'History';",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT course_name) FROM student_data;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT * FROM student_data WHERE student_name = 'Alice' AND course_name = 'Biology';",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, student_age FROM student_data WHERE student_age < 30 ORDER BY student_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT * FROM student_data WHERE student_age > 20;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM student_data WHERE student_age BETWEEN 18 AND 25;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM student_data WHERE student_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, student_age FROM student_data WHERE course_name = 'Mathematics';",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM student_data WHERE course_name = 'Physics';",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, student_age FROM student_data ORDER BY student_age DESC;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT AVG(student_age) FROM student_data WHERE course_name = 'Biology';",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT DISTINCT course_name FROM student_data;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM student_data WHERE student_age < 18 OR student_age > 25;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM student_data WHERE course_name IN ('Mathematics', 'Physics');",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT * FROM student_data WHERE student_age < (SELECT AVG(student_age) FROM student_data);",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT MAX(student_age), MIN(student_age) FROM student_data;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, student_age FROM student_data WHERE student_name IN ('Alice', 'Bob', 'Charlie');",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM student_data WHERE student_age < 20 AND course_name = 'Chemistry';",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, student_age FROM student_data WHERE student_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name FROM student_data WHERE student_age = (SELECT MAX(student_age) FROM student_data);",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT AVG(student_age) AS average_age, course_name FROM student_data GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM student_data WHERE student_age > 18 UNION SELECT student_name, course_name FROM student_data WHERE course_name = 'History';",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, student_age FROM student_data WHERE student_name NOT IN ('David', 'Emily');",
  "### TABLEDATA\n\nCREATE TABLE student_data (\n  student_id UUID PRIMARY KEY,\n  student_name STRING,\n  student_age INT,\n  course_name STRING\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM student_data WHERE student_age >= 20 AND course_name != 'English';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, student_age FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_name, course_credit FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, student_grade FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, course_teacher FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, student_age, student_grade FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_name, course_credit, course_teacher FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, student_age, student_grade FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, course_credit, course_teacher FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, student_grade FROM Students WHERE student_age > 20;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, course_credit FROM Courses WHERE course_teacher = 'Dr. Smith';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Courses WHERE course_credit > 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE student_age < 25;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name FROM Courses WHERE course_credit < 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(student_id) AS total_students FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(student_age) AS oldest_student_age FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(course_credit) AS avg_course_credit FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MIN(course_credit) AS min_course_credit FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_age > 20;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, student_grade FROM Students WHERE student_grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT student_id FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students INNER JOIN Courses ON Students.student_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, course_credit FROM Students INNER JOIN Courses ON Students.student_id = Courses.course_id WHERE course_credit > 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, AVG(student_age) AS avg_age FROM Students GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, COUNT(course_id) AS num_courses FROM Students LEFT JOIN Courses ON Students.student_id = Courses.course_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, SUM(course_credit) AS total_credits FROM Students LEFT JOIN Courses ON Students.student_id = Courses.course_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, MAX(course_credit) AS max_credit FROM Students LEFT JOIN Courses ON Students.student_id = Courses.course_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, MIN(course_credit) AS min_credit FROM Students LEFT JOIN Courses ON Students.student_id = Courses.course_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students CROSS JOIN Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students FULL OUTER JOIN Courses ON Students.student_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students RIGHT JOIN Courses ON Students.student_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students LEFT JOIN Courses ON Students.student_id = Courses.course_id WHERE course_teacher = 'Mr. Smith';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students JOIN Courses ON Students.student_id = Courses.course_id WHERE student_age > 18 AND course_credit > 2;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students JOIN Courses ON Students.student_id = Courses.course_id WHERE student_age BETWEEN 18 AND 25;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students JOIN Courses ON Students.student_id = Courses.course_id WHERE student_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students JOIN Courses ON Students.student_id = Courses.course_id WHERE course_name IN ('Math', 'English', 'Science');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students JOIN Courses ON Students.student_id = Courses.course_id ORDER BY student_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(50),\n  student_age INT,\n  student_grade VARCHAR(10)\n);\n\n\nCREATE TABLE Courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50),\n  course_credit INT,\n  course_teacher VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students JOIN Courses ON Students.student_id = Courses.course_id LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, major FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT enrollment_date FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_description FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Grades;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, grade FROM Grades;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT grade_id, student_id, course_id, grade FROM Grades;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, grade FROM Grades WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE Students.major = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT AVG(CAST(grade AS DECIMAL)) AS avg_grade FROM Grades WHERE course_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_students FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, AVG(CAST(grade AS DECIMAL)) AS avg_grade FROM Grades GROUP BY course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, COUNT(*) AS num_courses FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(DISTINCT course_id) AS num_courses FROM Grades GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, MAX(CAST(grade AS DECIMAL)) AS max_grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, MIN(CAST(grade AS DECIMAL)) AS min_grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name FROM Students WHERE major = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, course_description FROM Courses WHERE instructor = 'Professor Smith';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'D';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Students LEFT JOIN Grades ON Students.student_id = Grades.student_id LEFT JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, AVG(grade) AS avg_grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id GROUP BY Students.student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT major, COUNT(*) AS num_students FROM Students GROUP BY major;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, COUNT(*) AS num_students FROM Grades GROUP BY course_id ORDER BY num_students DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id ORDER BY grade DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE enrollment_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, COUNT(course_id) AS num_courses FROM Students LEFT JOIN Grades ON Students.student_id = Grades.student_id GROUP BY Students.student_id HAVING num_courses >= 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT AVG(GRADE) AS avg_grade FROM Grades GROUP BY course_id HAVING COUNT(student_id) >= 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, MAX(grade) AS max_grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id GROUP BY Students.student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, MIN(grade) AS min_grade FROM Courses INNER JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE major = 'Engineering';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade CHAR(1),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, CASE WHEN grade >= 'A' THEN 'Pass' ELSE 'Fail' END AS result FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT name, age FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, name FROM Students WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT course_id, department FROM Courses WHERE instructor = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Enrollments;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, course_id FROM Enrollments WHERE grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT enrollment_id, enrollment_date FROM Enrollments WHERE student_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Grades;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT assignment_name, score FROM Grades WHERE grade_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, grade FROM Enrollments WHERE enrollment_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT name, age, grade FROM Students WHERE age > 20;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT course_name, instructor, department FROM Courses WHERE department = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Enrollments WHERE grade = 'A' AND grade IN ('A', 'B');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT enrollment_id, assignment_name, score FROM Grades WHERE score > 90;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT name, age, grade FROM Students WHERE grade IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, department FROM Courses WHERE instructor IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, enrollment_date FROM Enrollments WHERE enrollment_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT course_id, COUNT(student_id) AS total_students FROM Enrollments GROUP BY course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(score) AS average_score FROM Grades;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT name, age FROM Students WHERE age > 20;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Courses WHERE department = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, course_name, grade FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM Courses WHERE course_name LIKE '%Programming%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT name, grade FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, AVG(score) AS average_score FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Grades ON Enrollments.enrollment_id = Grades.enrollment_id GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT instructor FROM Courses WHERE department = 'Mathematics';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(course_id) AS num_courses FROM Enrollments GROUP BY student_id HAVING num_courses > 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT assignment_name, MAX(score) AS max_score FROM Grades GROUP BY assignment_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT name, age, CASE WHEN age < 18 THEN 'Minor' ELSE 'Adult' END AS age_category FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT course_name, COUNT(enrollment_id) AS num_students FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT department, AVG(score) AS average_score FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id JOIN Grades ON Enrollments.enrollment_id = Grades.enrollment_id GROUP BY department;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT name, feedback FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Grades ON Enrollments.enrollment_id = Grades.enrollment_id WHERE grade = 'F';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT student_id) AS num_students FROM Enrollments;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT course_name, COUNT(DISTINCT student_id) AS num_students FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id GROUP BY course_name HAVING num_students > 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT name, AVG(score) AS avg_score FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Grades ON Enrollments.enrollment_id = Grades.enrollment_id GROUP BY name HAVING avg_score > 80;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT course_name, instructor, AVG(score) AS avg_score FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id JOIN Grades ON Enrollments.enrollment_id = Grades.enrollment_id GROUP BY course_name, instructor;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT name, age, grade FROM Students WHERE age BETWEEN 20 AND 25 AND grade IN ('A', 'B');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date TIMESTAMP,\n    grade VARCHAR(2)\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    enrollment_id INT,\n    assignment_name VARCHAR(50),\n    score DECIMAL(5,2),\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT course_name, department, COUNT(enrollment_id) AS num_students FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id GROUP BY course_name, department HAVING num_students > 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT course_id, course_name FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Enrollments;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT enrollment_id, student_id, course_id FROM Enrollments;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Grades;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_id, course_id, grade FROM Grades;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT instructor_id, instructor_name FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_id, student_name, major FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, course_description FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT enrollment_id, student_id, course_id, enrollment_date FROM Enrollments;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT grade_id, student_id, course_id, grade FROM Grades;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT instructor_id, instructor_name, department FROM Instructors;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, enrolled_year FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT course_name, instructor_id FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_id, course_id, grade FROM Grades WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Enrollments WHERE enrollment_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE major = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Students WHERE enrolled_year BETWEEN 2018 AND 2020;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, major FROM Students WHERE major = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT course_name, course_description, instructor_name FROM Courses INNER JOIN Instructors ON Courses.instructor_id = Instructors.instructor_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT instructor_name, COUNT(course_id) AS num_courses FROM Instructors LEFT JOIN Courses ON Instructors.instructor_id = Courses.instructor_id GROUP BY instructor_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade = 'B' AND enrolled_year = 2019;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT instructor_name, SUM(CAST(grade AS INT)) AS total_grades FROM Instructors INNER JOIN Courses ON Instructors.instructor_id = Courses.instructor_id INNER JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY instructor_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, count(DISTINCT course_id) AS num_courses_taken FROM Students INNER JOIN Enrollments ON Students.student_id = Enrollments.student_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, AVG(CAST(grade AS FLOAT)) AS avg_grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, MAX(CAST(grade AS INT)) AS max_grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT instructor_name, AVG(CAST(grade AS FLOAT)) AS avg_grade FROM Instructors INNER JOIN Courses ON Instructors.instructor_id = Courses.instructor_id INNER JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY instructor_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, COUNT(course_id) AS num_courses FROM Students INNER JOIN Enrollments ON Students.student_id = Enrollments.student_id GROUP BY student_name HAVING num_courses > 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, MAX(enrollment_date) AS latest_enrollment FROM Students INNER JOIN Enrollments ON Students.student_id = Enrollments.student_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE enrolled_year = 2020;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT department, COUNT(instructor_id) AS num_instructors FROM Instructors GROUP BY department;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT major, AVG(CAST(grade AS FLOAT)) AS avg_grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id GROUP BY major;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id INNER JOIN Courses ON Grades.course_id = Courses.course_id WHERE student_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT instructor_name, course_name, grade FROM Instructors INNER JOIN Courses ON Instructors.instructor_id = Courses.instructor_id INNER JOIN Grades ON Courses.course_id = Grades.course_id WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, SUM(CAST(grade AS INT)) AS total_grades FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR,\n    enrolled_year INT,\n    major VARCHAR\n)\n\nCREATE TABLE Courses (\n    course_id UUID PRIMARY KEY,\n    course_name VARCHAR,\n    course_description TEXT,\n    instructor_id UUID\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    enrollment_date DATE\n)\n\nCREATE TABLE Grades (\n    grade_id UUID PRIMARY KEY,\n    student_id UUID,\n    course_id UUID,\n    grade CHAR(1)\n)\n\nCREATE TABLE Instructors (\n    instructor_id UUID PRIMARY KEY,\n    instructor_name VARCHAR,\n    department VARCHAR\n)\n\n### STATEMENT\n\nSELECT department, AVG(CAST(grade AS FLOAT)) AS avg_grade FROM Instructors INNER JOIN Courses ON Instructors.instructor_id = Courses.instructor_id INNER JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY department;"
]