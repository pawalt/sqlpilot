[
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_name, instructor, class_time FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT room_number, enrollment_limit, current_enrollment FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE enrollment_limit > current_enrollment;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_name, instructor FROM course_schedule WHERE enrollment_limit > current_enrollment;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, class_time FROM course_schedule WHERE enrollment_limit < current_enrollment;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE instructor = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_name, room_number FROM course_schedule WHERE instructor = 'Jane Doe';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE instructor LIKE '%Johnson%';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_id, instructor FROM course_schedule WHERE room_number = 'A101';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT instructor, class_time FROM course_schedule WHERE room_number = 'B202';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE class_time BETWEEN '08:00:00' AND '12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_id, current_enrollment FROM course_schedule WHERE class_time < '10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule ORDER BY enrollment_limit DESC;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_id, course_name FROM course_schedule ORDER BY current_enrollment ASC;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT DISTINCT instructor FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT instructor) AS total_instructors FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT AVG(enrollment_limit) AS avg_enrollment_limit FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT MAX(current_enrollment) AS max_current_enrollment FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE course_id = 101 AND instructor = 'John Doe'",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_name, instructor, class_time FROM course_schedule WHERE room_number = '101A'",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE enrollment_limit > current_enrollment",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_id, instructor FROM course_schedule WHERE enrollment_limit - current_enrollment > 10",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_name, room_number FROM course_schedule WHERE current_enrollment < enrollment_limit AND room_number LIKE '2%'",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE course_id = 105 OR instructor = 'Jane Smith'",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT DISTINCT instructor FROM course_schedule",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_name, class_time FROM course_schedule ORDER BY class_time ASC",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_id, enrollment_limit FROM course_schedule ORDER BY enrollment_limit DESC",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_name, instructor FROM course_schedule WHERE current_enrollment >= 20 AND enrollment_limit <= 30",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_id, room_number FROM course_schedule WHERE room_number IN ('101A', '102B', '103C')",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE course_name LIKE 'Math%'",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT DISTINCT room_number FROM course_schedule WHERE room_number IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_id, enrollment_limit, current_enrollment FROM course_schedule WHERE enrollment_limit BETWEEN 20 AND 50",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE course_id = 102 AND instructor != 'John Doe'",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_name, room_number FROM course_schedule WHERE room_number = '201B' AND enrollment_limit > 25",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_id, instructor, current_enrollment FROM course_schedule WHERE current_enrollment < 15",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT course_name, class_time FROM course_schedule WHERE class_time > '10:00:00'",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  class_time TIME NOT NULL,\n  room_number VARCHAR(10) NOT NULL,\n  enrollment_limit INT NOT NULL,\n  current_enrollment INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE room_number LIKE '%B'",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Course_Schedule;",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name FROM Course_Schedule WHERE instructor = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor FROM Course_Schedule WHERE course_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, grade FROM Class_Roster WHERE course_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Class_Roster WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Class_Roster JOIN Course_Schedule ON Class_Roster.course_id = Course_Schedule.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, course_name FROM Class_Roster JOIN Course_Schedule ON Class_Roster.course_id = Course_Schedule.course_id WHERE student_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, grade FROM Class_Roster JOIN Course_Schedule ON Class_Roster.course_id = Course_Schedule.course_id WHERE grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor FROM Course_Schedule ORDER BY course_time DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor FROM Course_Schedule WHERE course_id IN (101, 102, 103);",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_courses FROM Course_Schedule;",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT AVG(course_id) AS avg_course_id FROM Course_Schedule;",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT MAX(course_time) AS latest_course_time FROM Course_Schedule;",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT MIN(course_time) AS earliest_course_time FROM Course_Schedule;",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT instructor FROM Course_Schedule;",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, COUNT(*) AS course_count FROM Class_Roster GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, SUM(CASE WHEN grade = 'A' THEN 1 ELSE 0 END) AS total_a_grades, SUM(CASE WHEN grade = 'B' THEN 1 ELSE 0 END) AS total_b_grades FROM Class_Roster GROUP BY course_id;",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, AVG(grade) AS avg_grade FROM Class_Roster GROUP BY course_id HAVING count(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, student_name, grade FROM Class_Roster JOIN Course_Schedule ON Class_Roster.course_id = Course_Schedule.course_id WHERE student_name = 'Alice' AND grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, course_name, grade FROM Class_Roster JOIN Course_Schedule ON Class_Roster.course_id = Course_Schedule.course_id WHERE course_time BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, course_time, instructor FROM Course_Schedule WHERE course_time BETWEEN '2022-01-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, grade FROM Class_Roster WHERE course_id = 101",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_courses FROM Course_Schedule",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM Course_Schedule INNER JOIN Class_Roster ON Course_Schedule.course_id = Class_Roster.course_id",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT AVG(course_time) AS avg_course_time FROM Course_Schedule",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT MAX(course_time) AS latest_course_time FROM Course_Schedule",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, COUNT(*) AS total_students FROM Class_Roster INNER JOIN Course_Schedule ON Class_Roster.course_id = Course_Schedule.course_id GROUP BY course_name",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, count(course_id) AS total_courses FROM Class_Roster GROUP BY student_name HAVING COUNT(course_id) > 1",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, instructor, grade FROM Course_Schedule LEFT JOIN Class_Roster ON Course_Schedule.course_id = Class_Roster.course_id",
  "### TABLEDATA\n\nCREATE TABLE Course_Schedule (\n  course_id INT PRIMARY KEY,\n  course_name TEXT,\n  course_time TIMESTAMP,\n  instructor TEXT\n);\n\n\nCREATE TABLE Class_Roster (\n  student_id INT PRIMARY KEY,\n  student_name TEXT,\n  course_id INT,\n  grade TEXT,\n  FOREIGN KEY (course_id) REFERENCES Course_Schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_time FROM Course_Schedule RIGHT JOIN Class_Roster ON Course_Schedule.course_id = Class_Roster.course_id",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE course_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name FROM course_schedule WHERE instructor_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_name, start_date, end_date FROM course_schedule WHERE instructor_name = 'Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE start_date <= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_name, instructor_name FROM course_schedule WHERE end_date > '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE course_id BETWEEN 1 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name FROM course_schedule WHERE start_date >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE instructor_name LIKE 'M%';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_name, instructor_name, start_date FROM course_schedule WHERE end_date <= '2022-07-01';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE instructor_name <> 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_name, end_date FROM course_schedule WHERE start_date = '2022-08-15';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE instructor_name IN ('Jane Smith', 'Alice Brown');",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, start_date, end_date FROM course_schedule WHERE course_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name FROM course_schedule WHERE start_date <> '2022-09-01';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE course_id > 10;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_name, end_date FROM course_schedule WHERE end_date < '2022-10-01';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE instructor_name = 'Alice Brown' OR instructor_name = 'David Lee';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, instructor_name FROM course_schedule WHERE start_date < '2022-11-01';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE course_id = 7 AND instructor_name = 'David Lee';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_name, end_date FROM course_schedule WHERE start_date > '2022-12-01';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name FROM course_schedule WHERE start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_name, instructor_name FROM course_schedule WHERE instructor_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, start_date FROM course_schedule WHERE end_date < '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE instructor_name LIKE 'Dr%';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name, start_date FROM course_schedule WHERE end_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name, start_date, end_date FROM course_schedule WHERE course_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(course_id) FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name FROM course_schedule WHERE course_name LIKE '%Engineering%';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT instructor_name FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name FROM course_schedule ORDER BY start_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(end_date, start_date)) AS avg_duration FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, COUNT(*) AS num_courses FROM course_schedule GROUP BY course_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name FROM course_schedule WHERE start_date < '2022-12-31' AND end_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name FROM course_schedule WHERE course_id IN (101, 203, 305);",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name FROM course_schedule WHERE instructor_name IN ('Jane Smith', 'Mike Johnson');",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name FROM course_schedule WHERE start_date = '2022-07-01' OR end_date = '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name FROM course_schedule WHERE start_date <= '2022-06-15';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name FROM course_schedule WHERE instructor_name <> 'Mary Brown';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name FROM course_schedule WHERE start_date > '2022-01-01' AND instructor_name NOT LIKE '%Professor%';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor_name VARCHAR(255) NOT NULL,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(DATEDIFF(end_date, start_date)) AS max_duration FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, schedule_time FROM course_schedule WHERE instructor = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM class_roster;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, course_id FROM class_roster WHERE course_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM enrollment_information;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT enrollment_id, student_id, course_id FROM enrollment_information WHERE enrollment_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM course_planning;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT plan_id, course_id, plan_description FROM course_planning WHERE plan_date > '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_schedule.course_name, enrollment_information.enrollment_date FROM course_schedule JOIN enrollment_information ON course_schedule.course_id = enrollment_information.course_id;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_schedule.course_name, class_roster.student_name FROM course_schedule JOIN class_roster ON course_schedule.course_id = class_roster.course_id;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT enrollment_information.enrollment_id, course_planning.plan_description FROM enrollment_information JOIN course_planning ON enrollment_information.course_id = course_planning.course_id;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_schedule.course_name, enrollment_information.enrollment_date, class_roster.student_name FROM course_schedule JOIN enrollment_information ON course_schedule.course_id = enrollment_information.course_id JOIN class_roster ON enrollment_information.student_id = class_roster.student_id;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE course_id IN (SELECT course_id FROM class_roster WHERE student_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, COUNT(*) AS total_enrollments FROM course_schedule JOIN enrollment_information ON course_schedule.course_id = enrollment_information.course_id GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, SUM(enrollment_information.enrollment_id) AS total_entries FROM course_schedule JOIN enrollment_information ON course_schedule.course_id = enrollment_information.course_id GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, AVG(enrollment_information.enrollment_id) AS avg_entries FROM course_schedule JOIN enrollment_information ON course_schedule.course_id = enrollment_information.course_id GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_planning.plan_date, COUNT(*) AS total_plans FROM course_planning GROUP BY plan_date;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_schedule.course_name, MAX(enrollment_information.enrollment_date) AS latest_enrollment FROM course_schedule JOIN enrollment_information ON course_schedule.course_id = enrollment_information.course_id GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, COUNT(*) AS total_students FROM class_roster GROUP BY course_id HAVING COUNT(*) > 10;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE course_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM course_schedule WHERE schedule_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM class_roster JOIN course_schedule ON class_roster.course_id = course_schedule.course_id;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, enrollment_date FROM class_roster JOIN enrollment_information ON class_roster.student_id = enrollment_information.student_id;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, plan_description FROM course_schedule JOIN course_planning ON course_schedule.course_id = course_planning.course_id;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, enrollment_date FROM course_schedule JOIN enrollment_information ON course_schedule.course_id = enrollment_information.course_id;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, instructor FROM class_roster JOIN course_schedule ON class_roster.course_id = course_schedule.course_id WHERE instructor = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, enrollment_date FROM enrollment_information JOIN course_schedule ON enrollment_information.course_id = course_schedule.course_id WHERE enrollment_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, plan_description FROM class_roster JOIN course_planning ON class_roster.course_id = course_planning.course_id;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, enrollment_date, plan_description FROM class_roster JOIN enrollment_information ON class_roster.student_id = enrollment_information.student_id JOIN course_planning ON enrollment_information.course_id = course_planning.course_id;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT course_name FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, enrollment_date FROM enrollment_information JOIN class_roster ON enrollment_information.student_id = class_roster.student_id WHERE course_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, enrollment_date FROM enrollment_information JOIN class_roster ON enrollment_information.student_id = class_roster.student_id JOIN course_schedule ON enrollment_information.course_id = course_schedule.course_id;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM course_schedule WHERE course_id IN (SELECT course_id FROM enrollment_information WHERE enrollment_date > '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM class_roster JOIN course_schedule ON class_roster.course_id = course_schedule.course_id WHERE course_schedule.instructor = 'Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT plan_description, plan_date FROM course_planning WHERE course_id = (SELECT course_id FROM course_schedule WHERE course_name = 'Mathematics');",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM enrollment_information WHERE enrollment_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT student_name FROM class_roster WHERE student_id NOT IN (SELECT student_id FROM enrollment_information);",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, instructor, schedule_time FROM course_schedule WHERE course_name LIKE '%Science%';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  instructor VARCHAR(255),\n  schedule_time DATETIME\n);\n\nCREATE TABLE class_roster (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  course_id INT,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  FOREIGN KEY (student_id) REFERENCES class_roster(student_id),\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\nCREATE TABLE course_planning (\n  plan_id INT PRIMARY KEY,\n  course_id INT,\n  plan_description TEXT,\n  plan_date DATE,\n  FOREIGN KEY (course_id) REFERENCES course_schedule(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM class_roster JOIN course_schedule ON class_roster.course_id = course_schedule.course_id WHERE course_name LIKE '%English%' AND student_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, course_time FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT instructor_name FROM course_schedule;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name FROM course_schedule WHERE room_number = 101;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM class_roster;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT course_id, student_name FROM class_roster WHERE enrollment_status = 'Enrolled';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM class_roster WHERE course_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM enrollment_information;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, enrollment_date FROM enrollment_information WHERE enrollment_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM student;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, student_email FROM student WHERE major = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT graduation_year FROM student WHERE student_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM course;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT course_id, course_name FROM course WHERE department = 'Mathematics';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT credits, course_description FROM course WHERE course_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM course_schedule JOIN class_roster ON course_schedule.course_id = class_roster.course_id;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT course_schedule.course_id, course_name, student_name FROM course_schedule JOIN class_roster ON course_schedule.course_id = class_roster.course_id WHERE enrollment_status = 'Enrolled';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM class_roster JOIN enrollment_information ON class_roster.student_id = enrollment_information.student_id;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, enrollment_status FROM class_roster JOIN enrollment_information ON class_roster.student_id = enrollment_information.student_id WHERE enrollment_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM student JOIN enrollment_information ON student.student_id = enrollment_information.student_id WHERE enrollment_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM course_schedule WHERE room_number = 101;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT course_name, instructor_name FROM course_schedule WHERE course_time > '12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT student_name, enrollment_status FROM class_roster WHERE course_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM enrollment_information WHERE enrollment_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT student_name, student_email FROM student WHERE major = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT course_name, credits FROM course WHERE department = 'Mathematics';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT enrollment_status, enrollment_date FROM enrollment_information WHERE student_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT course_time, instructor_name FROM course_schedule WHERE course_id = 2001;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM class_roster WHERE student_id = 2001 AND course_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, course_id FROM enrollment_information WHERE enrollment_status = 'Enrolled';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT student_name, major FROM student WHERE graduation_year = 2023;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM course WHERE credits > 3;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT course_id, course_name FROM course_schedule WHERE room_number IN (101, 102, 103);",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT instructor_name, room_number FROM course_schedule WHERE course_id = 3001;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT course_name, credits FROM course WHERE department = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM enrollment_information WHERE enrollment_status = 'Waitlisted';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT student_name, graduation_year FROM student WHERE major = 'Biology';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM class_roster WHERE enrollment_status = 'Enrolled';",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT course_name, course_description FROM course WHERE credits >= 4;",
  "### TABLEDATA\n\nCREATE TABLE course_schedule (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  course_time TIME,\n  instructor_name VARCHAR(255),\n  room_number INT\n);\n\n\nCREATE TABLE class_roster (\n  roster_id INT PRIMARY KEY,\n  course_id INT,\n  student_id INT,\n  student_name VARCHAR(255),\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE enrollment_information (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE,\n  enrollment_status VARCHAR(50)\n);\n\n\nCREATE TABLE student (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR(255),\n  student_email VARCHAR(255),\n  major VARCHAR(100),\n  graduation_year INT\n);\n\n\nCREATE TABLE course (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  department VARCHAR(100),\n  credits INT,\n  course_description TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, enrollment_date FROM enrollment_information WHERE course_id = 4001;"
]