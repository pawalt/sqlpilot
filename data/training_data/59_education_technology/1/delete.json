[
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nDELETE FROM student_assessment_data WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nDELETE FROM student_assessment_data WHERE student_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nDELETE FROM student_assessment_data WHERE assessment_score < 50;",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nDELETE FROM student_assessment_data WHERE student_id = 1001 AND assessment_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nDELETE FROM student_assessment_data WHERE assessment_score < 60;",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nDELETE FROM student_assessment_data WHERE assessment_date > '2022-01-01' AND assessment_score BETWEEN 70 AND 90;",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nDELETE FROM student WHERE student_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nDELETE FROM assessment WHERE assessment_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nDELETE FROM assessment WHERE student_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nDELETE FROM student WHERE student_id = '9e601b79-24c5-4f1b-94a9-c68a47b99f97';",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nDELETE FROM assessment WHERE score < 70;",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nDELETE FROM student WHERE enrollment_date < '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nDELETE FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nDELETE FROM assessments WHERE assessment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nDELETE FROM courses WHERE course_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nDELETE FROM students WHERE student_id = 1",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nDELETE FROM assessments WHERE assessment_date < '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nDELETE FROM courses WHERE course_name LIKE '%Math%'",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nDELETE FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nDELETE FROM courses WHERE course_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nDELETE FROM assessments WHERE assessment_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nDELETE FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nDELETE FROM assessments WHERE course_id IN (SELECT course_id FROM courses WHERE department = 'Computer Science');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nDELETE FROM student_scores WHERE assessment_id = 101 AND date_taken < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nDELETE FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nDELETE FROM assessments WHERE assessment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nDELETE FROM student_assessments WHERE student_id = 1 AND assessment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nDELETE FROM student_assessments WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nDELETE FROM assessments WHERE assessment_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nDELETE FROM student_performance WHERE student_id = 2 AND grade_id = 1;"
]