[
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (1, '2022-08-15', 85.5);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (2, '2022-08-16', 90.0);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (3, '2022-08-17', 75.25);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (4, '2022-08-18', 88.75);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (5, '2022-08-19', 92.5);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (6, '2022-08-20', 80.0);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (7, '2022-08-21', 87.0);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (8, '2022-08-22', 79.25);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (9, '2022-08-23', 83.5);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (10, '2022-08-24', 95.0);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (11, '2022-08-25', 70.75);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (12, '2022-08-26', 84.25);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (13, '2022-08-27', 89.75);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (14, '2022-08-28', 82.0);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (15, '2022-08-29', 91.5);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (16, '2022-08-30', 76.5);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (17, '2022-08-31', 88.0);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (18, '2022-09-01', 78.75);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (19, '2022-09-02', 85.0);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (20, '2022-09-03', 92.75);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (1, '2022-01-15', 85.5);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (2, '2022-01-16', 92.3);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (3, '2022-01-17', 78.9);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (4, '2022-01-18', 65.7);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (5, '2022-01-19', 70.1);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (6, '2022-01-20', 88.6);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (7, '2022-01-21', 76.4);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (8, '2022-01-22', 82.2);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (9, '2022-01-23', 90.8);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (10, '2022-01-24', 79.5);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (11, '2022-01-25', 87.3);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (12, '2022-01-26', 95.2);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (13, '2022-01-27', 73.6);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (14, '2022-01-28', 68.9);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (15, '2022-01-29', 84.7);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (16, '2022-01-30', 91.4);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (17, '2022-01-31', 77.8);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (18, '2022-02-01', 82.9);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (19, '2022-02-02', 69.2);",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO student_assessment_data (student_id, assessment_date, assessment_score) VALUES (20, '2022-02-03', 75.6);",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('9a8b3c29-6e5f-4e3c-b406-0bc3a4c1dc17', 'Alice', '2022-01-15', 'Computer Science');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('3f975b6e-54d2-48ab-9802-95b29b336887', 'Bob', '2021-09-20', 'Mathematics');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('67ea8396-f6c9-482f-a8a8-750e0c5a59a4', 'Charlie', '2023-03-10', 'Physics');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('bded55c2-9287-47e3-aa5c-65687b2d25f6', 'David', '2020-11-05', 'Biology');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('f91da2e1-f69f-4826-8fd5-74cb624c0457', 'Eve', '2021-07-30', 'Chemistry');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('6ceb46b3-60a9-4e7d-8ed5-9e365bd91f3d', 'Frank', '2022-04-25', 'Engineering');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('ed02f3dd-d3ff-44d9-86a6-06a72e614023', 'Grace', '2020-02-12', 'History');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('cb2ee3f5-7d83-407d-9915-9dc2795c9fdc', 'Helen', '2023-01-08', 'Geology');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('2c23e1a1-dd24-4433-9e10-872e90aa8e22', 'Ivan', '2022-08-15', 'Languages');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('b7e07c6d-c706-4f4e-88ab-e27e09a679b0', 'Julia', '2021-06-03', 'Art');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('f2b41a5e-7a4e-4753-ba5e-220466716187', '9a8b3c29-6e5f-4e3c-b406-0bc3a4c1dc17', 90, '2022-03-05', 'Math');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('efa4ac01-4daa-4bc1-a348-a1b2a334bae4', '3f975b6e-54d2-48ab-9802-95b29b336887', 85, '2021-12-10', 'Science');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('95157d15-aae3-449e-9b90-6fe185edc39a', '67ea8396-f6c9-482f-a8a8-750e0c5a59a4', 95, '2023-04-20', 'Physics');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('fdf2a39e-0b7c-4135-9235-0d3f4334b243', 'bded55c2-9287-47e3-aa5c-65687b2d25f6', 88, '2020-11-30', 'Biology');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('1443ecc4-2782-4d67-995d-6bd99704a91c', 'f91da2e1-f69f-4826-8fd5-74cb624c0457', 92, '2021-08-15', 'Chemistry');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('c4e8f35e-0a29-47f5-9c4b-ff803ccf69e2', '6ceb46b3-60a9-4e7d-8ed5-9e365bd91f3d', 87, '2022-05-10', 'Engineering');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('ee480bb6-ba8d-4d1d-8b6f-3807d8c801d1', 'ed02f3dd-d3ff-44d9-86a6-06a72e614023', 78, '2020-03-25', 'History');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('0a8c9299-8db3-4c5e-9bbd-8f465cfbcd84', 'cb2ee3f5-7d83-407d-9915-9dc2795c9fdc', 91, '2023-02-15', 'Geology');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('ef669a04-1d91-4bca-8a0c-86eaba27579d', '2c23e1a1-dd24-4433-9e10-872e90aa8e22', 83, '2022-09-30', 'Languages');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('c9f45454-6fa2-4c5f-bd3a-004f5daadf1d', 'b7e07c6d-c706-4f4e-88ab-e27e09a679b0', 80, '2021-07-15', 'Art');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('c94a91ae-1cbf-4f2b-a40a-4adb839ef301', 'John Doe', '2022-01-15', 'Computer Science');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('f408ad39-3e78-4f20-9bc8-73c20f58f921', 'Jane Smith', '2022-02-20', 'Biology');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('c83b24ee-9cd6-4d69-94a4-7363cc0d4e11', 'Alice Johnson', '2022-03-10', 'Mathematics');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('bae6556b-9e41-472e-b36c-6b961678d6ca', 'Bob Brown', '2022-04-05', 'Art');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('e5ea4b52-c806-470a-bb10-8c91e55af296', 'Sarah Wilson', '2022-05-12', 'Chemistry');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('f1a308b2-ae1c-4d88-baae-c97110bc113f', 'David Lee', '2022-06-18', 'Physics');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('d53f4fdb-d970-49e3-809d-803ddb05a8c9', 'Emily Brown', '2022-07-25', 'History');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('b0be7e86-f3c1-4755-a96a-3a83a15f81d7', 'Michael Johnson', '2022-08-30', 'English');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('04769b35-3ad2-4750-a9a3-3ec8fd2a36a9', 'Olivia Davis', '2022-09-06', 'Psychology');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO student (student_id, student_name, enrollment_date, major) VALUES ('a4ce63c2-5171-4dc9-b3c0-c1709294b4cd', 'James Wilson', '2022-10-11', 'Sociology');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('df78a0dc-4516-49aa-8481-86ef8a4b44e4', 'c94a91ae-1cbf-4f2b-a40a-4adb839ef301', 85, '2022-01-20', 'Mathematics');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('bc827c53-429d-46cf-b83d-7c509361506d', 'f408ad39-3e78-4f20-9bc8-73c20f58f921', 92, '2022-02-25', 'Biology');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('fa966e95-b7d0-4b00-9b7c-0160fc8e75da', 'c83b24ee-9cd6-4d69-94a4-7363cc0d4e11', 78, '2022-03-30', 'Computer Science');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('d33d8c5f-d496-4d5d-9cb8-e803aedefe92', 'bae6556b-9e41-472e-b36c-6b961678d6ca', 87, '2022-04-10', 'Art');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('f5cd4f5c-0282-4987-8a6d-52ce3056e64b', 'e5ea4b52-c806-470a-bb10-8c91e55af296', 79, '2022-05-15', 'Chemistry');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('9028e025-157f-4b5b-a9c1-3813e26c6cb7', 'f1a308b2-ae1c-4d88-baae-c97110bc113f', 94, '2022-06-20', 'Physics');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('c11e171b-3490-454b-9681-799e2f1f394d', 'd53f4fdb-d970-49e3-809d-803ddb05a8c9', 82, '2022-07-30', 'History');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('b8316a01-2350-48eb-9033-f2ec7e799a1e', 'b0be7e86-f3c1-4755-a96a-3a83a15f81d7', 90, '2022-08-05', 'English');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('671b5cb1-10a7-4380-b42a-416124ef5574', '04769b35-3ad2-4750-a9a3-3ec8fd2a36a9', 85, '2022-09-10', 'Psychology');",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO assessment (assessment_id, student_id, score, assessment_date, subject) VALUES ('d076d0f1-296e-403c-a2ad-b2f8e546e7a6', 'a4ce63c2-5171-4dc9-b3c0-c1709294b4cd', 88, '2022-10-15', 'Sociology');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (1, 'Alice', '2021-01-15');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (2, 'Bob', '2021-02-20');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (3, 'Charlie', '2021-03-25');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (4, 'David', '2021-04-30');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (5, 'Eve', '2021-05-05');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (6, 'Frank', '2021-06-10');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (7, 'Grace', '2021-07-15');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (8, 'Harry', '2021-08-20');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (9, 'Ivy', '2021-09-25');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (10, 'Jack', '2021-10-30');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_description) VALUES (1, 'Mathematics', 'Introduction to Algebra');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_description) VALUES (2, 'Science', 'Biology Basics');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_description) VALUES (3, 'History', 'World History Overview');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_description) VALUES (4, 'English', 'Literature Appreciation');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_description) VALUES (5, 'Computer Science', 'Programming Fundamentals');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, student_id, assessment_date, score) VALUES (1, 1, '2021-07-01', 85);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, student_id, assessment_date, score) VALUES (2, 2, '2021-07-05', 78);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, student_id, assessment_date, score) VALUES (3, 3, '2021-07-10', 92);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, student_id, assessment_date, score) VALUES (4, 4, '2021-07-15', 88);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, student_id, assessment_date, score) VALUES (5, 5, '2021-07-20', 95);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (1, 'Alice', '2021-01-15');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (2, 'Bob', '2020-11-20');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (3, 'Charlie', '2021-03-05');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, student_id, assessment_date, score) VALUES (1, 1, '2021-02-10', 85);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, student_id, assessment_date, score) VALUES (2, 2, '2021-01-20', 92);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, student_id, assessment_date, score) VALUES (3, 3, '2021-03-10', 78);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_description) VALUES (1, 'Mathematics', 'Introduction to Mathematics course');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_description) VALUES (2, 'Science', 'General Science course');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_description) VALUES (3, 'History', 'World History course');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (4, 'David', '2021-04-15');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (5, 'Eva', '2021-02-20');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (6, 'Frank', '2021-05-01');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, student_id, assessment_date, score) VALUES (4, 4, '2021-05-10', 79);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, student_id, assessment_date, score) VALUES (5, 5, '2021-03-20', 88);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, student_id, assessment_date, score) VALUES (6, 6, '2021-06-05', 91);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_description) VALUES (4, 'English', 'Advanced English course');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_description) VALUES (5, 'Physics', 'Physics principles course');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, course_description) VALUES (6, 'Geography', 'Geography and mapping course');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (7, 'Grace', '2021-07-15');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (8, 'Henry', '2021-08-20');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, enrollment_date) VALUES (9, 'Ivy', '2021-09-01');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, first_name, last_name, date_of_birth) VALUES (1, 'John', 'Doe', '2000-01-01');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, first_name, last_name, date_of_birth) VALUES (2, 'Jane', 'Smith', '1999-05-15');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, first_name, last_name, date_of_birth) VALUES (3, 'Michael', 'Johnson', '2001-08-20');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, first_name, last_name, date_of_birth) VALUES (4, 'Emily', 'Brown', '1998-12-10');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, first_name, last_name, date_of_birth) VALUES (5, 'William', 'Taylor', '2002-03-25');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, instructor, department) VALUES (1, 'Mathematics', 'Professor Smith', 'Math');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, instructor, department) VALUES (2, 'History', 'Professor Johnson', 'Social Studies');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, instructor, department) VALUES (3, 'Science', 'Professor White', 'Science');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, instructor, department) VALUES (4, 'Literature', 'Professor Brown', 'Language Arts');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, instructor, department) VALUES (5, 'Computer Science', 'Professor Taylor', 'Computer Science');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, assessment_name, course_id, max_score) VALUES (1, 'Midterm Exam', 1, 100);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, assessment_name, course_id, max_score) VALUES (2, 'Final Exam', 1, 150);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, assessment_name, course_id, max_score) VALUES (3, 'Essay Project', 4, 50);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, assessment_name, course_id, max_score) VALUES (4, 'Lab Experiment', 5, 75);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, assessment_name, course_id, max_score) VALUES (5, 'Quiz 1', 2, 20);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_scores (student_id, assessment_id, score, date_taken) VALUES (1, 1, 85, '2021-05-10');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_scores (student_id, assessment_id, score, date_taken) VALUES (2, 1, 78, '2021-05-10');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_scores (student_id, assessment_id, score, date_taken) VALUES (3, 1, 92, '2021-05-10');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_scores (student_id, assessment_id, score, date_taken) VALUES (4, 1, 65, '2021-05-10');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_scores (student_id, assessment_id, score, date_taken) VALUES (5, 1, 73, '2021-05-10');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, first_name, last_name, date_of_birth) VALUES (1, 'John', 'Doe', '1995-03-15');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, first_name, last_name, date_of_birth) VALUES (2, 'Jane', 'Smith', '1998-07-21');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, first_name, last_name, date_of_birth) VALUES (3, 'Michael', 'Johnson', '1997-09-10');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, first_name, last_name, date_of_birth) VALUES (4, 'Sarah', 'Brown', '1996-01-24');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, instructor, department) VALUES (101, 'Mathematics', 'Prof. Smith', 'Math Department');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, instructor, department) VALUES (102, 'History', 'Prof. Johnson', 'History Department');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, instructor, department) VALUES (103, 'Science', 'Prof. White', 'Science Department');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, instructor, department) VALUES (104, 'Literature', 'Prof. Brown', 'Literature Department');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, assessment_name, course_id, max_score) VALUES (201, 'Midterm Exam', 101, 100);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, assessment_name, course_id, max_score) VALUES (202, 'Final Exam', 101, 150);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, assessment_name, course_id, max_score) VALUES (203, 'Term Paper', 104, 50);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_id, assessment_name, course_id, max_score) VALUES (204, 'Lab Experiment', 103, 50);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_scores (student_id, assessment_id, score, date_taken) VALUES (1, 201, 90, '2022-05-10');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_scores (student_id, assessment_id, score, date_taken) VALUES (1, 202, 140, '2022-12-15');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_scores (student_id, assessment_id, score, date_taken) VALUES (2, 201, 95, '2022-05-12');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_scores (student_id, assessment_id, score, date_taken) VALUES (2, 202, 145, '2022-12-18');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_scores (student_id, assessment_id, score, date_taken) VALUES (3, 201, 80, '2022-05-14');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_scores (student_id, assessment_id, score, date_taken) VALUES (3, 202, 130, '2022-12-20');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_scores (student_id, assessment_id, score, date_taken) VALUES (4, 203, 45, '2022-07-08');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_scores (student_id, assessment_id, score, date_taken) VALUES (4, 204, 40, '2022-08-14');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Alice', 10);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Bob', 9);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Charlie', 11);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('David', 12);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Eve', 10);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Frank', 9);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Grace', 11);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Henry', 12);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Ivy', 10);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Jack', 9);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Katie', 11);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Leo', 12);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Maria', 10);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Nick', 9);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Olivia', 11);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Peter', 12);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Quinn', 10);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Rose', 9);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Sam', 11);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Tom', 12);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Alice', 10);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Bob', 9);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('Charlie', 11);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO students (student_name, student_grade) VALUES ('David', 8);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_name, assessment_date, total_marks) VALUES ('Midterm Exam', '2023-03-15', 100);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_name, assessment_date, total_marks) VALUES ('Final Exam', '2023-06-10', 150);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO assessments (assessment_name, assessment_date, total_marks) VALUES ('Project Presentation', '2023-04-20', 50);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_assessments (student_id, assessment_id, marks_obtained) VALUES (1, 1, 85);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_assessments (student_id, assessment_id, marks_obtained) VALUES (2, 1, 78);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_assessments (student_id, assessment_id, marks_obtained) VALUES (3, 1, 92);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_assessments (student_id, assessment_id, marks_obtained) VALUES (4, 1, 70);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO grades (grade_name) VALUES ('A');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO grades (grade_name) VALUES ('B');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO grades (grade_name) VALUES ('C');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, grade_id, assessment_id, overall_performance) VALUES (1, 1, 1, 'Excellent');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, grade_id, assessment_id, overall_performance) VALUES (2, 2, 1, 'Good');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, grade_id, assessment_id, overall_performance) VALUES (3, 1, 1, 'Excellent');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, grade_id, assessment_id, overall_performance) VALUES (4, 3, 1, 'Average');"
]