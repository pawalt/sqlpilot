[
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE student_assessment_data;",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE student_assessment_data;",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE student_assessment_data RESTART IDENTITY CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE student_assessment_data (\n  student_id INT PRIMARY KEY,\n  assessment_date DATE,\n  assessment_score FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE student_assessment_data RESTART IDENTITY CONTINUE IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE student;",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE assessment;",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE student CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE assessment CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE student (\n    student_id UUID PRIMARY KEY,\n    student_name VARCHAR(255) NOT NULL,\n    enrollment_date DATE,\n    major VARCHAR(50)\n);\n\nCREATE TABLE assessment (\n    assessment_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student(student_id),\n    score INT NOT NULL,\n    assessment_date DATE,\n    subject VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE student CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE assessments;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE assessments;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    enrollment_date DATE\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    student_id INT,\n    assessment_date DATE,\n    score INT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description VARCHAR(255)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE assessments;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    date_of_birth DATE\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(100),\n    instructor VARCHAR(50),\n    department VARCHAR(50)\n);\n\nCREATE TABLE assessments (\n    assessment_id INT PRIMARY KEY,\n    assessment_name VARCHAR(100),\n    course_id INT REFERENCES courses(course_id),\n    max_score INT\n);\n\nCREATE TABLE student_scores (\n    student_id INT REFERENCES students(student_id),\n    assessment_id INT REFERENCES assessments(assessment_id),\n    score INT,\n    date_taken DATE,\n    PRIMARY KEY (student_id, assessment_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE assessments;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE assessments;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE student_assessments;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE student_performance;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE student_assessments;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    student_grade INTEGER\n);\n\nCREATE TABLE assessments (\n    assessment_id SERIAL PRIMARY KEY,\n    assessment_name VARCHAR(50) NOT NULL,\n    assessment_date DATE,\n    total_marks INTEGER\n);\n\nCREATE TABLE student_assessments (\n    student_id INTEGER,\n    assessment_id INTEGER,\n    marks_obtained INTEGER,\n    PRIMARY KEY (student_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\nCREATE TABLE grades (\n    grade_id SERIAL PRIMARY KEY,\n    grade_name VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE student_performance (\n    student_id INTEGER,\n    grade_id INTEGER,\n    assessment_id INTEGER,\n    overall_performance VARCHAR(20),\n    PRIMARY KEY (student_id, grade_id, assessment_id),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (grade_id) REFERENCES grades(grade_id),\n    FOREIGN KEY (assessment_id) REFERENCES assessments(assessment_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE assessments;"
]