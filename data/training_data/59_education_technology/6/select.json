[
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT * FROM communication_system;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT id, message, sender, receiver FROM communication_system;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT id, sender, receiver, send_date FROM communication_system WHERE read_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT * FROM communication_system WHERE sender = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT id, receiver, send_date FROM communication_system WHERE sender = 'Bob';",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT id, sender, receiver, send_date FROM communication_system WHERE read_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, receiver FROM communication_system WHERE send_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, receiver, send_date FROM communication_system WHERE message LIKE '%urgent%';",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT * FROM communication_system WHERE sender = 'Charlie' AND receiver = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, receiver, send_date FROM communication_system WHERE sender = 'David' OR receiver = 'Eve';",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT id, send_date FROM communication_system WHERE send_date BETWEEN '2021-01-01' AND '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT id, sender, receiver FROM communication_system WHERE send_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, receiver, send_date FROM communication_system WHERE sender = 'Alice' AND read_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_messages FROM communication_system;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT DISTINCT sender FROM communication_system;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, COUNT(*) AS total_messages FROM communication_system GROUP BY sender;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT receiver, AVG(id) AS avg_message_id FROM communication_system GROUP BY receiver;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT MAX(send_date) AS latest_send_date FROM communication_system;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT MIN(send_date) AS earliest_send_date FROM communication_system;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_message_id FROM communication_system;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT id, sender, receiver FROM communication_system ORDER BY send_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT id, message, sender, receiver, send_date, read_status FROM communication_system WHERE sender = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT id, message, sender, receiver, send_date, read_status FROM communication_system WHERE receiver = 'Bob' AND read_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT id, message, sender, receiver, send_date FROM communication_system WHERE read_status = TRUE ORDER BY send_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT id, sender, receiver, COUNT(*) AS total_messages FROM communication_system GROUP BY sender, receiver HAVING total_messages > 10;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, COUNT(*) AS sent_messages FROM communication_system GROUP BY sender ORDER BY sent_messages DESC;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT receiver, COUNT(*) AS received_messages FROM communication_system GROUP BY receiver ORDER BY received_messages DESC;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, receiver, AVG(EXTRACT(epoch FROM send_date)) AS avg_response_time FROM communication_system GROUP BY sender, receiver;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, MAX(EXTRACT(epoch FROM send_date)) AS latest_sent_time FROM communication_system GROUP BY sender;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT receiver, MIN(EXTRACT(epoch FROM send_date)) AS earliest_received_time FROM communication_system GROUP BY receiver;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, DATE_TRUNC('hour', send_date) AS hour_slot, COUNT(*) AS messages_sent_in_hour FROM communication_system GROUP BY sender, hour_slot ORDER BY sender, hour_slot;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT receiver, DATE_TRUNC('day', send_date) AS day_slot, COUNT(*) AS messages_received_in_day FROM communication_system GROUP BY receiver, day_slot ORDER BY receiver, day_slot;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, receiver, COUNT(*) FILTER (WHERE read_status = TRUE) AS read_messages, COUNT(*) FILTER (WHERE read_status = FALSE) AS unread_messages FROM communication_system GROUP BY sender, receiver;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, receiver, EXTRACT(epoch FROM MAX(send_date) - MIN(send_date)) AS message_time_difference FROM communication_system GROUP BY sender, receiver;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, MAX(EXTRACT(epoch FROM send_date)) - MIN(EXTRACT(epoch FROM send_date)) AS total_message_time FROM communication_system GROUP BY sender;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT receiver, AVG(EXTRACT(epoch FROM send_date) - EXTRACT(epoch FROM send_date)) AS avg_message_response_time FROM communication_system GROUP BY receiver;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, COUNT(*) FILTER (WHERE read_status = FALSE) AS unread_messages FROM communication_system GROUP BY sender HAVING unread_messages > 0;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT receiver, COUNT(*) FILTER (WHERE read_status = FALSE) AS unread_messages FROM communication_system GROUP BY receiver HAVING unread_messages > 0;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, receiver, COUNT(*) AS message_count, MAX(EXTRACT(epoch FROM send_date)) - MIN(EXTRACT(epoch FROM send_date)) AS total_time_span FROM communication_system GROUP BY sender, receiver, total_time_span ORDER BY total_time_span DESC, message_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender, receiver, COUNT(*) AS message_count, AVG(EXTRACT(epoch FROM send_date) - EXTRACT(epoch FROM send_date)) AS avg_response_time FROM communication_system GROUP BY sender, receiver ORDER BY avg_response_time ASC;",
  "### TABLEDATA\n\nCREATE TABLE communication_system (\n  id SERIAL PRIMARY KEY,\n  message TEXT NOT NULL,\n  sender varchar(255) NOT NULL,\n  receiver varchar(255) NOT NULL,\n  send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  read_status BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT sender AS user, receiver AS contact, send_date AS action_date, 'sent' AS action FROM communication_system UNION ALL SELECT receiver, sender, send_date, 'received' FROM communication_system ORDER BY action_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, class_id FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE class_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name FROM Students WHERE class_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, class_id FROM Students WHERE class_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students ORDER BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students ORDER BY student_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(student_id) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(student_id) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(class_id) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT class_id FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students JOIN Messages ON Students.student_id = Messages.sender_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students JOIN Messages ON Students.student_id = Messages.sender_id WHERE class_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students LEFT JOIN Messages ON Students.student_id = Messages.sender_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students RIGHT JOIN Messages ON Students.student_id = Messages.sender_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students INNER JOIN Messages ON Students.student_id = Messages.sender_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students FULL OUTER JOIN Messages ON Students.student_id = Messages.sender_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE class_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, class_id FROM Students WHERE parent_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, message_text FROM Students JOIN Messages ON Students.student_id = Messages.sender_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, message_text FROM Students JOIN Messages ON Students.student_id = Messages.sender_id WHERE Students.class_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, parent_id, message_text FROM Students JOIN Messages ON Students.student_id = Messages.sender_id WHERE Students.class_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT message_id, sender_id, receiver_id, message_text FROM Messages WHERE message_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, parent_id FROM Students WHERE student_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, message_text FROM Students JOIN Messages ON Students.student_id = Messages.sender_id WHERE Students.parent_id = 7;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, class_id FROM Students WHERE class_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, message_text FROM Students JOIN Messages ON Students.student_id = Messages.sender_id WHERE Students.class_id = 1 OR Students.class_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, message_text FROM Students JOIN Messages ON Students.student_id = Messages.sender_id WHERE Students.student_name = 'John' AND Students.class_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, message_text FROM Students JOIN Messages ON Students.student_id = Messages.sender_id WHERE Students.student_name LIKE 'M%' AND Students.parent_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, class_id, parent_id FROM Students WHERE student_id < 100;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, message_text FROM Students JOIN Messages ON Students.student_id = Messages.sender_id WHERE Students.class_id = 3 ORDER BY message_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, parent_id FROM Students WHERE class_id = 1 AND EXISTS (SELECT * FROM Messages WHERE sender_id = student_id);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, message_text FROM Students JOIN Messages ON Students.student_id = Messages.sender_id WHERE Students.parent_id = 7 GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, message_text FROM Students LEFT JOIN Messages ON Students.student_id = Messages.sender_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, message_text FROM Students RIGHT JOIN Messages ON Students.student_id = Messages.receiver_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(student_id) AS total_students, class_id FROM Students GROUP BY class_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT NOT NULL,\n    message_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(student_id) AS avg_student_id, class_id FROM Students GROUP BY class_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, class_id FROM Students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT teacher_name FROM Teachers WHERE teacher_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Parents WHERE parent_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, parent_id FROM Students WHERE class_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_id FROM Students JOIN Teachers ON Students.class_id = Teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students ORDER BY student_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, class_id FROM Students WHERE student_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT teacher_name FROM Teachers WHERE teacher_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE class_id IN (101, 102);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT parent_name FROM Parents WHERE parent_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(student_id) AS max_student_id FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MIN(student_id) AS min_student_id FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_students FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(class_id) AS avg_class_id FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT SUM(student_id) AS total_student_ids FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT class_id FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, class_id FROM Students WHERE student_name IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE student_name IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT class_id, teacher_id FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, parent_name FROM Students JOIN Parents ON Students.parent_id = Parents.parent_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, class_id FROM Students WHERE parent_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT teacher_name FROM Teachers WHERE teacher_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name FROM Students JOIN Teachers ON Students.class_id = Teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name, parent_name FROM Students JOIN Parents ON Students.parent_id = Parents.parent_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name FROM Students WHERE class_id IN (SELECT teacher_id FROM Teachers WHERE teacher_name = 'John');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id, parent_name FROM Students JOIN Parents ON Students.parent_id = Parents.parent_id WHERE student_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(student_id) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT SUM(class_id) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT parent_id FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(class_id) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id FROM Students WHERE student_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MIN(student_id) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM Students LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT teacher_id, teacher_name FROM Teachers WHERE teacher_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT class_id) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_name FROM Students WHERE class_id NOT IN (SELECT teacher_id FROM Teachers);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT parent_id FROM Parents WHERE parent_name IN (SELECT parent_name FROM Students WHERE class_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT teacher_id, teacher_name FROM Teachers ORDER BY teacher_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    class_id INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(class_id) AS avg_class_size, MAX(class_id) AS max_class_size FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, grade_level FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT grade_level FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE grade_level > 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Teachers;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT teacher_name, department FROM Teachers;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT teacher_name FROM Teachers WHERE department = 'Math';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Parents;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT parent_name, email FROM Parents;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT parent_name FROM Parents WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Messages;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT sender_id, receiver_id, message_text FROM Messages;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT message_id, sent_timestamp FROM Messages WHERE receiver_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, grade_level, parent_id FROM Students WHERE grade_level < 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT teacher_name, department FROM Teachers WHERE teacher_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT parent_name, email FROM Parents WHERE parent_id = 20;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT message_text FROM Messages WHERE message_id = 50;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, grade_level FROM Students ORDER BY grade_level DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT teacher_name, department FROM Teachers ORDER BY teacher_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT parent_name, email FROM Parents ORDER BY email DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT sender_id, receiver_id, sent_timestamp FROM Messages ORDER BY sent_timestamp ASC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, grade_level FROM Students WHERE grade_level > 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, parent_id, parent_name FROM Students s JOIN Parents p ON s.parent_id = p.parent_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT teacher_name, department FROM Teachers;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT teacher_name FROM Teachers WHERE department = 'Math';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT teacher_name, parent_name FROM Teachers t JOIN Parents p ON t.teacher_id = p.parent_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Parents;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT parent_name FROM Parents WHERE parent_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT message_text FROM Messages WHERE message_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT sender_id, receiver_id, sent_timestamp FROM Messages WHERE sender_id = 5 AND receiver_id = 7;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, message_text, sent_timestamp FROM Students s JOIN Messages m ON s.student_id = m.receiver_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT teacher_name, message_text, sent_timestamp FROM Teachers t JOIN Messages m ON t.teacher_id = m.receiver_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, parent_name, message_text, sent_timestamp FROM Students s JOIN Parents p ON s.parent_id = p.parent_id JOIN Messages m ON s.student_id = m.receiver_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Students ORDER BY grade_level DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT teacher_name, department FROM Teachers ORDER BY teacher_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, parent_name FROM Students s JOIN Parents p ON s.parent_id = p.parent_id ORDER BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT parent_name, email FROM Parents WHERE email LIKE '%gmail.com%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT teacher_name, department FROM Teachers WHERE teacher_id <= 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Messages WHERE sent_timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    grade_level INT,\n    parent_id INT\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    teacher_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50)\n);\n\nCREATE TABLE Parents (\n    parent_id INT PRIMARY KEY,\n    parent_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Messages (\n    message_id INT PRIMARY KEY,\n    sender_id INT,\n    receiver_id INT,\n    message_text TEXT,\n    sent_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT student_name, parent_name FROM Students s JOIN Parents p ON s.parent_id = p.parent_id WHERE parent_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, grade_level FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_name, subject_taught FROM Teachers;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT parent_name, email FROM Parents;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT message_text, timestamp FROM Messages;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT notification_text, created_at FROM Notifications;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, grade_level, parent_id FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_name, subject_taught FROM Teachers WHERE subject_taught = 'Math';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE grade_level > 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Teachers WHERE teacher_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT parent_name FROM Parents WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Messages ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT sender_id, receiver_id FROM Messages WHERE timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Notifications WHERE created_at BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students JOIN Parents ON Students.parent_id = Parents.parent_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students LEFT JOIN Parents ON Students.parent_id = Parents.parent_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students RIGHT JOIN Parents ON Students.parent_id = Parents.parent_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students JOIN Teachers ON Students.grade_level = Teachers.teacher_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Messages JOIN Students ON Messages.sender_id = Students.student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, grade_level, parent_name FROM Students JOIN Parents ON Students.parent_id = Parents.parent_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, grade_level FROM Students WHERE grade_level > 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_name, subject_taught FROM Teachers;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT parent_name FROM Parents WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT message_text, timestamp FROM Messages WHERE sender_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Notifications ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, teacher_name, subject_taught FROM Students JOIN Teachers ON Students.grade_level =  Teachers.teacher_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, parent_name, email FROM Students JOIN Parents ON Students.parent_id = Parents.parent_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_name, notification_text, created_at FROM Teachers JOIN Notifications ON Teachers.teacher_id = Notifications.target_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT grade_level FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(grade_level) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(grade_level) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_name, COUNT(notification_id) AS total_notifications FROM Teachers LEFT JOIN Notifications ON Teachers.teacher_id = Notifications.target_id GROUP BY teacher_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT parent_name, message_text FROM Parents LEFT JOIN Messages ON Parents.parent_id = Messages.receiver_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_name, notification_text FROM Teachers JOIN Notifications ON Teachers.teacher_id = Notifications.target_id WHERE created_at >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT student_name, grade_level FROM Students WHERE student_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT parent_name, email FROM Parents ORDER BY parent_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(grade_level) AS average_grade_level, COUNT(*) AS total_students FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id UUID PRIMARY KEY,\n  student_name VARCHAR(50) NOT NULL,\n  grade_level INTEGER NOT NULL,\n  parent_id UUID\n);\n\n\nCREATE TABLE Teachers (\n  teacher_id UUID PRIMARY KEY,\n  teacher_name VARCHAR(50) NOT NULL,\n  subject_taught VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Parents (\n  parent_id UUID PRIMARY KEY,\n  parent_name VARCHAR(50) NOT NULL,\n  email VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Messages (\n  message_id UUID PRIMARY KEY,\n  sender_id UUID NOT NULL,\n  receiver_id UUID NOT NULL,\n  message_text TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Notifications (\n  notification_id UUID PRIMARY KEY,\n  target_id UUID NOT NULL,\n  notification_text TEXT NOT NULL,\n  created_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT teacher_name, AVG(grade_level) AS avg_grade_level FROM Teachers JOIN Students ON Teachers.teacher_id = Students.grade_level GROUP BY teacher_name HAVING AVG(grade_level) > 10;"
]