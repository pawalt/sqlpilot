[
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (1, 'Positive', 80, FALSE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (2, 'Negative', 60, TRUE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (3, 'Neutral', 70, FALSE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (4, 'Positive', 85, TRUE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (5, 'Negative', 55, FALSE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (6, 'Positive', 75, TRUE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (7, 'Neutral', 65, FALSE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (8, 'Positive', 90, TRUE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (9, 'Negative', 50, FALSE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (10, 'Positive', 70, TRUE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (11, 'Neutral', 80, FALSE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (12, 'Positive', 95, TRUE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (13, 'Negative', 45, FALSE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (14, 'Positive', 75, TRUE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (15, 'Neutral', 70, FALSE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (16, 'Positive', 85, TRUE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (17, 'Negative', 55, FALSE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (18, 'Positive', 65, TRUE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (19, 'Neutral', 75, FALSE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (20, 'Positive', 80, TRUE) ON CONFLICT(student_id) DO UPDATE SET behavior_type = excluded.behavior_type, engagement_score = excluded.engagement_score, intervention_needed = excluded.intervention_needed;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (1, 'Positive', 85, false) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Positive', engagement_score = 85, intervention_needed = false;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (2, 'Negative', 70, true) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Negative', engagement_score = 70, intervention_needed = true;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (3, 'Neutral', 50, false) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Neutral', engagement_score = 50, intervention_needed = false;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (4, 'Positive', 90, false) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Positive', engagement_score = 90, intervention_needed = false;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (5, 'Negative', 60, true) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Negative', engagement_score = 60, intervention_needed = true;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (6, 'Neutral', 40, false) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Neutral', engagement_score = 40, intervention_needed = false;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (7, 'Positive', 80, false) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Positive', engagement_score = 80, intervention_needed = false;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (8, 'Negative', 65, true) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Negative', engagement_score = 65, intervention_needed = true;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (9, 'Neutral', 55, false) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Neutral', engagement_score = 55, intervention_needed = false;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (10, 'Positive', 88, false) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Positive', engagement_score = 88, intervention_needed = false;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (11, 'Negative', 68, true) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Negative', engagement_score = 68, intervention_needed = true;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (12, 'Neutral', 48, false) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Neutral', engagement_score = 48, intervention_needed = false;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (13, 'Positive', 94, false) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Positive', engagement_score = 94, intervention_needed = false;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (14, 'Negative', 72, true) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Negative', engagement_score = 72, intervention_needed = true;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (15, 'Neutral', 52, false) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Neutral', engagement_score = 52, intervention_needed = false;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (16, 'Positive', 86, false) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Positive', engagement_score = 86, intervention_needed = false;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (17, 'Negative', 62, true) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Negative', engagement_score = 62, intervention_needed = true;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (18, 'Neutral', 42, false) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Neutral', engagement_score = 42, intervention_needed = false;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (19, 'Positive', 92, false) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Positive', engagement_score = 92, intervention_needed = false;",
  "### TABLEDATA\n\nCREATE TABLE StudentBehaviorMonitoring (\n    student_id INT,\n    behavior_type VARCHAR(50),\n    engagement_score INT,\n    intervention_needed BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO StudentBehaviorMonitoring (student_id, behavior_type, engagement_score, intervention_needed) VALUES (20, 'Negative', 68, true) ON CONFLICT (student_id) DO UPDATE SET  behavior_type = 'Negative', engagement_score = 68, intervention_needed = true;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (1, 'Alice', '2022-10-15', 85.5) ON CONFLICT (student_id) DO UPDATE SET student_name='Alice', enrollment_date='2022-10-15', engagement_score=85.5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (2, 'Bob', '2022-09-20', 90.2) ON CONFLICT (student_id) DO UPDATE SET student_name='Bob', enrollment_date='2022-09-20', engagement_score=90.2;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (3, 'Charlie', '2022-08-25', 75.9) ON CONFLICT (student_id) DO UPDATE SET student_name='Charlie', enrollment_date='2022-08-25', engagement_score=75.9;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (4, 'David', '2022-07-30', 80.7) ON CONFLICT (student_id) DO UPDATE SET student_name='David', enrollment_date='2022-07-30', engagement_score=80.7;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (5, 'Eve', '2022-06-10', 88.3) ON CONFLICT (student_id) DO UPDATE SET student_name='Eve', enrollment_date='2022-06-10', engagement_score=88.3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (6, 'Frank', '2022-05-10', 79.5) ON CONFLICT (student_id) DO UPDATE SET student_name='Frank', enrollment_date='2022-05-10', engagement_score=79.5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (7, 'Grace', '2022-04-15', 92.1) ON CONFLICT (student_id) DO UPDATE SET student_name='Grace', enrollment_date='2022-04-15', engagement_score=92.1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (8, 'Henry', '2022-03-20', 77.8) ON CONFLICT (student_id) DO UPDATE SET student_name='Henry', enrollment_date='2022-03-20', engagement_score=77.8;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (9, 'Ivy', '2022-02-28', 85.0) ON CONFLICT (student_id) DO UPDATE SET student_name='Ivy', enrollment_date='2022-02-28', engagement_score=85.0;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (10, 'Jack', '2022-01-10', 81.3) ON CONFLICT (student_id) DO UPDATE SET student_name='Jack', enrollment_date='2022-01-10', engagement_score=81.3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_behavior (behavior_id, student_id, behavior_type, behavior_date, description) VALUES (1, 1, 'Positive', '2022-10-15 08:00:00', 'Participated actively in class') ON CONFLICT (behavior_id) DO UPDATE SET student_id=1, behavior_type='Positive', behavior_date='2022-10-15 08:00:00', description='Participated actively in class';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_behavior (behavior_id, student_id, behavior_type, behavior_date, description) VALUES (2, 2, 'Negative', '2022-09-20 10:30:00', 'Disturbed the class') ON CONFLICT (behavior_id) DO UPDATE SET student_id=2, behavior_type='Negative', behavior_date='2022-09-20 10:30:00', description='Disturbed the class';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_behavior (behavior_id, student_id, behavior_type, behavior_date, description) VALUES (3, 3, 'Neutral', '2022-08-25 12:45:00', 'Stayed quiet during the lesson') ON CONFLICT (behavior_id) DO UPDATE SET student_id=3, behavior_type='Neutral', behavior_date='2022-08-25 12:45:00', description='Stayed quiet during the lesson';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_behavior (behavior_id, student_id, behavior_type, behavior_date, description) VALUES (4, 4, 'Positive', '2022-07-30 14:00:00', 'Helped classmates with their assignments') ON CONFLICT (behavior_id) DO UPDATE SET student_id=4, behavior_type='Positive', behavior_date='2022-07-30 14:00:00', description='Helped classmates with their assignments';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_behavior (behavior_id, student_id, behavior_type, behavior_date, description) VALUES (5, 5, 'Negative', '2022-06-10 16:30:00', 'Failed to complete homework') ON CONFLICT (behavior_id) DO UPDATE SET student_id=5, behavior_type='Negative', behavior_date='2022-06-10 16:30:00', description='Failed to complete homework';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_behavior (behavior_id, student_id, behavior_type, behavior_date, description) VALUES (6, 6, 'Neutral', '2022-05-10 18:45:00', 'Took notes diligently in class') ON CONFLICT (behavior_id) DO UPDATE SET student_id=6, behavior_type='Neutral', behavior_date='2022-05-10 18:45:00', description='Took notes diligently in class';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_behavior (behavior_id, student_id, behavior_type, behavior_date, description) VALUES (7, 7, 'Positive', '2022-04-15 20:00:00', 'Participated actively in group discussion') ON CONFLICT (behavior_id) DO UPDATE SET student_id=7, behavior_type='Positive', behavior_date='2022-04-15 20:00:00', description='Participated actively in group discussion';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_behavior (behavior_id, student_id, behavior_type, behavior_date, description) VALUES (8, 8, 'Negative', '2022-03-20 09:30:00', 'Distracted by phone during class') ON CONFLICT (behavior_id) DO UPDATE SET student_id=8, behavior_type='Negative', behavior_date='2022-03-20 09:30:00', description='Distracted by phone during class';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_behavior (behavior_id, student_id, behavior_type, behavior_date, description) VALUES (9, 9, 'Neutral', '2022-02-28 11:45:00', 'Asked relevant questions during the lecture') ON CONFLICT (behavior_id) DO UPDATE SET student_id=9, behavior_type='Neutral', behavior_date='2022-02-28 11:45:00', description='Asked relevant questions during the lecture';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_behavior (behavior_id, student_id, behavior_type, behavior_date, description) VALUES (10, 10, 'Positive', '2022-01-10 13:00:00', 'Worked well in group project') ON CONFLICT (behavior_id) DO UPDATE SET student_id=10, behavior_type='Positive', behavior_date='2022-01-10 13:00:00', description='Worked well in group project';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (1, 'John Doe', '2021-09-15', 8.7) ON CONFLICT (student_id) DO UPDATE SET student_name = 'John Doe', enrollment_date = '2021-09-15', engagement_score = 9.0;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (2, 'Jane Smith', '2021-08-20', 7.9) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Jane Smith', enrollment_date = '2021-08-20', engagement_score = 8.1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (3, 'Alice Johnson', '2021-10-10', 9.5) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice Johnson', enrollment_date = '2021-10-10', engagement_score = 9.5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (4, 'Bob Brown', '2021-07-05', 6.8) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Bob Brown', enrollment_date = '2021-07-05', engagement_score = 7.2;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (5, 'Eve Anderson', '2021-11-25', 8.3) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Eve Anderson', enrollment_date = '2021-11-25', engagement_score = 8.4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_score) VALUES (6, 'David Wilson', '2021-06-12', 7.5) ON CONFLICT (student_id) DO UPDATE SET student_name = 'David Wilson', enrollment_date = '2021-06-12', engagement_score = 7.7;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id SERIAL PRIMARY KEY,\n    student_name VARCHAR(50) NOT NULL,\n    enrollment_date DATE NOT NULL,\n    engagement_score FLOAT\n);\n\n\nCREATE TABLE student_behavior (\n    behavior_id SERIAL PRIMARY KEY,\n    student_id INT REFERENCES students(student_id),\n    behavior_type VARCHAR(20) NOT NULL,\n    behavior_date TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, enrollment_date, engagement_s...",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, class_id, enrollment_date) VALUES (1, 'Alice', 'alice@example.com', 101, '2021-09-15') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, class_id = EXCLUDED.class_id, enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, class_id, enrollment_date) VALUES (2, 'Bob', 'bob@example.com', 102, '2021-09-16') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, class_id = EXCLUDED.class_id, enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, class_id, enrollment_date) VALUES (3, 'Charlie', 'charlie@example.com', 103, '2021-09-17') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, class_id = EXCLUDED.class_id, enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, class_id, enrollment_date) VALUES (4, 'David', 'david@example.com', 104, '2021-09-18') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, class_id = EXCLUDED.class_id, enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, class_id, enrollment_date) VALUES (5, 'Emily', 'emily@example.com', 105, '2021-09-19') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email, class_id = EXCLUDED.class_id, enrollment_date = EXCLUDED.enrollment_date;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, class_id, enrollment_date) VALUES (6, 'Frank', 'frank@example.com', 106, '2021-09-20') ON CONFLICT (student_id) DO UPDATE SET student_name = EXCLUDED.student_name, student_email = EXCLUDED.student_email,...",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, class_id, enrollment_date) VALUES (1, 'John Doe', 'john.doe@example.com', 101, '2022-01-15') ON CONFLICT (student_id) DO UPDATE SET student_name = 'John Doe', student_email = 'john.doe@example.com', class_id = 101, enrollment_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, class_id, enrollment_date) VALUES (2, 'Jane Smith', 'jane.smith@example.com', 102, '2022-02-20') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Jane Smith', student_email = 'jane.smith@example.com', class_id = 102, enrollment_date = '2022-02-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, class_id, enrollment_date) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', 103, '2022-03-25') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice Johnson', student_email = 'alice.johnson@example.com', class_id = 103, enrollment_date = '2022-03-25';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, class_id, enrollment_date) VALUES (4, 'Bob Anderson', 'bob.anderson@example.com', 104, '2022-04-30') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Bob Anderson', student_email = 'bob.anderson@example.com', class_id = 104, enrollment_date = '2022-04-30';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, student_name, student_email, class_id, enrollment_date) VALUES (5, 'Sarah Brown', 'sarah.brown@example.com', 105, '2022-05-05') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Sarah Brown', student_email = 'sarah.brown@example.com', class_id = 105, enrollment_date = '2022-05-05';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (interaction_id, student_id, interaction_date, interaction_type, interaction_notes) VALUES (1, 1, '2022-01-20 08:00:00', 'Meeting', 'Discussion about upcoming exam') ON CONFLICT (interaction_id) DO UPDATE SET student_id = 1, interaction_date = '2022-01-20 08:00:00', interaction_type = 'Meeting', interaction_notes = 'Discussion about upcoming exam';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (interaction_id, student_id, interaction_date, interaction_type, interaction_notes) VALUES (2, 2, '2022-02-25 10:00:00', 'Call', 'Follow-up on project progress') ON CONFLICT (interaction_id) DO UPDATE SET student_id = 2, interaction_date = '2022-02-25 10:00:00', interaction_type = 'Call', interaction_notes = 'Follow-up on project progress';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (interaction_id, student_id, interaction_date, interaction_type, interaction_notes) VALUES (3, 3, '2022-03-30 12:00:00', 'Email', 'Sent study material for upcoming test') ON CONFLICT (interaction_id) DO UPDATE SET student_id = 3, interaction_date = '2022-03-30 12:00:00', interaction_type = 'Email', interaction_notes = 'Sent study material for upcoming test';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (interaction_id, student_id, interaction_date, interaction_type, interaction_notes) VALUES (4, 4, '2022-04-05 14:00:00', 'Meeting', 'Planning for future projects') ON CONFLICT (interaction_id) DO UPDATE SET student_id = 4, interaction_date = '2022-04-05 14:00:00', interaction_type = 'Meeting', interaction_notes = 'Planning for future projects';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (interaction_id, student_id, interaction_date, interaction_type, interaction_notes) VALUES (5, 5, '2022-05-10 16:00:00', 'Call', 'Discussing internship opportunities') ON CONFLICT (interaction_id) DO UPDATE SET student_id = 5, interaction_date = '2022-05-10 16:00:00', interaction_type = 'Call', interaction_notes = 'Discussing internship opportunities';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO interventions (intervention_id, student_id, intervention_date, intervention_type, intervention_description) VALUES (1, 1, '2022-01-25', 'Academic Support', 'Provided additional study resources') ON CONFLICT (intervention_id) DO UPDATE SET student_id = 1, intervention_date = '2022-01-25', intervention_type = 'Academic Support', intervention_description = 'Provided additional study resources';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO interventions (intervention_id, student_id, intervention_date, intervention_type, intervention_description) VALUES (2, 2, '2022-02-28', 'Counseling', 'Discussed career goals and aspirations') ON CONFLICT (intervention_id) DO UPDATE SET student_id = 2, intervention_date = '2022-02-28', intervention_type = 'Counseling', intervention_description = 'Discussed career goals and aspirations';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO interventions (intervention_id, student_id, intervention_date, intervention_type, intervention_description) VALUES (3, 3, '2022-03-31', 'Behavioral Intervention', 'Implemented behavior modification plan') ON CONFLICT (intervention_id) DO UPDATE SET student_id = 3, intervention_date = '2022-03-31', intervention_type = 'Behavioral Intervention', intervention_description = 'Implemented behavior modification plan';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO interventions (intervention_id, student_id, intervention_date, intervention_type, intervention_description) VALUES (4, 4, '2022-04-06', 'Medical Support', 'Arranged medical assistance for health issues') ON CONFLICT (intervention_id) DO UPDATE SET student_id = 4, intervention_date = '2022-04-06', intervention_type = 'Medical Support', intervention_description = 'Arranged medical assistance for health issues';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_email VARCHAR(100),\n    class_id INT,\n    enrollment_date DATE\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_notes TEXT\n);\n\nCREATE TABLE interventions (\n    intervention_id INT PRIMARY KEY,\n    student_id INT,\n    intervention_date DATE,\n    intervention_type VARCHAR(50),\n    intervention_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO interventions (intervention_id, student_id, intervention_date, intervention_type, intervention_description) VALUES (5, 5, '2022-05-11', 'Career Development', 'Provided guidance on job search strategies') ON CONFLICT (intervention_id) DO UPDATE SET student_id = 5, intervention_date = '2022-05-11', intervention_type = 'Career Development', intervention_description = 'Provided guidance on job search strategies';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_age, student_grade) VALUES (1, 'Alice', 18, 'A') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice', student_age = 18, student_grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, course_teacher) VALUES (101, 'Mathematics', 'Basic math concepts', 'Mr. Smith') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics', course_description = 'Basic math concepts', course_teacher = 'Mr. Smith';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, course_id, student_id, assignment_title, assignment_due_date, assignment_score) VALUES (201, 101, 1, 'Math Homework', '2022-05-10', 90) ON CONFLICT (assignment_id) DO UPDATE SET course_id = 101, student_id = 1, assignment_title = 'Math Homework', assignment_due_date = '2022-05-10', assignment_score = 90;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO BehaviorLogs (log_id, student_id, behavior_type, behavior_description, log_timestamp) VALUES (301, 1, 'Positive', 'Helped classmates with study', '2022-05-20 10:00:00') ON CONFLICT (log_id) DO UPDATE SET student_id = 1, behavior_type = 'Positive', behavior_description = 'Helped classmates with study', log_timestamp = '2022-05-20 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_age, student_grade) VALUES (2, 'Bob', 20, 'B') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Bob', student_age = 20, student_grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, course_teacher) VALUES (102, 'History', 'Ancient civilizations', 'Ms. Johnson') ON CONFLICT (course_id) DO UPDATE SET course_name = 'History', course_description = 'Ancient civilizations', course_teacher = 'Ms. Johnson';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, course_id, student_id, assignment_title, assignment_due_date, assignment_score) VALUES (202, 102, 2, 'History Project', '2022-05-15', 95) ON CONFLICT (assignment_id) DO UPDATE SET course_id = 102, student_id = 2, assignment_title = 'History Project', assignment_due_date = '2022-05-15', assignment_score = 95;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO BehaviorLogs (log_id, student_id, behavior_type, behavior_description, log_timestamp) VALUES (302, 2, 'Negative', 'Late submission of assignment', '2022-05-18 09:00:00') ON CONFLICT (log_id) DO UPDATE SET student_id = 2, behavior_type = 'Negative', behavior_description = 'Late submission of assignment', log_timestamp = '2022-05-18 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_age, student_grade) VALUES (3, 'Charlie', 22, 'C') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Charlie', student_age = 22, student_grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, course_teacher) VALUES (103, 'Science', 'Physics and Chemistry', 'Mr. Patel') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Science', course_description = 'Physics and Chemistry', course_teacher = 'Mr. Patel';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, course_id, student_id, assignment_title, assignment_due_date, assignment_score) VALUES (203, 103, 3, 'Science Experiment', '2022-05-20', 85) ON CONFLICT (assignment_id) DO UPDATE SET course_id = 103, student_id = 3, assignment_title = 'Science Experiment', assignment_due_date = '2022-05-20', assignment_score = 85;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO BehaviorLogs (log_id, student_id, behavior_type, behavior_description, log_timestamp) VALUES (303, 3, 'Positive', 'Active participation in class discussion', '2022-05-25 11:30:00') ON CONFLICT (log_id) DO UPDATE SET student_id = 3, behavior_type = 'Positive', behavior_description = 'Active participation in class discussion', log_timestamp = '2022-05-25 11:30:00';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_age, student_grade) VALUES (4, 'David', 19, 'B') ON CONFLICT (student_id) DO UPDATE SET student_name = 'David', student_age = 19, student_grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, course_teacher) VALUES (104, 'English', 'Literature and Grammar', 'Mrs. Brown') ON CONFLICT (course_id) DO UPDATE SET course_name = 'English', course_description = 'Literature and Grammar', course_teacher = 'Mrs. Brown';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, course_id, student_id, assignment_title, assignment_due_date, assignment_score) VALUES (204, 104, 4, 'English Essay', '2022-05-12', 88) ON CONFLICT (assignment_id) DO UPDATE SET course_id = 104, student_id = 4, assignment_title = 'English Essay', assignment_due_date = '2022-05-12', assignment_score = 88;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO BehaviorLogs (log_id, student_id, behavior_type, behavior_description, log_timestamp) VALUES (304, 4, 'Negative', 'Disrupted class with loud behavior', '2022-05-17 08:45:00') ON CONFLICT (log_id) DO UPDATE SET student_id = 4, behavior_type = 'Negative', behavior_description = 'Disrupted class with loud behavior', log_timestamp = '2022-05-17 08:45:00';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_age, student_grade) VALUES (5, 'Emma', 21, 'A') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Emma', student_age = 21, student_grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, course_teacher) VALUES (105, 'Computer Science', 'Programming concepts', 'Dr. White') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Computer Science', course_description = 'Programming concepts', course_teacher = 'Dr. White';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, course_id, student_id, assignment_title, assignment_due_date, assignment_score) VALUES (205, 105, 5, 'Programming Assignment', '2022-05-18', 92) ON CONFLICT (assignment_id) DO UPDATE SET course_id = 105, student_id = 5, assignment_title = 'Programming Assignment', assignment_due_date = '2022-05-18', assignment_score = 92;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO BehaviorLogs (log_id, student_id, behavior_type, behavior_description, log_timestamp) VALUES (305, 5, 'Positive', 'Volunteered for class presentation', '2022-05-22 15:00:00') ON CONFLICT (log_id) DO UPDATE SET student_id = 5, behavior_type = 'Positive', behavior_description = 'Volunteered for class presentation', log_timestamp = '2022-05-22 15:00:00';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_age, student_grade) VALUES (1, 'John Doe', 18, 'A') ON CONFLICT (student_id) DO UPDATE SET student_name = 'John Doe', student_age = 18, student_grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, course_teacher) VALUES (1, 'Mathematics', 'Algebra and Calculus', 'Mr. Smith') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics', course_description = 'Algebra and Calculus', course_teacher = 'Mr. Smith';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, course_id, student_id, assignment_title, assignment_due_date, assignment_score) VALUES (1, 1, 1, 'Midterm Exam', '2022-05-15', 85) ON CONFLICT (assignment_id) DO UPDATE SET course_id = 1, student_id = 1, assignment_title = 'Midterm Exam', assignment_due_date = '2022-05-15', assignment_score = 85;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_age INT,\n    student_grade VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_teacher VARCHAR(50)\n)\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    student_id INT,\n    assignment_title VARCHAR(100),\n    assignment_due_date DATE,\n    assignment_score INT\n)\n\nCREATE TABLE BehaviorLogs (\n    log_id INT PRIMARY KEY,\n    student_id INT,\n    behavior_type VARCHAR(20),\n    behavior_description TEXT,\n    log_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO BehaviorLogs (log_id, student_id, behavior_type, behavior_description, log_timestamp) VALUES (1, 1, 'Positive', 'Participated in class discussion', NOW()) ON CONFLICT (log_id) DO UPDATE SET student_id = 1, behavior_type = 'Positive', behavior_description = 'Participated in class discussion', log_timestamp = NOW();",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_grade, last_login) VALUES (1, 'Alice', 10, '2022-01-01 00:00:00') ON DUPLICATE KEY UPDATE student_grade = VALUES(student_grade), last_login = VALUES(last_login);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, course_start_date, course_end_date) VALUES (1, 'Mathematics', 'Math course description', '2022-02-01', '2022-05-01') ON DUPLICATE KEY UPDATE course_start_date = VALUES(course_start_date), course_end_date = VALUES(course_end_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, course_id, assignment_name, assignment_due_date, total_points) VALUES (1, 1, 'Assignment 1', '2022-03-01', 100) ON DUPLICATE KEY UPDATE assignment_due_date = VALUES(assignment_due_date), total_points = VALUES(total_points);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Grades (student_id, course_id, assignment_id, grade, submission_date) VALUES (1, 1, 1, 95, '2022-03-02') ON DUPLICATE KEY UPDATE grade = VALUES(grade), submission_date = VALUES(submission_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Interactions (interaction_id, student_id, course_id, interaction_type, interaction_date) VALUES (1, 1, 1, 'Discussion', '2022-03-03 10:00:00') ON DUPLICATE KEY UPDATE interaction_type = VALUES(interaction_type), interaction_date = VALUES(interaction_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_grade, last_login) VALUES (2, 'Bob', 9, '2022-01-02 00:00:00') ON DUPLICATE KEY UPDATE student_grade = VALUES(student_grade), last_login = VALUES(last_login);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, course_start_date, course_end_date) VALUES (2, 'History', 'History course description', '2022-02-15', '2022-06-15') ON DUPLICATE KEY UPDATE course_start_date = VALUES(course_start_date), course_end_date = VALUES(course_end_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, course_id, assignment_name, assignment_due_date, total_points) VALUES (2, 2, 'Assignment 1', '2022-03-15', 80) ON DUPLICATE KEY UPDATE assignment_due_date = VALUES(assignment_due_date), total_points = VALUES(total_points);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Grades (student_id, course_id, assignment_id, grade, submission_date) VALUES (2, 2, 2, 85, '2022-03-16') ON DUPLICATE KEY UPDATE grade = VALUES(grade), submission_date = VALUES(submission_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Interactions (interaction_id, student_id, course_id, interaction_type, interaction_date) VALUES (2, 2, 2, 'Quiz', '2022-03-17 12:00:00') ON DUPLICATE KEY UPDATE interaction_type = VALUES(interaction_type), interaction_date = VALUES(interaction_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_grade, last_login) VALUES (3, 'Charlie', 8, '2022-01-03 00:00:00') ON DUPLICATE KEY UPDATE student_grade = VALUES(student_grade), last_login = VALUES(last_login);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, course_start_date, course_end_date) VALUES (3, 'Science', 'Science course description', '2022-02-20', '2022-06-20') ON DUPLICATE KEY UPDATE course_start_date = VALUES(course_start_date), course_end_date = VALUES(course_end_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, course_id, assignment_name, assignment_due_date, total_points) VALUES (3, 3, 'Assignment 1', '2022-03-20', 90) ON DUPLICATE KEY UPDATE assignment_due_date = VALUES(assignment_due_date), total_points = VALUES(total_points);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Grades (student_id, course_id, assignment_id, grade, submission_date) VALUES (3, 3, 3, 88, '2022-03-21') ON DUPLICATE KEY UPDATE grade = VALUES(grade), submission_date = VALUES(submission_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Interactions (interaction_id, student_id, course_id, interaction_type, interaction_date) VALUES (3, 3, 3, 'Assignment Review', '2022-03-22 14:00:00') ON DUPLICATE KEY UPDATE interaction_type = VALUES(interaction_type), interaction_date = VALUES(interaction_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_grade, last_login) VALUES (4, 'David', 7, '2022-01-04 00:00:00') ON DUPLICATE KEY UPDATE student_grade = VALUES(student_grade), last_login = VALUES(last_login);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, course_start_date, course_end_date) VALUES (4, 'English', 'English course description', '2022-03-01', '2022-07-01') ON DUPLICATE KEY UPDATE course_start_date = VALUES(course_start_date), course_end_date = VALUES(course_end_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, course_id, assignment_name, assignment_due_date, total_points) VALUES (4, 4, 'Assignment 1', '2022-04-01', 95) ON DUPLICATE KEY UPDATE assignment_due_date = VALUES(assignment_due_date), total_points = VALUES(total_points);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Grades (student_id, course_id, assignment_id, grade, submission_date) VALUES (4, 4, 4, 92, '2022-04-02') ON DUPLICATE KEY UPDATE grade = VALUES(grade), submission_date = VALUES(submission_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Interactions (interaction_id, student_id, course_id, interaction_type, interaction_date) VALUES (4, 4, 4, 'Group Project', '2022-04-03 16:00:00') ON DUPLICATE KEY UPDATE interaction_type = VALUES(interaction_type), interaction_date = VALUES(interaction_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, student_grade, last_login) VALUES (5, 'Eve', 6, '2022-01-05 00:00:00') ON DUPLICATE KEY UPDATE student_grade = VALUES(student_grade), last_login = VALUES(last_login);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, course_start_date, course_end_date) VALUES (5, 'Art', 'Art course description', '2022-03-15', '2022-07-15') ON DUPLICATE KEY UPDATE course_start_date = VALUES(course_start_date), course_end_date = VALUES(course_end_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Assignments (assignment_id, course_id, assignment_name, assignment_due_date, total_points) VALUES (5, 5, 'Assignment 1', '2022-04-15', 85) ON DUPLICATE KEY UPDATE assignment_due_date = VALUES(assignment_due_date), total_points = VALUES(total_points);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Grades (student_id, course_id, assignment_id, grade, submission_date) VALUES (5, 5, 5, 87, '2022-04-16') ON DUPLICATE KEY UPDATE grade = VALUES(grade), submission_date = VALUES(submission_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO Interactions (interaction_id, student_id, course_id, interaction_type, interaction_date) VALUES (5, 5, 5, 'Feedback', '2022-04-17 18:00:00') ON DUPLICATE KEY UPDATE interaction_type = VALUES(interaction_type), interaction_date = VALUES(interaction_date);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, student_name, student_grade, last_login) VALUES (1, 'John Doe', 10, '2022-09-01') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_grade = excluded.student_grade, last_login = excluded.last_login;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, course_description, course_start_date, course_end_date) VALUES (101, 'Mathematics', 'Algebra and Geometry', '2022-09-15', '2022-12-10') ON CONFLICT (course_id) DO UPDATE SET course_name = excluded.course_name, course_description = excluded.course_description, course_start_date = excluded.course_start_date, course_end_date = excluded.course_end_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Assignments (assignment_id, course_id, assignment_name, assignment_due_date, total_points) VALUES (201, 101, 'Algebra HW', '2022-09-20', 100) ON CONFLICT (assignment_id) DO UPDATE SET course_id = excluded.course_id, assignment_name = excluded.assignment_name, assignment_due_date = excluded.assignment_due_date, total_points = excluded.total_points;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Grades (student_id, course_id, assignment_id, grade, submission_date) VALUES (1, 101, 201, 90, '2022-09-22') ON CONFLICT (student_id, course_id, assignment_id) DO UPDATE SET grade = excluded.grade, submission_date = excluded.submission_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Interactions (interaction_id, student_id, course_id, interaction_type, interaction_date) VALUES (301, 1, 101, 'Course View', '2022-09-23') ON CONFLICT (interaction_id) DO UPDATE SET student_id = excluded.student_id, course_id = excluded.course_id, interaction_type = excluded.interaction_type, interaction_date = excluded.interaction_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, student_name, student_grade, last_login) VALUES (2, 'Alice Smith', 9, '2022-09-02') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_grade = excluded.student_grade, last_login = excluded.last_login;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, course_description, course_start_date, course_end_date) VALUES (102, 'Science', 'Biology and Chemistry', '2022-09-18', '2022-12-15') ON CONFLICT (course_id) DO UPDATE SET course_name = excluded.course_name, course_description = excluded.course_description, course_start_date = excluded.course_start_date, course_end_date = excluded.course_end_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Assignments (assignment_id, course_id, assignment_name, assignment_due_date, total_points) VALUES (202, 102, 'Biology Lab', '2022-09-25', 80) ON CONFLICT (assignment_id) DO UPDATE SET course_id = excluded.course_id, assignment_name = excluded.assignment_name, assignment_due_date = excluded.assignment_due_date, total_points = excluded.total_points;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Grades (student_id, course_id, assignment_id, grade, submission_date) VALUES (2, 102, 202, 85, '2022-09-28') ON CONFLICT (student_id, course_id, assignment_id) DO UPDATE SET grade = excluded.grade, submission_date = excluded.submission_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Interactions (interaction_id, student_id, course_id, interaction_type, interaction_date) VALUES (302, 2, 102, 'Assignment Submit', '2022-09-29') ON CONFLICT (interaction_id) DO UPDATE SET student_id = excluded.student_id, course_id = excluded.course_id, interaction_type = excluded.interaction_type, interaction_date = excluded.interaction_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, student_name, student_grade, last_login) VALUES (3, 'Bob Brown', 8, '2022-09-03') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_grade = excluded.student_grade, last_login = excluded.last_login;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, course_description, course_start_date, course_end_date) VALUES (103, 'History', 'World History', '2022-09-20', '2022-12-18') ON CONFLICT (course_id) DO UPDATE SET course_name = excluded.course_name, course_description = excluded.course_description, course_start_date = excluded.course_start_date, course_end_date = excluded.course_end_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Assignments (assignment_id, course_id, assignment_name, assignment_due_date, total_points) VALUES (203, 103, 'World War II Essay', '2022-10-05', 95) ON CONFLICT (assignment_id) DO UPDATE SET course_id = excluded.course_id, assignment_name = excluded.assignment_name, assignment_due_date = excluded.assignment_due_date, total_points = excluded.total_points;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Grades (student_id, course_id, assignment_id, grade, submission_date) VALUES (3, 103, 203, 92, '2022-10-08') ON CONFLICT (student_id, course_id, assignment_id) DO UPDATE SET grade = excluded.grade, submission_date = excluded.submission_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Interactions (interaction_id, student_id, course_id, interaction_type, interaction_date) VALUES (303, 3, 103, 'Quiz Attempt', '2022-10-10') ON CONFLICT (interaction_id) DO UPDATE SET student_id = excluded.student_id, course_id = excluded.course_id, interaction_type = excluded.interaction_type, interaction_date = excluded.interaction_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, student_name, student_grade, last_login) VALUES (4, 'Emma White', 11, '2022-09-04') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_grade = excluded.student_grade, last_login = excluded.last_login;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, course_description, course_start_date, course_end_date) VALUES (104, 'Computer Science', 'Programming and Algorithms', '2022-09-25', '2022-12-20') ON CONFLICT (course_id) DO UPDATE SET course_name = excluded.course_name, course_description = excluded.course_description, course_start_date = excluded.course_start_date, course_end_date = excluded.course_end_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Assignments (assignment_id, course_id, assignment_name, assignment_due_date, total_points) VALUES (204, 104, 'Algorithmic Puzzle', '2022-10-08', 85) ON CONFLICT (assignment_id) DO UPDATE SET course_id = excluded.course_id, assignment_name = excluded.assignment_name, assignment_due_date = excluded.assignment_due_date, total_points = excluded.total_points;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Grades (student_id, course_id, assignment_id, grade, submission_date) VALUES (4, 104, 204, 88, '2022-10-10') ON CONFLICT (student_id, course_id, assignment_id) DO UPDATE SET grade = excluded.grade, submission_date = excluded.submission_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Interactions (interaction_id, student_id, course_id, interaction_type, interaction_date) VALUES (304, 4, 104, 'Assignment Feedback', '2022-10-12') ON CONFLICT (interaction_id) DO UPDATE SET student_id = excluded.student_id, course_id = excluded.course_id, interaction_type = excluded.interaction_type, interaction_date = excluded.interaction_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Students (student_id, student_name, student_grade, last_login) VALUES (5, 'Mike Johnson', 9, '2022-09-05') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, student_grade = excluded.student_grade, last_login = excluded.last_login;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Courses (course_id, course_name, course_description, course_start_date, course_end_date) VALUES (105, 'English Literature', 'Novels and Poetry', '2022-09-28', '2022-12-25') ON CONFLICT (course_id) DO UPDATE SET course_name = excluded.course_name, course_description = excluded.course_description, course_start_date = excluded.course_start_date, course_end_date = excluded.course_end_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Assignments (assignment_id, course_id, assignment_name, assignment_due_date, total_points) VALUES (205, 105, 'Shakespeare Analysis', '2022-10-12', 90) ON CONFLICT (assignment_id) DO UPDATE SET course_id = excluded.course_id, assignment_name = excluded.assignment_name, assignment_due_date = excluded.assignment_due_date, total_points = excluded.total_points;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Grades (student_id, course_id, assignment_id, grade, submission_date) VALUES (5, 105, 205, 85, '2022-10-15') ON CONFLICT (student_id, course_id, assignment_id) DO UPDATE SET grade = excluded.grade, submission_date = excluded.submission_date;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    student_grade INT,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    course_start_date DATE,\n    course_end_date DATE\n);\n\n\nCREATE TABLE Assignments (\n    assignment_id INT PRIMARY KEY,\n    course_id INT,\n    assignment_name VARCHAR(50),\n    assignment_due_date DATE,\n    total_points INT\n);\n\n\nCREATE TABLE Grades (\n    student_id INT,\n    course_id INT,\n    assignment_id INT,\n    grade INT,\n    submission_date DATE,\n    PRIMARY KEY (student_id, course_id, assignment_id)\n);\n\n\nCREATE TABLE Interactions (\n    interaction_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO Interactions (interaction_id, student_id, course_id, interaction_type, interaction_date) VALUES (305, 5, 105, 'Discussion Forum Post', '2022-10-18') ON CONFLICT (interaction_id) DO UPDATE SET student_id = excluded.student_id, course_id = excluded.course_id, interaction_type = excluded.interaction_type, interaction_date = excluded.interaction_date;"
]