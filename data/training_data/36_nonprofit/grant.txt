<t>CREATE TABLE Nonprofit (id INT PRIMARY KEY, name VARCHAR(255), mission TEXT, established_date DATE)</t><stat>GRANT SELECT ON Nonprofit TO user1</stat><divider><t>CREATE TABLE Nonprofit (id INT PRIMARY KEY, name VARCHAR(255), mission TEXT, established_date DATE)</t><stat>grant select on nonprofit to user1</stat><divider><t>CREATE TABLE Nonprofit (id INT PRIMARY KEY, name VARCHAR(255), mission TEXT, established_date DATE)</t><stat>GRANT INSERT, UPDATE ON Nonprofit TO user2</stat><divider><t>CREATE TABLE Nonprofit (id INT PRIMARY KEY, name VARCHAR(255), mission TEXT, established_date DATE)</t><stat>grant insert, update on nonprofit to user2</stat><divider><t>CREATE TABLE Nonprofit (id INT PRIMARY KEY, name VARCHAR(255), mission TEXT, established_date DATE)</t><stat>GRANT DELETE ON Nonprofit TO user3</stat><divider><t>CREATE TABLE Nonprofit (id INT PRIMARY KEY, name VARCHAR(255), mission TEXT, established_date DATE)</t><stat>grant delete on nonprofit to user3</stat><divider><t>CREATE TABLE nonprofit_organization (   nonprofit_id SERIAL PRIMARY KEY,   name VARCHAR(255) NOT NULL,   mission TEXT NOT NULL,   established_date DATE );

CREATE TABLE donations (   donation_id SERIAL PRIMARY KEY,   nonprofit_id INT NOT NULL,   amount DECIMAL(10, 2) NOT NULL,   donation_date DATE,   FOREIGN KEY (nonprofit_id) REFERENCES nonprofit_organization (nonprofit_id) );</t><stat>GRANT SELECT ON nonprofit_organization TO public;</stat><divider><t>CREATE TABLE nonprofit_organization (   nonprofit_id SERIAL PRIMARY KEY,   name VARCHAR(255) NOT NULL,   mission TEXT NOT NULL,   established_date DATE );

CREATE TABLE donations (   donation_id SERIAL PRIMARY KEY,   nonprofit_id INT NOT NULL,   amount DECIMAL(10, 2) NOT NULL,   donation_date DATE,   FOREIGN KEY (nonprofit_id) REFERENCES nonprofit_organization (nonprofit_id) );</t><stat>grant select on nonprofit_organization to public;</stat><divider><t>CREATE TABLE donations (   donation_id SERIAL PRIMARY KEY,   nonprofit_id INT NOT NULL,   amount DECIMAL(10, 2) NOT NULL,   donation_date DATE,   FOREIGN KEY (nonprofit_id) REFERENCES nonprofit_organization (nonprofit_id) );

CREATE TABLE nonprofit_organization (   nonprofit_id SERIAL PRIMARY KEY,   name VARCHAR(255) NOT NULL,   mission TEXT NOT NULL,   established_date DATE );</t><stat>GRANT SELECT ON nonprofit_organization TO public;</stat><divider><t>CREATE TABLE donations (   donation_id SERIAL PRIMARY KEY,   nonprofit_id INT NOT NULL,   amount DECIMAL(10, 2) NOT NULL,   donation_date DATE,   FOREIGN KEY (nonprofit_id) REFERENCES nonprofit_organization (nonprofit_id) );

CREATE TABLE nonprofit_organization (   nonprofit_id SERIAL PRIMARY KEY,   name VARCHAR(255) NOT NULL,   mission TEXT NOT NULL,   established_date DATE );</t><stat>grant select on nonprofit_organization to public;</stat><divider><t>CREATE TABLE nonprofit_organization (   nonprofit_id SERIAL PRIMARY KEY,   name VARCHAR(255) NOT NULL,   mission TEXT NOT NULL,   established_date DATE );

CREATE TABLE donations (   donation_id SERIAL PRIMARY KEY,   nonprofit_id INT NOT NULL,   amount DECIMAL(10, 2) NOT NULL,   donation_date DATE,   FOREIGN KEY (nonprofit_id) REFERENCES nonprofit_organization (nonprofit_id) );</t><stat>GRANT INSERT, UPDATE, DELETE ON donations TO user1;</stat><divider><t>CREATE TABLE nonprofit_organization (   nonprofit_id SERIAL PRIMARY KEY,   name VARCHAR(255) NOT NULL,   mission TEXT NOT NULL,   established_date DATE );

CREATE TABLE donations (   donation_id SERIAL PRIMARY KEY,   nonprofit_id INT NOT NULL,   amount DECIMAL(10, 2) NOT NULL,   donation_date DATE,   FOREIGN KEY (nonprofit_id) REFERENCES nonprofit_organization (nonprofit_id) );</t><stat>grant insert, update, delete on donations to user1;</stat><divider><t>CREATE TABLE donations (   donation_id SERIAL PRIMARY KEY,   nonprofit_id INT NOT NULL,   amount DECIMAL(10, 2) NOT NULL,   donation_date DATE,   FOREIGN KEY (nonprofit_id) REFERENCES nonprofit_organization (nonprofit_id) );

CREATE TABLE nonprofit_organization (   nonprofit_id SERIAL PRIMARY KEY,   name VARCHAR(255) NOT NULL,   mission TEXT NOT NULL,   established_date DATE );</t><stat>GRANT INSERT, UPDATE, DELETE ON donations TO user1;</stat><divider><t>CREATE TABLE donations (   donation_id SERIAL PRIMARY KEY,   nonprofit_id INT NOT NULL,   amount DECIMAL(10, 2) NOT NULL,   donation_date DATE,   FOREIGN KEY (nonprofit_id) REFERENCES nonprofit_organization (nonprofit_id) );

CREATE TABLE nonprofit_organization (   nonprofit_id SERIAL PRIMARY KEY,   name VARCHAR(255) NOT NULL,   mission TEXT NOT NULL,   established_date DATE );</t><stat>grant insert, update, delete on donations to user1;</stat><divider><t>CREATE TABLE nonprofit_organization (   nonprofit_id SERIAL PRIMARY KEY,   name VARCHAR(255) NOT NULL,   mission TEXT NOT NULL,   established_date DATE );

CREATE TABLE donations (   donation_id SERIAL PRIMARY KEY,   nonprofit_id INT NOT NULL,   amount DECIMAL(10, 2) NOT NULL,   donation_date DATE,   FOREIGN KEY (nonprofit_id) REFERENCES nonprofit_organization (nonprofit_id) );</t><stat>GRANT SELECT, INSERT ON donations TO user2;</stat><divider><t>CREATE TABLE nonprofit_organization (   nonprofit_id SERIAL PRIMARY KEY,   name VARCHAR(255) NOT NULL,   mission TEXT NOT NULL,   established_date DATE );

CREATE TABLE donations (   donation_id SERIAL PRIMARY KEY,   nonprofit_id INT NOT NULL,   amount DECIMAL(10, 2) NOT NULL,   donation_date DATE,   FOREIGN KEY (nonprofit_id) REFERENCES nonprofit_organization (nonprofit_id) );</t><stat>grant select, insert on donations to user2;</stat><divider><t>CREATE TABLE donations (   donation_id SERIAL PRIMARY KEY,   nonprofit_id INT NOT NULL,   amount DECIMAL(10, 2) NOT NULL,   donation_date DATE,   FOREIGN KEY (nonprofit_id) REFERENCES nonprofit_organization (nonprofit_id) );

CREATE TABLE nonprofit_organization (   nonprofit_id SERIAL PRIMARY KEY,   name VARCHAR(255) NOT NULL,   mission TEXT NOT NULL,   established_date DATE );</t><stat>GRANT SELECT, INSERT ON donations TO user2;</stat><divider><t>CREATE TABLE donations (   donation_id SERIAL PRIMARY KEY,   nonprofit_id INT NOT NULL,   amount DECIMAL(10, 2) NOT NULL,   donation_date DATE,   FOREIGN KEY (nonprofit_id) REFERENCES nonprofit_organization (nonprofit_id) );

CREATE TABLE nonprofit_organization (   nonprofit_id SERIAL PRIMARY KEY,   name VARCHAR(255) NOT NULL,   mission TEXT NOT NULL,   established_date DATE );</t><stat>grant select, insert on donations to user2;</stat><divider><t>CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);
</t><stat>GRANT SELECT ON Nonprofit.Organization TO user1;</stat><divider><t>CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);
</t><stat>grant select on nonprofit.organization to user1;</stat><divider><t>CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);
</t><stat>GRANT SELECT ON Nonprofit.Organization TO user1;</stat><divider><t>CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);
</t><stat>grant select on nonprofit.organization to user1;</stat><divider><t>CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);
</t><stat>GRANT SELECT ON Nonprofit.Organization TO user1;</stat><divider><t>CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);
</t><stat>grant select on nonprofit.organization to user1;</stat><divider><t>CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT ON Nonprofit.Organization TO user1;</stat><divider><t>CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select on nonprofit.organization to user1;</stat><divider><t>CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);
</t><stat>GRANT SELECT ON Nonprofit.Organization TO user1;</stat><divider><t>CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);
</t><stat>grant select on nonprofit.organization to user1;</stat><divider><t>CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT ON Nonprofit.Organization TO user1;</stat><divider><t>CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select on nonprofit.organization to user1;</stat><divider><t>CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);
</t><stat>GRANT INSERT ON Nonprofit.Project TO user2;</stat><divider><t>CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);
</t><stat>grant insert on nonprofit.project to user2;</stat><divider><t>CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);
</t><stat>GRANT INSERT ON Nonprofit.Project TO user2;</stat><divider><t>CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);
</t><stat>grant insert on nonprofit.project to user2;</stat><divider><t>CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);
</t><stat>GRANT INSERT ON Nonprofit.Project TO user2;</stat><divider><t>CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);
</t><stat>grant insert on nonprofit.project to user2;</stat><divider><t>CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT INSERT ON Nonprofit.Project TO user2;</stat><divider><t>CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);
</t><stat>grant insert on nonprofit.project to user2;</stat><divider><t>CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);
</t><stat>GRANT INSERT ON Nonprofit.Project TO user2;</stat><divider><t>CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);
</t><stat>grant insert on nonprofit.project to user2;</stat><divider><t>CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT INSERT ON Nonprofit.Project TO user2;</stat><divider><t>CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);
</t><stat>grant insert on nonprofit.project to user2;</stat><divider><t>CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);
</t><stat>GRANT UPDATE ON Nonprofit.Donation TO user3;</stat><divider><t>CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);
</t><stat>grant update on nonprofit.donation to user3;</stat><divider><t>CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);
</t><stat>GRANT UPDATE ON Nonprofit.Donation TO user3;</stat><divider><t>CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);
</t><stat>grant update on nonprofit.donation to user3;</stat><divider><t>CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);
</t><stat>GRANT UPDATE ON Nonprofit.Donation TO user3;</stat><divider><t>CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);
</t><stat>grant update on nonprofit.donation to user3;</stat><divider><t>CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT UPDATE ON Nonprofit.Donation TO user3;</stat><divider><t>CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);
</t><stat>grant update on nonprofit.donation to user3;</stat><divider><t>CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);
</t><stat>GRANT UPDATE ON Nonprofit.Donation TO user3;</stat><divider><t>CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);
</t><stat>grant update on nonprofit.donation to user3;</stat><divider><t>CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT UPDATE ON Nonprofit.Donation TO user3;</stat><divider><t>CREATE TABLE Nonprofit.Donation (
    donation_id INT PRIMARY KEY,
    donor_name VARCHAR(255) NOT NULL,
    donation_amount DECIMAL(10, 2) NOT NULL,
    project_id INT,
    FOREIGN KEY (project_id) REFERENCES Nonprofit.Project(project_id)
);


CREATE TABLE Nonprofit.Project (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    org_id INT,
    FOREIGN KEY (org_id) REFERENCES Nonprofit.Organization(org_id)
);


CREATE TABLE Nonprofit.Organization (
    org_id INT PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL,
    org_type VARCHAR(50) NOT NULL
);
</t><stat>grant update on nonprofit.donation to user3;</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.organization TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.organization to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donor TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.donor to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.donation TO 'my_user';</stat><divider><t>CREATE TABLE nonprofit.volunteer (
    volunteer_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    organization_id INT,
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donation (
    donation_id INT PRIMARY KEY,
    donor_id INT,
    organization_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    donation_date DATE,
    FOREIGN KEY (donor_id) REFERENCES nonprofit.donor(donor_id),
    FOREIGN KEY (organization_id) REFERENCES nonprofit.organization(organization_id)
);

CREATE TABLE nonprofit.donor (
    donor_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE
);

CREATE TABLE nonprofit.organization (
    organization_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    mission_statement TEXT
);</t><stat>grant select, insert, update on nonprofit.donation to 'my_user';</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT ON nonprofit.organization TO readonly_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select on nonprofit.organization to readonly_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT, UPDATE ON nonprofit.project TO project_manager;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert, update on nonprofit.project to project_manager;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));</t><stat>grant select, insert on nonprofit.member to donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>GRANT SELECT, INSERT ON nonprofit.member TO donor_user;</stat><divider><t>CREATE TABLE nonprofit.volunteer (id INT PRIMARY KEY, name VARCHAR, skillset TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.donation (id INT PRIMARY KEY, amount DECIMAL, donation_date DATE, member_id INT REFERENCES nonprofit.member(id));

CREATE TABLE nonprofit.member (id INT PRIMARY KEY, name VARCHAR, email VARCHAR, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.project (id INT PRIMARY KEY, name VARCHAR, description TEXT, organization_id INT REFERENCES nonprofit.organization(id));

CREATE TABLE nonprofit.organization (id INT PRIMARY KEY, name VARCHAR, location VARCHAR, established_date DATE);</t><stat>grant select, insert on nonprofit.member to donor_user;</stat>