[
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Sword', 'Weapon', 10, 50.00) ON CONFLICT (item_name) DO UPDATE SET quantity = 10, price = 50.00",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Shield', 'Defense', 15, 40.00) ON CONFLICT (item_name) DO UPDATE SET quantity = 15, price = 40.00",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Potion', 'Consumable', 20, 10.00) ON CONFLICT (item_name) DO UPDATE SET quantity = 20, price = 10.00",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Bow', 'Weapon', 8, 60.00) ON CONFLICT (item_name) DO UPDATE SET quantity = 8, price = 60.00",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Armor', 'Defense', 12, 75.00) ON CONFLICT (item_name) DO UPDATE SET quantity = 12, price = 75.00",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Mana Potion', 'Consumable', 25, 15.00) ON CONFLICT (item_name) DO UPDATE SET quantity = 25, price = 15.00",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, q... (74 characters truncated) ...nventory (item_name, item_type, quantity, price) VALUES ('Axe', 'Weapon', 5, 70.00) ON CONFLICT (item_name) DO UPDATE SET quantity = 5, price = 70.00",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Helmet', 'Defense', 9, 45.00) ON CONFLICT (item_name) DO UPDATE SET quantity = 9, price = 45.00",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Sword', 'Weapon', 10, 25.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 5, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Shield', 'Armor', 8, 35.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 3, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Potion', 'Consumable', 20, 5.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 10, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Bow', 'Weapon', 15, 30.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 7, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Helmet', 'Armor', 5, 15.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 2, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Ring', 'Accessory', 12, 10.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 4, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Scroll', 'Consumable', 25, 3.50) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 15, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Axe', 'Weapon', 7, 40.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 2, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Chestplate', 'Armor', 3, 20.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 1, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Amulet', 'Accessory', 10, 8.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 3, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Key', 'Quest Item', 1, 50.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 1, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Staff', 'Weapon', 9, 35.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 4, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Gauntlets', 'Armor', 6, 18.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 3, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Gem', 'Currency', 50, 1.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 20, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Cloak', 'Armor', 4, 25.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 2, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Orb', 'Consumable', 30, 2.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 12, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Dagger', 'Weapon', 12, 20.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 6, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Boots', 'Armor', 7, 12.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 3, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Medallion', 'Accessory', 8, 15.00) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 4, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE game_inventory (\n    id SERIAL PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(20) NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO game_inventory (item_name, item_type, quantity, price) VALUES ('Scroll of Wisdom', 'Consumable', 18, 7.50) ON CONFLICT (item_name, item_type) DO UPDATE SET quantity = quantity + 8, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (1, 'Sword', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (2, 'Bow', 'Ranged') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (3, 'Staff', 'Magic') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (4, 'Axe', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (5, 'Dagger', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (6, 'Crossbow', 'Ranged') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (7, 'Wand', 'Magic') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (8, 'Hammer', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (9, 'Spear', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (10, 'Magic Staff', 'Magic') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (11, 'Sling', 'Ranged') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (12, 'Claw', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (13, 'Longbow', 'Ranged') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (14, 'Enchanted Sword', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (15, 'Fire Staff', 'Magic') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (16, 'Mace', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (17, 'Short Bow', 'Ranged') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (18, 'Poison Dagger', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (19, 'Crystal Wand', 'Magic') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (20, 'Battle Axe', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name=excluded.weapon_name, weapon_type=excluded.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (1, 'Sword', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (2, 'Bow', 'Ranged') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (3, 'Staff', 'Magic') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (4, 'Dagger', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (5, 'Crossbow', 'Ranged') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (6, 'Wand', 'Magic') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (7, 'Axe', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (8, 'Longbow', 'Ranged') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (9, 'Rod', 'Magic') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (10, 'Mace', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (11, 'Shortbow', 'Ranged') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (12, 'Scepter', 'Magic') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (13, 'Spear', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (14, 'Slingshot', 'Ranged') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (15, 'Crystal Ball', 'Magic') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (16, 'Hammer', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (17, 'Catapult', 'Ranged') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (18, 'Cauldron', 'Magic') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (19, 'Scythe', 'Melee') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(255) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(255) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO weapons (weapon_id, weapon_name, weapon_type) VALUES (20, 'Orb', 'Magic') ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = EXCLUDED.weapon_name, weapon_type = EXCLUDED.weapon_type;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type, attack_power) VALUES (1, 'Sword', 'Melee', 50) ON DUPLICATE KEY UPDATE weapon_name='Sword', weapon_type='Melee', attack_power=50",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type, attack_power) VALUES (2, 'Bow', 'Ranged', 40) ON DUPLICATE KEY UPDATE weapon_name='Bow', weapon_type='Ranged', attack_power=40",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type, attack_power) VALUES (3, 'Staff', 'Magic', 60) ON DUPLICATE KEY UPDATE weapon_name='Staff', weapon_type='Magic', attack_power=60",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type, attack_power) VALUES (4, 'Dagger', 'Assassin', 45) ON DUPLICATE KEY UPDATE weapon_name='Dagger', weapon_type='Assassin', attack_power=45",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type, attack_power) VALUES (5, 'Hammer', 'Heavy', 55) ON DUPLICATE KEY UPDATE weapon_name='Hammer', weapon_type='Heavy', attack_power=55",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, armor_type, defense_power) VALUES (1, 'Helmet', 'Head', 20) ON DUPLICATE KEY UPDATE armor_name='Helmet', armor_type='Head', defense_power=20",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, armor_type, defense_power) VALUES (2, 'Chestplate', 'Chest', 30) ON DUPLICATE KEY UPDATE armor_name='Chestplate', armor_type='Chest', defense_power=30",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, armor_type, defense_power) VALUES (3, 'Gauntlets', 'Hands', 15) ON DUPLICATE KEY UPDATE armor_name='Gauntlets', armor_type='Hands', defense_power=15",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, armor_type, defense_power) VALUES (4, 'Leggings', 'Legs', 25) ON DUPLICATE KEY UPDATE armor_name='Leggings', armor_type='Legs', defense_power=25",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, armor_type, defense_power) VALUES (5, 'Boots', 'Feet', 10) ON DUPLICATE KEY UPDATE armor_name='Boots', armor_type='Feet', defense_power=10",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, item_type, quantity) VALUES (1, 'Health Potion', 'Consumable', 5) ON DUPLICATE KEY UPDATE item_name='Health Potion', item_type='Consumable', quantity=5",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, item_type, quantity) VALUES (2, 'Mana Potion', 'Consumable', 3) ON DUPLICATE KEY UPDATE item_name='Mana Potion', item_type='Consumable', quantity=3",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, item_type, quantity) VALUES (3, 'Elixir', 'Consumable', 2) ON DUPLICATE KEY UPDATE item_name='Elixir', item_type='Consumable', quantity=2",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, item_type, quantity) VALUES (4, 'Scroll of Wisdom', 'Consumable', 1) ON DUPLICATE KEY UPDATE item_name='Scroll of Wisdom', item_type='Consumable', quantity=1",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, item_type, quantity) VALUES (5, 'Repair Kit', 'Consumable', 4) ON DUPLICATE KEY UPDATE item_name='Repair Kit', item_type='Consumable', quantity=4",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type, attack_power) VALUES (1, 'Sword', 'Melee', 50) ON DUPLICATE KEY UPDATE weapon_name = 'Sword', weapon_type = 'Melee', attack_power = 50;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, armor_type, defense_power) VALUES (1, 'Steel Armor', 'Heavy', 200) ON DUPLICATE KEY UPDATE armor_name = 'Steel Armor', armor_type = 'Heavy', defense_power = 200;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, item_type, quantity) VALUES (1, 'Potion', 'Consumable', 10) ON DUPLICATE KEY UPDATE item_name = 'Potion', item_type = 'Consumable', quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type, attack_power) VALUES (2, 'Bow', 'Ranged', 40) ON DUPLICATE KEY UPDATE weapon_name = 'Bow', weapon_type = 'Ranged', attack_power = 40;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, armor_type, defense_power) VALUES (2, 'Leather Armor', 'Light', 100) ON DUPLICATE KEY UPDATE armor_name = 'Leather Armor', armor_type = 'Light', defense_power = 100;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, item_type, quantity) VALUES (2, 'Arrow', 'Ammunition', 50) ON DUPLICATE KEY UPDATE item_name = 'Arrow', item_type = 'Ammunition', quantity = 50;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type, attack_power) VALUES (3, 'Axe', 'Melee', 60) ON DUPLICATE KEY UPDATE weapon_name = 'Axe', weapon_type = 'Melee', attack_power = 60;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, armor_type, defense_power) VALUES (3, 'Chainmail', 'Medium', 150) ON DUPLICATE KEY UPDATE armor_name = 'Chainmail', armor_type = 'Medium', defense_power = 150;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, item_type, quantity) VALUES (3, 'Scroll', 'Miscellaneous', 5) ON DUPLICATE KEY UPDATE item_name = 'Scroll', item_type = 'Miscellaneous', quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type, attack_power) VALUES (4, 'Dagger', 'Melee', 30) ON DUPLICATE KEY UPDATE weapon_name = 'Dagger', weapon_type = 'Melee', attack_power = 30;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, armor_type, defense_power) VALUES (4, 'Robe', 'Magic', 80) ON DUPLICATE KEY UPDATE armor_name = 'Robe', armor_type = 'Magic', defense_power = 80;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, item_type, quantity) VALUES (4, 'Gem', 'Valuables', 3) ON DUPLICATE KEY UPDATE item_name = 'Gem', item_type = 'Valuables', quantity = 3;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type, attack_power) VALUES (5, 'Staff', 'Magic', 70) ON DUPLICATE KEY UPDATE weapon_name = 'Staff', weapon_type = 'Magic', attack_power = 70;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, armor_type, defense_power) VALUES (5, 'Plate Armor', 'Heavy', 250) ON DUPLICATE KEY UPDATE armor_name = 'Plate Armor', armor_type = 'Heavy', defense_power = 250;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, item_type, quantity) VALUES (5, 'Gold Coin', 'Currency', 100) ON DUPLICATE KEY UPDATE item_name = 'Gold Coin', item_type = 'Currency', quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type, attack_power) VALUES (6, 'Longbow', 'Ranged', 45) ON DUPLICATE KEY UPDATE weapon_name = 'Longbow', weapon_type = 'Ranged', attack_power = 45;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, armor_type, defense_power) VALUES (6, 'Scale Armor', 'Medium', 170) ON DUPLICATE KEY UPDATE armor_name = 'Scale Armor', armor_type = 'Medium', defense_power = 170;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, item_type, quantity) VALUES (6, 'Health Potion', 'Consumable', 15) ON DUPLICATE KEY UPDATE item_name = 'Health Potion', item_type = 'Consumable', quantity = 15;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, weapon_type, attack_power) VALUES (7, 'Mace', 'Melee', 55) ON DUPLICATE KEY UPDATE weapon_name = 'Mace', weapon_type = 'Melee', attack_power = 55;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, armor_type, defense_power) VALUES (7, 'Helm', 'Headgear', 70) ON DUPLICATE KEY UPDATE armor_name = 'Helm', armor_type = 'Headgear', defense_power = 70;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50) NOT NULL,\n    weapon_type VARCHAR(50) NOT NULL,\n    attack_power INT\n);\n\nCREATE TABLE armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50) NOT NULL,\n    armor_type VARCHAR(50) NOT NULL,\n    defense_power INT\n);\n\nCREATE TABLE items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    item_type VARCHAR(50) NOT NULL,\n    quantity INT\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, item_type, quantity) VALUES (7, 'Magic Scroll', 'Consumable', 8) ON DUPLICATE KEY UPDATE item_name = 'Magic Scroll', item_type = 'Consumable', quantity = 8;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, damage) VALUES (1, 'Sword', 50) ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = 'Sword', damage = 50;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, damage) VALUES (2, 'Axe', 60) ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = 'Axe', damage = 60;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, defense) VALUES (1, 'Helmet', 20) ON CONFLICT (armor_id) DO UPDATE SET armor_name = 'Helmet', defense = 20;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, defense) VALUES (2, 'Chestplate', 30) ON CONFLICT (armor_id) DO UPDATE SET armor_name = 'Chestplate', defense = 30;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, weight) VALUES (1, 'Potion', 1) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Potion', weight = 1;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, weight) VALUES (2, 'Scroll', 2) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Scroll', weight = 2;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, item_id, quantity) VALUES (1, 1, 10) ON CONFLICT (inventory_id) DO UPDATE SET item_id = 1, quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, item_id, quantity) VALUES (2, 2, 5) ON CONFLICT (inventory_id) DO UPDATE SET item_id = 2, quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, damage) VALUES (3, 'Dagger', 40) ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = 'Dagger', damage = 40;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, defense) VALUES (3, 'Boots', 10) ON CONFLICT (armor_id) DO UPDATE SET armor_name = 'Boots', defense = 10;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, weight) VALUES (3, 'Ring', 0) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Ring', weight = 0;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, item_id, quantity) VALUES (3, 3, 20) ON CONFLICT (inventory_id) DO UPDATE SET item_id = 3, quantity = 20;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, damage) VALUES (4, 'Bow', 55) ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = 'Bow', damage = 55;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, defense) VALUES (4, 'Gloves', 15) ON CONFLICT (armor_id) DO UPDATE SET armor_name = 'Gloves', defense = 15;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, weight) VALUES (4, 'Shield', 5) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Shield', weight = 5;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, item_id, quantity) VALUES (4, 4, 3) ON CONFLICT (inventory_id) DO UPDATE SET item_id = 4, quantity = 3;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, damage) VALUES (5, 'Staff', 45) ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = 'Staff', damage = 45;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, defense) VALUES (5, 'Robe', 25) ON CONFLICT (armor_id) DO UPDATE SET armor_name = 'Robe', defense = 25;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, weight) VALUES (5, 'Amulet', 2) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Amulet', weight = 2;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, item_id, quantity) VALUES (5, 5, 8) ON CONFLICT (inventory_id) DO UPDATE SET item_id = 5, quantity = 8;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, damage) VALUES (6, 'Hammer', 65) ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = 'Hammer', damage = 65;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, damage) VALUES (1, 'Sword', 50) ON CONFLICT (weapon_id) DO UPDATE SET damage = 50;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, defense) VALUES (1, 'Helmet', 20) ON CONFLICT (armor_id) DO UPDATE SET defense = 20;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, weight) VALUES (1, 'Health Potion', 1) ON CONFLICT (item_id) DO UPDATE SET weight = 1;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, item_id, quantity) VALUES (1, 1, 10) ON CONFLICT (inventory_id) DO UPDATE SET quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, damage) VALUES (2, 'Bow', 40) ON CONFLICT (weapon_id) DO UPDATE SET damage = 40;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, defense) VALUES (2, 'Shield', 30) ON CONFLICT (armor_id) DO UPDATE SET defense = 30;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, weight) VALUES (2, 'Mana Potion', 1) ON CONFLICT (item_id) DO UPDATE SET weight = 1;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, item_id, quantity) VALUES (2, 2, 5) ON CONFLICT (inventory_id) DO UPDATE SET quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, damage) VALUES (3, 'Axe', 60) ON CONFLICT (weapon_id) DO UPDATE SET damage = 60;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, defense) VALUES (3, 'Chestplate', 50) ON CONFLICT (armor_id) DO UPDATE SET defense = 50;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, weight) VALUES (3, 'Key', 0) ON CONFLICT (item_id) DO UPDATE SET weight = 0;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, item_id, quantity) VALUES (3, 3, 1) ON CONFLICT (inventory_id) DO UPDATE SET quantity = 1;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, damage) VALUES (4, 'Dagger', 30) ON CONFLICT (weapon_id) DO UPDATE SET damage = 30;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, defense) VALUES (4, 'Gloves', 10) ON CONFLICT (armor_id) DO UPDATE SET defense = 10;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, weight) VALUES (4, 'Gold Coin', 0) ON CONFLICT (item_id) DO UPDATE SET weight = 0;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, item_id, quantity) VALUES (4, 4, 100) ON CONFLICT (inventory_id) DO UPDATE SET quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO weapons (weapon_id, weapon_name, damage) VALUES (5, 'Staff', 35) ON CONFLICT (weapon_id) DO UPDATE SET damage = 35;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO armor (armor_id, armor_name, defense) VALUES (5, 'Robe', 15) ON CONFLICT (armor_id) DO UPDATE SET defense = 15;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO items (item_id, item_name, weight) VALUES (5, 'Scroll', 1) ON CONFLICT (item_id) DO UPDATE SET weight = 1;",
  "### TABLEDATA\n\nCREATE TABLE weapons (\n  weapon_id INT PRIMARY KEY,\n  weapon_name VARCHAR(50) NOT NULL,\n  damage INT NOT NULL\n);\n\nCREATE TABLE armor (\n  armor_id INT PRIMARY KEY,\n  armor_name VARCHAR(50) NOT NULL,\n  defense INT NOT NULL\n);\n\nCREATE TABLE items (\n  item_id INT PRIMARY KEY,\n  item_name VARCHAR(50) NOT NULL,\n  weight INT NOT NULL\n);\n\nCREATE TABLE inventory (\n  inventory_id INT PRIMARY KEY,\n  item_id INT REFERENCES items(item_id),\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO inventory (inventory_id, item_id, quantity) VALUES (5, 5, 20) ON CONFLICT (inventory_id) DO UPDATE SET quantity = 20;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Weapons (weapon_id, weapon_name, damage) VALUES (1, 'Sword', 25) ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = excluded.weapon_name, damage = excluded.damage;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Armor (armor_id, armor_name, defense) VALUES (1, 'Helmet', 10) ON CONFLICT (armor_id) DO UPDATE SET armor_name = excluded.armor_name, defense = excluded.defense;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Items (item_id, item_name, quantity) VALUES (1, 'Potion', 5) ON CONFLICT (item_id) DO UPDATE SET item_name = excluded.item_name, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (inventory_id, item_id, weapon_id, armor_id) VALUES (1, 1, 1, 1) ON CONFLICT (inventory_id) DO UPDATE SET item_id = excluded.item_id, weapon_id = excluded.weapon_id, armor_id = excluded.armor_id;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Players (player_id, player_name, inventory_id) VALUES (1, 'Hero', 1) ON CONFLICT (player_id) DO UPDATE SET player_name = excluded.player_name, inventory_id = excluded.inventory_id;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Weapons (weapon_id, weapon_name, damage) VALUES (2, 'Bow', 20) ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = excluded.weapon_name, damage = excluded.damage;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Armor (armor_id, armor_name, defense) VALUES (2, 'Chestplate', 15) ON CONFLICT (armor_id) DO UPDATE SET armor_name = excluded.armor_name, defense = excluded.defense;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Items (item_id, item_name, quantity) VALUES (2, 'Arrow', 30) ON CONFLICT (item_id) DO UPDATE SET item_name = excluded.item_name, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (inventory_id, item_id, weapon_id, armor_id) VALUES (2, 2, 2, 2) ON CONFLICT (inventory_id) DO UPDATE SET item_id = excluded.item_id, weapon_id = excluded.weapon_id, armor_id = excluded.armor_id;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Players (player_id, player_name, inventory_id) VALUES (2, 'Warrior', 2) ON CONFLICT (player_id) DO UPDATE SET player_name = excluded.player_name, inventory_id = excluded.inventory_id;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Weapons (weapon_id, weapon_name, damage) VALUES (3, 'Axe', 30) ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = excluded.weapon_name, damage = excluded.damage;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Armor (armor_id, armor_name, defense) VALUES (3, 'Shield', 12) ON CONFLICT (armor_id) DO UPDATE SET armor_name = excluded.armor_name, defense = excluded.defense;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Items (item_id, item_name, quantity) VALUES (3, 'Scroll', 10) ON CONFLICT (item_id) DO UPDATE SET item_name = excluded.item_name, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (inventory_id, item_id, weapon_id, armor_id) VALUES (3, 3, 3, 3) ON CONFLICT (inventory_id) DO UPDATE SET item_id = excluded.item_id, weapon_id = excluded.weapon_id, armor_id = excluded.armor_id;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Players (player_id, player_name, inventory_id) VALUES (3, 'Mage', 3) ON CONFLICT (player_id) DO UPDATE SET player_name = excluded.player_name, inventory_id = excluded.inventory_id;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Weapons (weapon_id, weapon_name, damage) VALUES (4, 'Dagger', 15) ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = excluded.weapon_name, damage = excluded.damage;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Armor (armor_id, armor_name, defense) VALUES (4, 'Robe', 8) ON CONFLICT (armor_id) DO UPDATE SET armor_name = excluded.armor_name, defense = excluded.defense;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Items (item_id, item_name, quantity) VALUES (4, 'Necklace', 1) ON CONFLICT (item_id) DO UPDATE SET item_name = excluded.item_name, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (inventory_id, item_id, weapon_id, armor_id) VALUES (4, 4, 4, 4) ON CONFLICT (inventory_id) DO UPDATE SET item_id = excluded.item_id, weapon_id = excluded.weapon_id, armor_id = excluded.armor_id;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Players (player_id, player_name, inventory_id) VALUES (4, 'Rogue', 4) ON CONFLICT (player_id) DO UPDATE SET player_name = excluded.player_name, inventory_id = excluded.inventory_id;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Weapons (weapon_id, weapon_name, damage) VALUES (1, 'Sword', 20) ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = 'Sword', damage = 20;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Armor (armor_id, armor_name, defense) VALUES (1, 'Plate Armor', 30) ON CONFLICT (armor_id) DO UPDATE SET armor_name = 'Plate Armor', defense = 30;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Items (item_id, item_name, quantity) VALUES (1, 'Health Potion', 5) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Health Potion', quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (inventory_id, item_id, weapon_id, armor_id) VALUES (1, 1, 1, 1) ON CONFLICT (inventory_id) DO UPDATE SET item_id = 1, weapon_id = 1, armor_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Players (player_id, player_name, inventory_id) VALUES (1, 'Player1', 1) ON CONFLICT (player_id) DO UPDATE SET player_name = 'Player1', inventory_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Weapons (weapon_id, weapon_name, damage) VALUES (2, 'Bow', 15) ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = 'Bow', damage = 15;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Armor (armor_id, armor_name, defense) VALUES (2, 'Leather Armor', 10) ON CONFLICT (armor_id) DO UPDATE SET armor_name = 'Leather Armor', defense = 10;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Items (item_id, item_name, quantity) VALUES (2, 'Arrow', 50) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Arrow', quantity = 50;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (inventory_id, item_id, weapon_id, armor_id) VALUES (2, 2, 2, 2) ON CONFLICT (inventory_id) DO UPDATE SET item_id = 2, weapon_id = 2, armor_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Players (player_id, player_name, inventory_id) VALUES (2, 'Player2', 2) ON CONFLICT (player_id) DO UPDATE SET player_name = 'Player2', inventory_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Weapons (weapon_id, weapon_name, damage) VALUES (3, 'Dagger', 10) ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = 'Dagger', damage = 10;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Armor (armor_id, armor_name, defense) VALUES (3, 'Chainmail', 20) ON CONFLICT (armor_id) DO UPDATE SET armor_name = 'Chainmail', defense = 20;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Items (item_id, item_name, quantity) VALUES (3, 'Mana Potion', 5) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Mana Potion', quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (inventory_id, item_id, weapon_id, armor_id) VALUES (3, 3, 3, 3) ON CONFLICT (inventory_id) DO UPDATE SET item_id = 3, weapon_id = 3, armor_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Players (player_id, player_name, inventory_id) VALUES (3, 'Player3', 3) ON CONFLICT (player_id) DO UPDATE SET player_name = 'Player3', inventory_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Weapons (weapon_id, weapon_name, damage) VALUES (4, 'Staff', 12) ON CONFLICT (weapon_id) DO UPDATE SET weapon_name = 'Staff', damage = 12;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Armor (armor_id, armor_name, defense) VALUES (4, 'Robe', 5) ON CONFLICT (armor_id) DO UPDATE SET armor_name = 'Robe', defense = 5;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Items (item_id, item_name, quantity) VALUES (4, 'Scroll', 3) ON CONFLICT (item_id) DO UPDATE SET item_name = 'Scroll', quantity = 3;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (inventory_id, item_id, weapon_id, armor_id) VALUES (4, 4, 4, 4) ON CONFLICT (inventory_id) DO UPDATE SET item_id = 4, weapon_id = 4, armor_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE Weapons (\n    weapon_id INT PRIMARY KEY,\n    weapon_name VARCHAR(50),\n    damage INT\n);\n\n\nCREATE TABLE Armor (\n    armor_id INT PRIMARY KEY,\n    armor_name VARCHAR(50),\n    defense INT\n);\n\n\nCREATE TABLE Items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50),\n    quantity INT\n);\n\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT,\n    weapon_id INT,\n    armor_id INT,\n    FOREIGN KEY (item_id) REFERENCES Items(item_id),\n    FOREIGN KEY (weapon_id) REFERENCES Weapons(weapon_id),\n    FOREIGN KEY (armor_id) REFERENCES Armor(armor_id)\n);\n\n\nCREATE TABLE Players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    inventory_id INT,\n    FOREIGN KEY (inventory_id) REFERENCES Inventory(inventory_id)\n);\n\n### STATEMENT\n\nINSERT INTO Players (player_id, player_name, inventory_id) VALUES (4, 'Player4', 4) ON CONFLICT (player_id) DO UPDATE SET player_name = 'Player4', inventory_id = 4;"
]