[
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM game_settings WHERE player_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT theme FROM game_settings WHERE player_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT sound_enabled, notification_enabled FROM game_settings WHERE player_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM game_settings WHERE theme = 'dark';",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, music_volume FROM game_settings WHERE sound_enabled = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(music_volume) AS max_volume FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT theme FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, COUNT(*) AS settings_count FROM game_settings GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM game_settings WHERE notification_enabled = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, AVG(music_volume) AS avg_volume FROM game_settings GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM game_settings WHERE theme LIKE 'light%';",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, SUM(music_volume) AS total_volume FROM game_settings GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM game_settings WHERE sound_enabled = TRUE AND notification_enabled = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, MIN(music_volume) AS min_volume FROM game_settings GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM game_settings WHERE theme = 'classic' OR theme = 'retro';",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, MAX(music_volume) AS max_volume FROM game_settings GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM game_settings ORDER BY player_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, sound_enabled, notification_enabled FROM game_settings WHERE music_volume > 50;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(music_volume) AS avg_volume FROM game_settings WHERE notification_enabled = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM game_settings WHERE player_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, theme, sound_enabled FROM game_settings WHERE music_volume > 50;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, theme FROM game_settings WHERE sound_enabled = TRUE AND notification_enabled = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT count(*) AS total_players FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, theme, sound_enabled, music_volume FROM game_settings WHERE player_id <> 5;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, theme FROM game_settings WHERE music_volume BETWEEN 20 AND 50;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, theme, sound_enabled FROM game_settings WHERE theme LIKE 'Dark%';",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, theme, notification_enabled FROM game_settings WHERE theme = 'Forest' OR theme = 'Ocean';",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, theme, music_volume FROM game_settings ORDER BY music_volume DESC;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, theme, music_volume FROM game_settings ORDER BY theme ASC;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT theme FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(music_volume) AS avg_volume FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, theme, sound_enabled FROM game_settings WHERE player_id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, theme, sound_enabled FROM game_settings WHERE sound_enabled = TRUE UNION SELECT player_id, theme, sound_enabled FROM game_settings WHERE notification_enabled = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, COUNT(*) AS total_settings FROM game_settings GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, theme, sound_enabled FROM game_settings WHERE music_volume >= 30 AND notification_enabled = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, theme, sound_enabled FROM game_settings WHERE theme IN ('Dark', 'Light', 'Ocean');",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, theme, sound_enabled FROM game_settings WHERE theme NOT LIKE 'Forest%';",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, theme, sound_enabled FROM game_settings WHERE sound_enabled = TRUE LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE game_settings (\n    player_id INT NOT NULL,\n    theme VARCHAR(50) NOT NULL,\n    sound_enabled BOOLEAN NOT NULL,\n    music_volume INT NOT NULL,\n    notification_enabled BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, MAX(music_volume) AS max_volume FROM game_settings GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT * FROM player_preferences;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, sound_volume FROM player_preferences;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, graphics_quality FROM player_preferences;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT * FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, default_language FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, max_players FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume, graphics_quality FROM player_preferences;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume, graphics_quality FROM player_preferences WHERE sound_volume > 50;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, default_language, max_players FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume, graphics_quality FROM player_preferences WHERE player_id = '12345678-1234-1234-1234-1234567890AB';",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume, graphics_quality FROM player_preferences WHERE game_id = '12345678-1234-1234-1234-1234567890AB';",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, default_language, max_players FROM game_settings WHERE game_id = '12345678-1234-1234-1234-1234567890AB';",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume, graphics_quality FROM player_preferences WHERE sound_volume < 50;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume, graphics_quality FROM player_preferences WHERE graphics_quality >= 80;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, default_language, max_players FROM game_settings WHERE max_players < 100;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume, graphics_quality FROM player_preferences WHERE player_id = '87654321-4321-4321-4321-2109876543BA';",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume, graphics_quality FROM player_preferences WHERE game_id = '87654321-4321-4321-4321-2109876543BA';",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, default_language, max_players FROM game_settings WHERE game_id = '87654321-4321-4321-4321-2109876543BA';",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume, graphics_quality FROM player_preferences WHERE sound_volume > 70;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume, graphics_quality FROM player_preferences WHERE graphics_quality < 60;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume, graphics_quality FROM player_preferences WHERE sound_volume > 50;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, default_language, max_players FROM game_settings WHERE max_players >= 10;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume FROM player_preferences WHERE sound_volume BETWEEN 30 AND 70;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, default_language FROM game_settings WHERE default_language = 'English';",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id FROM player_preferences WHERE graphics_quality = 3;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume FROM player_preferences WHERE game_id = 'aeb11846-4e04-4b19-b0ac-7dcd5345060f';",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, default_language, max_players FROM game_settings WHERE max_players < 20;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, graphics_quality FROM player_preferences WHERE sound_volume < 50 AND graphics_quality >= 2;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, default_language FROM game_settings WHERE game_id IN ('aeb11846-4e04-4b19-b0ac-7dcd5345060f', '4c681bf9-58d8-4ccb-b972-bb5fcc333e58');",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id FROM player_preferences WHERE sound_volume > 50 AND graphics_quality = 3;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, default_language, max_players FROM game_settings WHERE max_players BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id FROM player_preferences WHERE sound_volume > 70 OR graphics_quality < 2;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume FROM player_preferences WHERE game_id = '4c681bf9-58d8-4ccb-b972-bb5fcc333e58';",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, default_language FROM game_settings WHERE default_language LIKE '%French%';",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, graphics_quality FROM player_preferences WHERE graphics_quality = 1 OR graphics_quality = 3;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, default_language, max_players FROM game_settings WHERE default_language != 'Spanish';",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id, sound_volume FROM player_preferences WHERE sound_volume < 30 OR graphics_quality > 2;",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, default_language FROM game_settings WHERE max_players = (SELECT MAX(max_players) FROM game_settings);",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT player_id, game_id FROM player_preferences WHERE sound_volume = (SELECT MAX(sound_volume) FROM player_preferences);",
  "### TABLEDATA\n\nCREATE TABLE player_preferences (\n    player_id UUID PRIMARY KEY,\n    game_id UUID,\n    sound_volume INT,\n    graphics_quality INT\n);\n\nCREATE TABLE game_settings (\n    game_id UUID PRIMARY KEY,\n    default_language VARCHAR(50),\n    max_players INT\n);\n\n### STATEMENT\n\nSELECT game_id, default_language, max_players FROM game_settings WHERE default_language = 'German' AND max_players > 15;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM players;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT player_id, username FROM players;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT setting_id, resolution, graphics_quality FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM preferences;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT preference_id, player_id FROM preferences;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT player_id, username, age FROM players;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT setting_id, resolution, sound_volume FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT player_id, username, email FROM players;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT preference_id, theme, language FROM preferences;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM players WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM game_settings WHERE sound_volume > 50;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM preferences WHERE notifications = true;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT player_id, username FROM players WHERE age < 25;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT setting_id, resolution FROM game_settings WHERE graphics_quality = 'High';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM players WHERE username LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM game_settings WHERE resolution LIKE '%x720';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM preferences WHERE language = 'English';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT player_id, username, email FROM players WHERE age <= 40;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM preferences WHERE theme = 'Dark';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM players WHERE age > 25;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT player_id, username FROM players WHERE registration_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT player_id, email FROM players WHERE username LIKE 'joh%';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT p.username, g.resolution FROM players p JOIN game_settings g ON p.player_id = g.player_id WHERE g.sound_volume > 50;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT p.username, p.age, ps.theme FROM players p JOIN preferences ps ON p.player_id = ps.player_id WHERE ps.notifications = true;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT p.username, ps.language, gs.graphics_quality FROM players p JOIN preferences ps ON p.player_id = ps.player_id JOIN game_settings gs ON p.player_id = gs.player_id WHERE ps.theme = 'dark' AND gs.resolution = '1920x1080';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT AVG(age) AS average_age, MAX(age) AS max_age, MIN(age) AS min_age FROM players;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_players FROM players;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT AVG(sound_volume) AS avg_sound_volume, MAX(sound_volume) AS max_sound_volume, MIN(sound_volume) AS min_sound_volume FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_preferences FROM preferences;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT username, age, registration_date FROM players ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT username, COALESCE(email, 'N/A') AS email FROM players;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT player_id, resolution, sound_volume FROM game_settings WHERE resolution IN ('1920x1080', '1280x720');",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT p.username, ps.theme AS preferred_theme, gs.graphics_quality AS preferred_quality FROM players p JOIN preferences ps ON p.player_id = ps.player_id JOIN game_settings gs ON p.player_id = gs.player_id WHERE ps.language = 'English';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT p.username, ps.theme AS preferred_theme, gs.graphics_quality AS preferred_quality FROM players p JOIN preferences ps ON p.player_id = ps.player_id JOIN game_settings gs ON p.player_id = gs.player_id WHERE p.age BETWEEN 20 AND 30;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT p.username, COUNT(p.player_id) AS games_played FROM players p JOIN game_settings g ON p.player_id = g.player_id GROUP BY p.username;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT p.username, g.resolution, p.registration_date FROM players p JOIN game_settings g ON p.player_id = g.player_id WHERE p.age >= 18 AND p.age <= 25;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT p.username, ps.theme, gs.graphics_quality FROM players p LEFT JOIN preferences ps ON p.player_id = ps.player_id LEFT JOIN game_settings gs ON p.player_id = gs.player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT p.username, ps.notifications, COALESCE(email, 'N/A') AS email FROM players p LEFT JOIN preferences ps ON p.player_id = ps.player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT p.username, ps.language, gs.sound_volume FROM players p RIGHT JOIN preferences ps ON p.player_id = ps.player_id RIGHT JOIN game_settings gs ON p.player_id = gs.player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id UUID PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  registration_date DATE\n)\n\nCREATE TABLE game_settings (\n  setting_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  resolution VARCHAR(20),\n  graphics_quality VARCHAR(20),\n  sound_volume INT\n)\n\nCREATE TABLE preferences (\n  preference_id UUID PRIMARY KEY,\n  player_id UUID REFERENCES players(player_id),\n  theme VARCHAR(20),\n  language VARCHAR(20),\n  notifications BOOLEAN\n)\n\n### STATEMENT\n\nSELECT COUNT(p.player_id) AS total_players, COUNT(distinct p.age) AS unique_age_count FROM players p JOIN game_settings g ON p.player_id = g.player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM players;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, username, email FROM players WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, username FROM players WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, email FROM players WHERE preferences->>'language' = 'English';",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM game_settings;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT setting_id, setting_name FROM game_settings WHERE setting_name = 'difficulty_level';",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT setting_name, setting_value FROM game_settings WHERE setting_value->>'theme' = 'dark';",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM player_games;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT game_id, game_name FROM player_games WHERE game_score > 100;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, game_name, game_score FROM player_games WHERE player_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM player_friends;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT friend_id, friend_name FROM player_friends WHERE player_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, friend_name FROM player_friends WHERE friend_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.player_id, p.username, f.friend_name FROM players p JOIN player_friends f ON p.player_id = f.player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.player_id, p.username, g.game_name FROM players p JOIN player_games g ON p.player_id = g.player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.username, g.game_name, f.friend_name FROM players p JOIN player_games g ON p.player_id = g.player_id JOIN player_friends f ON p.player_id = f.player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.username, COUNT(g.game_id) AS total_games FROM players p JOIN player_games g ON p.player_id = g.player_id GROUP BY p.username;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.username, AVG(g.game_score) AS avg_score FROM players p JOIN player_games g ON p.player_id = g.player_id GROUP BY p.username;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.username, MAX(g.game_score) AS highest_score FROM players p JOIN player_games g ON p.player_id = g.player_id GROUP BY p.username;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT p.username FROM players p JOIN player_games g ON p.player_id = g.player_id WHERE g.game_score > 200;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM players WHERE username = 'JohnDoe';",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, email FROM players WHERE player_id = '1a2b3c';",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, game_name FROM player_games WHERE game_score > 100;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM players JOIN player_games ON players.player_id = player_games.player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT players.username, player_games.game_name FROM players JOIN player_games ON players.player_id = player_games.player_id WHERE player_games.game_score > 200;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, friend_id FROM player_friends WHERE player_id = 'xyz123';",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, game_name FROM player_games WHERE game_name LIKE '%ball%';",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, friend_name FROM player_friends WHERE friend_name IN ('Alice', 'Bob', 'Charlie');",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, username, email FROM players WHERE preferences -> 'language' = 'English';",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, friend_name FROM player_friends WHERE player_id IN (SELECT player_id FROM player_games WHERE game_score > 150);",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, game_name FROM player_games WHERE player_id NOT IN (SELECT player_id FROM player_friends);",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, MAX(game_score) AS highest_score FROM player_games GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, COUNT(game_id) AS total_games FROM player_games GROUP BY player_id HAVING COUNT(game_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, AVG(game_score) AS average_score FROM player_games GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, COUNT(DISTINCT game_name) AS unique_games FROM player_games GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(player_id) AS total_players FROM players;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.player_id, p.username, COUNT(pg.game_id) AS total_games FROM players p LEFT JOIN player_games pg ON p.player_id = pg.player_id GROUP BY p.player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, SUM(game_score) AS total_score FROM player_games GROUP BY player_id HAVING SUM(game_score) > 500;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, game_name, game_score FROM player_games ORDER BY game_score DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE players (\n    player_id UUID PRIMARY KEY,\n    username VARCHAR NOT NULL,\n    email VARCHAR NOT NULL,\n    preferences JSONB\n);\n\n\nCREATE TABLE game_settings (\n    setting_id UUID PRIMARY KEY,\n    setting_name VARCHAR NOT NULL,\n    setting_value JSONB\n);\n\n\nCREATE TABLE player_games (\n    game_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    game_name VARCHAR NOT NULL,\n    game_score INT\n);\n\n\nCREATE TABLE player_friends (\n    friend_id UUID PRIMARY KEY,\n    player_id UUID REFERENCES players(player_id),\n    friend_name VARCHAR NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, friend_name FROM player_friends WHERE player_id = 'abc456' UNION SELECT player_id, username FROM players WHERE email = 'example@example.com';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT * FROM players;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, player_level FROM players WHERE player_score > 1000;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, game_name FROM players p JOIN player_preferences pp ON p.player_id = pp.player_id JOIN games g ON pp.game_id = g.game_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, log_description FROM players p JOIN player_logs pl ON p.player_id = pl.player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT game_name, game_category FROM games;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT game_id, game_name, game_difficulty FROM games WHERE game_category = 'Action';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, item_name, item_quantity FROM players p JOIN player_inventory pi ON p.player_id = pi.player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT game_name, preferred_difficulty FROM games g JOIN player_preferences pp ON g.game_id = pp.game_id WHERE pp.preferred_difficulty = 'Hard';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, log_timestamp FROM players p JOIN player_logs pl ON p.player_id = pl.player_id WHERE log_timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, player_score FROM players WHERE player_level > 5;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, game_name, game_category FROM players p JOIN player_preferences pp ON p.player_id = pp.player_id JOIN games g ON pp.game_id = g.game_id WHERE p.player_score > 5000;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, item_name, item_quantity FROM players p JOIN player_inventory pi ON p.player_id = pi.player_id WHERE p.player_level < 3;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT log_id, log_description FROM player_logs WHERE player_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_id, MAX(player_score) AS highest_score FROM players;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT game_id, AVG(game_difficulty) AS avg_difficulty FROM games;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_id, COUNT(*) AS log_count FROM player_logs GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT game_name, MIN(game_difficulty) AS easiest_difficulty FROM games WHERE game_category = 'Puzzle';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, SUM(item_quantity) AS total_items FROM players p JOIN player_inventory pi ON p.player_id = pi.player_id;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT game_name, COUNT(*) AS player_count FROM games g JOIN player_preferences pp ON g.game_id = pp.game_id GROUP BY g.game_name;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, player_level, player_score FROM players WHERE player_name LIKE 'S%';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_id, player_name, player_level FROM players WHERE player_level > 5;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT game_name, game_category, game_difficulty FROM games WHERE game_category = 'Action';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, game_name, preferred_difficulty FROM players p JOIN player_preferences pp ON p.player_id = pp.player_id JOIN games g ON pp.game_id = g.game_id WHERE p.player_level >= 10;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, item_name, item_quantity FROM players p JOIN player_inventory pi ON p.player_id = pi.player_id WHERE p.player_level <= 3;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, log_description, log_timestamp FROM players p JOIN player_logs pl ON p.player_id = pl.player_id WHERE p.player_score > 1000;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, game_name, item_name, log_description FROM players p JOIN player_preferences pp ON p.player_id = pp.player_id JOIN games g ON pp.game_id = g.game_id JOIN player_inventory pi ON p.player_id = pi.player_id JOIN player_logs pl ON p.player_id = pl.player_id WHERE p.player_level >= 5;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, game_name, log_description, log_timestamp FROM players p JOIN player_preferences pp ON p.player_id = pp.player_id JOIN games g ON pp.game_id = g.game_id JOIN player_logs pl ON p.player_id = pl.player_id WHERE p.player_score <= 500;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, game_name, preferred_difficulty, item_name, item_quantity FROM players p JOIN player_preferences pp ON p.player_id = pp.player_id JOIN games g ON pp.game_id = g.game_id JOIN player_inventory pi ON p.player_id = pi.player_id WHERE p.player_score > 2000;",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, game_category, log_description FROM players p JOIN player_logs pl ON p.player_id = pl.player_id JOIN games g ON pl.game_id = g.game_id WHERE g.game_category = 'Adventure';",
  "### TABLEDATA\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(50),\n  player_level INT,\n  player_score INT\n);\n\n\nCREATE TABLE games (\n  game_id INT PRIMARY KEY,\n  game_name VARCHAR(50),\n  game_category VARCHAR(50),\n  game_difficulty VARCHAR(20)\n);\n\n\nCREATE TABLE player_preferences (\n  preference_id INT PRIMARY KEY,\n  player_id INT,\n  game_id INT,\n  preferred_difficulty VARCHAR(20),\n  FOREIGN KEY (player_id) REFERENCES players(player_id),\n  FOREIGN KEY (game_id) REFERENCES games(game_id)\n);\n\n\nCREATE TABLE player_inventory (\n  inventory_id INT PRIMARY KEY,\n  player_id INT,\n  item_name VARCHAR(50),\n  item_quantity INT,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n\nCREATE TABLE player_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP,\n  FOREIGN KEY (player_id) REFERENCES players(player_id)\n);\n\n### STATEMENT\n\nSELECT player_name, player_level, game_difficulty, item_quantity FROM players p JOIN player_inventory pi ON p.player_id = pi.player_id JOIN player_preferences pp ON p.player_id = pp.player_id JOIN games g ON pp.game_id = g.game_id WHERE p.player_level >= 8;"
]