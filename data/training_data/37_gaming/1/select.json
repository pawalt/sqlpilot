[
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT log_id, player_id FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT action, timestamp FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM game_logs WHERE player_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM game_logs WHERE action = 'login';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT log_id, timestamp FROM game_logs WHERE player_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM game_logs WHERE timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM game_logs WHERE player_id = 3 AND action = 'logout';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT log_id, action FROM game_logs WHERE player_id = 4 AND timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM game_logs ORDER BY timestamp ASC;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM game_logs ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(log_id) FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT player_id FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(log_id) FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, COUNT(*) AS num_logs FROM game_logs GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, CONCAT(player_id, '-', action) AS player_action FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM game_logs WHERE action LIKE '%attack%';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM game_logs WHERE player_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, DAYOFWEEK(timestamp) AS day_of_week FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM game_logs WHERE player_id = 10 AND action = 'attack';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, COUNT(*) as num_actions FROM game_logs GROUP BY player_id HAVING num_actions > 5;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, COUNT(DISTINCT action) as num_unique_actions FROM game_logs GROUP BY player_id HAVING num_unique_actions > 3;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, AVG(TIMESTAMPDIFF(MINUTE, timestamp, NOW())) as avg_time_between_actions FROM game_logs GROUP BY player_id ORDER BY avg_time_between_actions DESC;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT action, COUNT(*) as num_occurrences FROM game_logs GROUP BY action ORDER BY num_occurrences DESC LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, MAX(TIMESTAMP) as latest_action_timestamp FROM game_logs GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, MIN(TIMESTAMP) as earliest_action_timestamp FROM game_logs GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp)) as total_game_time_seconds FROM game_logs GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM game_logs WHERE TIMESTAMP BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, DATE(timestamp) as action_date, COUNT(*) as num_actions_on_date FROM game_logs WHERE DATE(timestamp) = '2022-06-15' GROUP BY player_id, action_date;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, TIMESTAMPDIFF(HOUR, MIN(timestamp), MAX(timestamp)) as total_game_time_hours FROM game_logs GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, action, COUNT(*) as num_actions_per_action FROM game_logs GROUP BY player_id, action HAVING num_actions_per_action > 2;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT player_id FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, COUNT(*) as total_actions FROM game_logs GROUP BY player_id HAVING total_actions < 10;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, MAX(log_id) as latest_log_id FROM game_logs GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, SUM(TIMESTAMPDIFF(SECOND, timestamp, NOW())) as total_game_duration FROM game_logs GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, action, TIMESTAMPDIFF(MINUTE, LAG(timestamp) OVER (PARTITION BY player_id ORDER BY timestamp), timestamp) as time_since_last_action FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, COUNT(*) as num_logs FROM game_logs WHERE TIMESTAMP > '2022-01-01' GROUP BY player_id HAVING num_logs > 50;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, action, TIMESTAMPDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY player_id ORDER BY timestamp)) as time_to_next_action FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, COUNT(*) as num_logs FROM game_logs WHERE MONTH(timestamp) = 6 AND YEAR(timestamp) = 2022 GROUP BY player_id HAVING num_logs > 20;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR,\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT player_id, AVG(TIMESTAMPDIFF(SECOND, LAG(timestamp) OVER (ORDER BY timestamp), timestamp)) as avg_time_between_actions_all_players FROM game_logs GROUP BY player_id ORDER BY avg_time_between_actions_all_players DESC;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT * FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT log_id, player_id FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, action FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT * FROM player_progress;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT progress_id, level FROM player_progress;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, score FROM player_progress;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT * FROM game_logs WHERE player_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT * FROM game_logs WHERE action = 'start';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT * FROM game_logs WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT * FROM player_progress WHERE level > 10;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT * FROM player_progress WHERE score >= 1000;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT * FROM player_progress WHERE player_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, COUNT(*) AS total_logs FROM game_logs GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, MAX(level) AS max_level FROM player_progress GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, AVG(score) AS avg_score FROM player_progress GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, SUM(score) AS total_score FROM player_progress GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT * FROM game_logs INNER JOIN player_progress ON game_logs.player_id = player_progress.player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT * FROM game_logs LEFT JOIN player_progress ON game_logs.player_id = player_progress.player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT * FROM game_logs RIGHT JOIN player_progress ON game_logs.player_id = player_progress.player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT * FROM game_logs WHERE player_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT action, timestamp FROM game_logs WHERE player_id = 1 AND action = 'attack';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, level FROM player_progress WHERE level > 5 AND score > 1000;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT log_id, player_id, timestamp FROM game_logs JOIN player_progress ON game_logs.player_id = player_progress.player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT p.player_id, p.level, g.action FROM player_progress p JOIN game_logs g ON p.player_id = g.player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT * FROM game_logs WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, COUNT(log_id) AS total_actions FROM game_logs GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, MAX(level) AS max_level FROM player_progress GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, AVG(score) AS avg_score FROM player_progress WHERE level > 3 GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT p.player_id, p.level, g.timestamp FROM player_progress p LEFT JOIN game_logs g ON p.player_id = g.player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, SUM(score) AS total_score FROM player_progress GROUP BY player_id HAVING total_score > 5000;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, COUNT(DISTINCT action) AS unique_actions FROM game_logs GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, level, score FROM player_progress WHERE level > 10 ORDER BY score DESC;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, action, timestamp FROM game_logs WHERE player_id IN (SELECT player_id FROM player_progress WHERE level >= 5);",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, MAX(timestamp) AS last_activity FROM game_logs GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, MIN(timestamp) AS first_activity FROM game_logs GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, SUM(score) AS total_score, MAX(timestamp) AS last_activity FROM player_progress p JOIN game_logs g ON p.player_id = g.player_id GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, COUNT(DISTINCT level) AS unique_levels FROM player_progress GROUP BY player_id HAVING unique_levels > 3;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, level, score, action, timestamp FROM player_progress p JOIN game_logs g ON p.player_id = g.player_id WHERE p.level = 10;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action TEXT,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE player_progress (\n    progress_id INT PRIMARY KEY,\n    player_id INT,\n    level INT,\n    score INT\n);\n\n### STATEMENT\n\nSELECT player_id, COUNT(log_id) AS total_logs, SUM(score) AS total_score FROM game_logs RIGHT JOIN player_progress ON game_logs.player_id = player_progress.player_id GROUP BY player_id ORDER BY total_logs DESC;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT log_id, player_id, action, timestamp FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, level FROM players;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM players WHERE level > 5;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, level FROM players WHERE player_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT level_name, difficulty FROM levels;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM levels WHERE difficulty = 'hard';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT log_id, timestamp FROM game_logs WHERE player_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(level) FROM players;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(level) FROM players;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_id, player_name, level FROM players WHERE level > 10;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM levels WHERE level_id BETWEEN 1 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT log_id, action FROM game_logs WHERE TIMESTAMP > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, level FROM players ORDER BY level DESC;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM players LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT level_name, COUNT(*) FROM levels GROUP BY level_name;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_id, COUNT(log_id) FROM game_logs GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, level FROM players JOIN game_logs ON players.player_id = game_logs.player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, level FROM players LEFT JOIN game_logs ON players.player_id = game_logs.player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM game_logs JOIN players ON game_logs.player_id = players.player_id WHERE level > 5;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, level_name FROM players JOIN levels ON players.level = levels.level_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM game_logs WHERE timestamp BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_id, SUM(level) AS total_levels FROM players GROUP BY player_id ORDER BY total_levels DESC;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, action, timestamp FROM players JOIN game_logs ON players.player_id = game_logs.player_id WHERE action LIKE '%kill%' AND level_name = 'Expert';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT level_name, COUNT(*) AS total_actions FROM levels JOIN game_logs ON levels.level_id = game_logs.player_id GROUP BY level_name ORDER BY total_actions DESC;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, MAX(level) AS highest_level FROM players JOIN game_logs ON players.player_id = game_logs.player_id GROUP BY player_name HAVING highest_level > 10;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, action, timestamp FROM players JOIN game_logs ON players.player_id = game_logs.player_id WHERE player_name LIKE 'J%' AND (action = 'login' OR action = 'logout') ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT level_name, AVG(level) AS average_level FROM levels JOIN players ON levels.level_id = players.level GROUP BY level_name HAVING AVG(level) > 3;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) AS total_actions FROM players LEFT JOIN game_logs ON players.player_id = game_logs.player_id GROUP BY player_name HAVING COUNT(*) > 10;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, level_name FROM players JOIN levels ON players.level = levels.level_id WHERE level_name = 'Intermediate' UNION SELECT player_name, level_name FROM players JOIN levels ON players.level = levels.level_id WHERE level_name = 'Advanced';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, MAX(level) AS highest_level, COUNT(*) AS total_actions FROM players JOIN game_logs ON players.player_id = game_logs.player_id GROUP BY player_name HAVING highest_level > 8 AND total_actions > 20;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, action, timestamp FROM players JOIN game_logs ON players.player_id = game_logs.player_id WHERE level_name = 'Expert' AND timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, action, timestamp, difficulty FROM players JOIN game_logs ON players.player_id = game_logs.player_id JOIN levels ON players.level = levels.level_id WHERE difficulty = 'Hard' AND timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, level_name FROM players JOIN levels ON players.level = levels.level_id WHERE level > (SELECT AVG(level) FROM levels);",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, level FROM players WHERE level IN (SELECT level_id FROM levels WHERE difficulty = 'Expert');",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, action, timestamp FROM players JOIN game_logs ON players.player_id = game_logs.player_id WHERE level_name = 'Advanced' OR (action = 'win' AND timestamp >= '2022-06-01');",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) AS total_actions FROM players LEFT JOIN game_logs ON players.player_id = game_logs.player_id GROUP BY player_name ORDER BY total_actions DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, MAX(level) AS highest_level FROM players JOIN game_logs ON players.player_id = game_logs.player_id WHERE action = 'level_up' GROUP BY player_name ORDER BY highest_level DESC;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n    log_id INT PRIMARY KEY,\n    player_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255),\n    level INT\n);\n\nCREATE TABLE levels (\n    level_id INT PRIMARY KEY,\n    level_name VARCHAR(255),\n    difficulty VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, action, timestamp FROM players JOIN game_logs ON players.player_id = game_logs.player_id WHERE player_name IN (SELECT player_name FROM players WHERE level > 5);",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM game_logs;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, player_level FROM players WHERE player_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT action_name, action_timestamp FROM game_logs WHERE player_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT log_id, action_name FROM game_logs WHERE action_name = 'attack';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_id, player_name FROM players WHERE player_level > 5;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT action_name, action_timestamp FROM game_logs WHERE action_timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_id, SUM(level_completed) AS total_completed_levels FROM progress GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, player_level, level_completed FROM players JOIN progress ON players.player_id = progress.player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT MAX(player_level) AS highest_level FROM players;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT AVG(player_level) AS average_level FROM players;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT DISTINCT player_id FROM progress;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT action_name) AS unique_actions FROM actions;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(log_id) AS total_logs FROM players JOIN game_logs ON players.player_id = game_logs.player_id GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, MAX(action_timestamp) AS last_action_timestamp FROM players JOIN game_logs ON players.player_id = game_logs.player_id GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, player_level, COUNT(log_id) AS total_logs FROM players JOIN game_logs ON players.player_id = game_logs.player_id GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, player_level, COUNT(progress_id) AS total_progress FROM players JOIN progress ON players.player_id = progress.player_id GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, player_level, COALESCE(total_logs, 0) AS total_logs FROM players LEFT JOIN (SELECT player_id, COUNT(log_id) AS total_logs FROM game_logs GROUP BY player_id) AS logs ON players.player_id = logs.player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, player_level, COALESCE(total_progress, 0) AS total_progress FROM players LEFT JOIN (SELECT player_id, COUNT(progress_id) AS total_progress FROM progress GROUP BY player_id) AS prog ON players.player_id = prog.player_id;",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, player_level FROM players WHERE player_id IN (SELECT player_id FROM progress WHERE level_completed = TRUE);",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT * FROM game_logs WHERE player_id = 1 AND action_name = 'login'",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, action_name FROM players JOIN game_logs ON players.player_id = game_logs.player_id",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, player_level, action_name FROM players JOIN game_logs ON players.player_id = game_logs.player_id WHERE action_name = 'logout'",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, action_name, action_timestamp FROM players JOIN game_logs ON players.player_id = game_logs.player_id ORDER BY action_timestamp DESC",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, player_level, level_completed FROM players JOIN progress ON players.player_id = progress.player_id WHERE player_level > 10 AND level_completed = TRUE",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, player_level, action_name, action_timestamp FROM players JOIN game_logs ON players.player_id = game_logs.player_id WHERE player_level > 5 AND action_name = 'level_up'",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT action_name, COUNT(*) AS total_actions FROM game_logs GROUP BY action_name",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_id, COUNT(*) AS total_actions FROM game_logs GROUP BY player_id HAVING COUNT(*) > 5",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, MAX(player_level) AS highest_level FROM players",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, MIN(player_level) AS lowest_level FROM players",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, AVG(player_level) AS average_level FROM players",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT action_name, COUNT(*) AS total_actions FROM game_logs WHERE EXTRACT(MONTH FROM action_timestamp) = 9 GROUP BY action_name",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, player_level, SUM(player_level) AS total_level FROM players",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) AS total_logs FROM players LEFT JOIN game_logs ON players.player_id = game_logs.player_id GROUP BY player_name",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, action_name, COUNT(*) AS total_actions FROM players LEFT JOIN game_logs ON players.player_id = game_logs.player_id GROUP BY player_name, action_name",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_id, player_name, action_name FROM players JOIN game_logs ON players.player_id = game_logs.player_id WHERE player_level <= 5",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, action_name, action_timestamp FROM players JOIN game_logs ON players.player_id = game_logs.player_id WHERE player_level >= 10 AND action_name = 'quest_completed' ORDER BY action_timestamp DESC",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, AVG(player_level) AS average_level FROM players WHERE player_level > 5",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, MAX(player_level) AS highest_level FROM players WHERE player_level BETWEEN 5 AND 10",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) AS total_logs FROM players JOIN game_logs ON players.player_id = game_logs.player_id GROUP BY player_name HAVING COUNT(*) > 2",
  "### TABLEDATA\n\nCREATE TABLE game_logs (\n  log_id INT PRIMARY KEY,\n  player_id INT,\n  action_name VARCHAR,\n  action_timestamp TIMESTAMP\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR,\n  player_level INT\n);\n\nCREATE TABLE actions (\n  action_id INT PRIMARY KEY,\n  action_name VARCHAR\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  player_id INT,\n  level_completed BOOL\n);\n\n### STATEMENT\n\nSELECT player_name, player_level, COUNT(*) AS total_logs FROM players JOIN game_logs ON players.player_id = game_logs.player_id GROUP BY player_name, player_level HAVING COUNT(*) > 1",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM GameLogs;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT player_id, action FROM GameLogs;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT player_id, action, timestamp FROM GameLogs WHERE player_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT player_name, level FROM Players WHERE level > 5;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM Players WHERE player_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT level_id, level_name FROM Levels;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT level_name, score FROM Levels WHERE score > 1000;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM Items;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, item_type FROM Items WHERE item_type = 'weapon';",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT player_id, item_id, quantity FROM PlayerInventory WHERE player_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT item_id, quantity FROM PlayerInventory WHERE quantity >= 10;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT player_id, player_name, level FROM Players WHERE player_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT player_name, level FROM Players ORDER BY level DESC;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT action, timestamp FROM GameLogs ORDER BY timestamp ASC;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT player_name, level FROM Players WHERE level BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT player_id, item_id, quantity FROM PlayerInventory WHERE item_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT player_id, item_id, quantity FROM PlayerInventory WHERE quantity < 5;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT player_name, level FROM Players WHERE level = (SELECT MAX(level) FROM Players);",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, item_type FROM Items WHERE item_id IN (SELECT item_id FROM PlayerInventory WHERE player_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT player_name, level FROM Players JOIN PlayerInventory ON Players.player_id = PlayerInventory.player_id WHERE item_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM GameLogs JOIN Players ON GameLogs.player_id = Players.player_id WHERE Players.level > 5",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT player_name, level, score FROM Players JOIN Levels ON Players.level = Levels.level_id",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT item_name, item_type, quantity FROM Items JOIN PlayerInventory ON Items.item_id = PlayerInventory.item_id WHERE PlayerInventory.quantity > 0",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT player_name, level, item_name, quantity FROM Players JOIN PlayerInventory ON Players.player_id = PlayerInventory.player_id JOIN Items ON PlayerInventory.item_id = Items.item_id",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT player_name, level, action, timestamp FROM Players JOIN GameLogs ON Players.player_id = GameLogs.player_id ORDER BY timestamp DESC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT player_id) AS total_players FROM Players",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT level_name, AVG(score) AS avg_score FROM Levels JOIN Players ON Levels.level_id = Players.level GROUP BY level_name HAVING AVG(score) > 100",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT player_name, level FROM Players ORDER BY level DESC, player_name ASC",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT item_id, COUNT(player_id) AS total_players FROM PlayerInventory GROUP BY item_id HAVING COUNT(player_id) > 5",
  "### TABLEDATA\n\nCREATE TABLE GameLogs (\n\tgame_id INT PRIMARY KEY,\n\tplayer_id INT,\n\taction VARCHAR,\n\ttimestamp TIMESTAMP\n)\n\nCREATE TABLE Players (\n\tplayer_id INT PRIMARY KEY,\n\tplayer_name VARCHAR,\n\tlevel INT\n)\n\nCREATE TABLE Levels (\n\tlevel_id INT PRIMARY KEY,\n\tlevel_name VARCHAR,\n\tscore INT\n)\n\nCREATE TABLE Items (\n\titem_id INT PRIMARY KEY,\n\titem_name VARCHAR,\n\titem_type VARCHAR\n)\n\nCREATE TABLE PlayerInventory (\n\tplayer_id INT,\n\titem_id INT,\n\tquantity INT\n)\n\n### STATEMENT\n\nSELECT MAX(score) FROM Levels WHERE score < (SELECT AVG(score) FROM Levels)"
]