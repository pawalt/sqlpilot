[
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (1, 'Alice', 'Smith', 'HR', 50000.00, '2022-01-10') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Alice', last_name = 'Smith', department = 'HR', salary = 50000.00, hire_date = '2022-01-10'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (2, 'Bob', 'Johnson', 'Finance', 60000.00, '2021-05-15') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Bob', last_name = 'Johnson', department = 'Finance', salary = 60000.00, hire_date = '2021-05-15'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (3, 'Charlie', 'Brown', 'IT', 70000.00, '2020-11-20') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Charlie', last_name = 'Brown', department = 'IT', salary = 70000.00, hire_date = '2020-11-20'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (4, 'David', 'Lee', 'Marketing', 55000.00, '2022-02-28') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'David', last_name = 'Lee', department = 'Marketing', salary = 55000.00, hire_date = '2022-02-28'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (5, 'Emma', 'Davis', 'HR', 52000.00, '2021-03-10') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Emma', last_name = 'Davis', department = 'HR', salary = 52000.00, hire_date = '2021-03-10'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (6, 'Frank', 'White', 'Finance', 61000.00, '2021-07-05') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Frank', last_name = 'White', department = 'Finance', salary = 61000.00, hire_date = '2021-07-05'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (7, 'Grace', 'Miller', 'IT', 72000.00, '2020-12-15') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Grace', last_name = 'Miller', department = 'IT', salary = 72000.00, hire_date = '2020-12-15'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (8, 'Henry', 'Wilson', 'Marketing', 56000.00, '2022-03-10') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Henry', last_name = 'Wilson', department = 'Marketing', salary = 56000.00, hire_date = '2022-03-10'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (9, 'Ivy', 'Taylor', 'HR', 53000.00, '2021-04-20') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Ivy', last_name = 'Taylor', department = 'HR', salary = 53000.00, hire_date = '2021-04-20'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (10, 'Jack', 'Brown', 'Finance', 62000.00, '2021-08-25') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Jack', last_name = 'Brown', department = 'Finance', salary = 62000.00, hire_date = '2021-08-25'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (11, 'Karen', 'Clark', 'IT', 73000.00, '2021-01-10') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Karen', last_name = 'Clark', department = 'IT', salary = 73000.00, hire_date = '2021-01-10'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (12, 'Liam', 'Johnson', 'Marketing', 57000.00, '2022-04-30') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Liam', last_name = 'Johnson', department = 'Marketing', salary = 57000.00, hire_date = '2022-04-30'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (13, 'Mia', 'Brown', 'HR', 54000.00, '2021-06-15') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Mia', last_name = 'Brown', department = 'HR', salary = 54000.00, hire_date = '2021-06-15'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (14, 'Noah', 'Smith', 'Finance', 63000.00, '2021-09-20') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Noah', last_name = 'Smith', department = 'Finance', salary = 63000.00, hire_date = '2021-09-20'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (15, 'Olivia', 'Davis', 'IT', 74000.00, '2021-02-28') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Olivia', last_name = 'Davis', department = 'IT', salary = 74000.00, hire_date = '2021-02-28'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (16, 'Peter', 'White', 'Marketing', 58000.00, '2022-05-10') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Peter', last_name = 'White', department = 'Marketing', salary = 58000.00, hire_date = '2022-05-10'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (17, 'Quinn', 'Wilson', 'HR', 55000.00, '2021-07-15') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Quinn', last_name = 'Wilson', department = 'HR', salary = 55000.00, hire_date = '2021-07-15'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (18, 'Ryan', 'Taylor', 'Finance', 64000.00, '2021-10-25') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Ryan', last_name = 'Taylor', department = 'Finance', salary = 64000.00, hire_date = '2021-10-25'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (19, 'Sofia', 'Clark', 'IT', 75000.00, '2021-03-10') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Sofia', last_name = 'Clark', department = 'IT', salary = 75000.00, hire_date = '2021-03-10'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (20, 'Tyler', 'Johnson', 'Marketing', 59000.00, '2022-06-30') ON CONFLICT(employee_id) DO UPDATE SET first_name = 'Tyler', last_name = 'Johnson', department = 'Marketing', salary = 59000.00, hire_date = '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (1, 'John', 'Doe', 'HR', 50000.00, '2021-01-15') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', department = 'HR', salary = 50000.00, hire_date = '2021-01-15';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (2, 'Jane', 'Smith', 'Finance', 60000.00, '2021-02-20') ON DUPLICATE KEY UPDATE first_name = 'Jane', last_name = 'Smith', department = 'Finance', salary = 60000.00, hire_date = '2021-02-20';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (3, 'Alice', 'Williams', 'Marketing', 55000.00, '2021-03-25') ON DUPLICATE KEY UPDATE first_name = 'Alice', last_name = 'Williams', department = 'Marketing', salary = 55000.00, hire_date = '2021-03-25';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (4, 'Bob', 'Johnson', 'IT', 70000.00, '2021-04-30') ON DUPLICATE KEY UPDATE first_name = 'Bob', last_name = 'Johnson', department = 'IT', salary = 70000.00, hire_date = '2021-04-30';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (5, 'Emily', 'Brown', 'Sales', 60000.00, '2021-05-05') ON DUPLICATE KEY UPDATE first_name = 'Emily', last_name = 'Brown', department = 'Sales', salary = 60000.00, hire_date = '2021-05-05';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (6, 'Michael', 'Davis', 'Engineering', 75000.00, '2021-06-10') ON DUPLICATE KEY UPDATE first_name = 'Michael', last_name = 'Davis', department = 'Engineering', salary = 75000.00, hire_date = '2021-06-10';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (7, 'Sara', 'Martinez', 'Operations', 65000.00, '2021-07-15') ON DUPLICATE KEY UPDATE first_name = 'Sara', last_name = 'Martinez', department = 'Operations', salary = 65000.00, hire_date = '2021-07-15';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (8, 'David', 'Garcia', 'Research', 70000.00, '2021-08-20') ON DUPLICATE KEY UPDATE first_name = 'David', last_name = 'Garcia', department = 'Research', salary = 70000.00, hire_date = '2021-08-20';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (9, 'Karen', 'Rodriguez', 'Product', 60000.00, '2021-09-25') ON DUPLICATE KEY UPDATE first_name = 'Karen', last_name = 'Rodriguez', department = 'Product', salary = 60000.00, hire_date = '2021-09-25';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (10, 'Peter', 'Lopez', 'Customer Service', 55000.00, '2021-10-30') ON DUPLICATE KEY UPDATE first_name = 'Peter', last_name = 'Lopez', department = 'Customer Service', salary = 55000.00, hire_date = '2021-10-30';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (11, 'Michelle', 'Perez', 'Quality Assurance', 65000.00, '2021-11-04') ON DUPLICATE KEY UPDATE first_name = 'Michelle', last_name = 'Perez', department = 'Quality Assurance', salary = 65000.00, hire_date = '2021-11-04';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (12, 'Steven', 'Hernandez', 'Logistics', 70000.00, '2021-12-09') ON DUPLICATE KEY UPDATE first_name = 'Steven', last_name = 'Hernandez', department = 'Logistics', salary = 70000.00, hire_date = '2021-12-09';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (13, 'Laura', 'Sanchez', 'Public Relations', 60000.00, '2022-01-14') ON DUPLICATE KEY UPDATE first_name = 'Laura', last_name = 'Sanchez', department = 'Public Relations', salary = 60000.00, hire_date = '2022-01-14';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (14, 'Kevin', 'Torres', 'Training', 55000.00, '2022-02-19') ON DUPLICATE KEY UPDATE first_name = 'Kevin', last_name = 'Torres', department = 'Training', salary = 55000.00, hire_date = '2022-02-19';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (15, 'Jessica', 'Gomez', 'Legal', 65000.00, '2022-03-24') ON DUPLICATE KEY UPDATE first_name = 'Jessica', last_name = 'Gomez', department = 'Legal', salary = 65000.00, hire_date = '2022-03-24';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (16, 'Mark', 'Reyes', 'Security', 70000.00, '2022-04-29') ON DUPLICATE KEY UPDATE first_name = 'Mark', last_name = 'Reyes', department = 'Security', salary = 70000.00, hire_date = '2022-04-29';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (17, 'Rachel', 'Mendoza', 'Compliance', 60000.00, '2022-05-04') ON DUPLICATE KEY UPDATE first_name = 'Rachel', last_name = 'Mendoza', department = 'Compliance', salary = 60000.00, hire_date = '2022-05-04';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (18, 'Andrew', 'Cruz', 'Maintenance', 55000.00, '2022-06-09') ON DUPLICATE KEY UPDATE first_name = 'Andrew', last_name = 'Cruz', department = 'Maintenance', salary = 55000.00, hire_date = '2022-06-09';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (19, 'Christine', 'Rivera', 'Human Resources', 65000.00, '2022-07-14') ON DUPLICATE KEY UPDATE first_name = 'Christine', last_name = 'Rivera', department = 'Human Resources', salary = 65000.00, hire_date = '2022-07-14';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, department, salary, hire_date) VALUES (20, 'Jason', 'Fernandez', 'Consulting', 70000.00, '2022-08-19') ON DUPLICATE KEY UPDATE first_name = 'Jason', last_name = 'Fernandez', department = 'Consulting', salary = 70000.00, hire_date = '2022-08-19';",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('1', 'John', 'Doe', 'Manager', 'Sales', 50000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', position = 'Manager', department = 'Sales', salary = 50000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('2', 'Jane', 'Smith', 'Analyst', 'Finance', 45000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', position = 'Analyst', department = 'Finance', salary = 45000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('3', 'Alice', 'Johnson', 'Engineer', 'IT', 60000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Alice', last_name = 'Johnson', position = 'Engineer', department = 'IT', salary = 60000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('4', 'Bob', 'Williams', 'Developer', 'Engineering', 55000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Bob', last_name = 'Williams', position = 'Developer', department = 'Engineering', salary = 55000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('5', 'Sarah', 'Brown', 'Coordinator', 'HR', 40000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Sarah', last_name = 'Brown', position = 'Coordinator', department = 'HR', salary = 40000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('6', 'Michael', 'Davis', 'Manager', 'Sales', 50000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Michael', last_name = 'Davis', position = 'Manager', department = 'Sales', salary = 50000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('7', 'Emily', 'Anderson', 'Analyst', 'Finance', 45000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Emily', last_name = 'Anderson', position = 'Analyst', department = 'Finance', salary = 45000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('8', 'Chris', 'Lee', 'Engineer', 'IT', 60000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Chris', last_name = 'Lee', position = 'Engineer', department = 'IT', salary = 60000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('9', 'Laura', 'Garcia', 'Developer', 'Engineering', 55000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Laura', last_name = 'Garcia', position = 'Developer', department = 'Engineering', salary = 55000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('10', 'Ryan', 'Martinez', 'Coordinator', 'HR', 40000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Ryan', last_name = 'Martinez', position = 'Coordinator', department = 'HR', salary = 40000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('11', 'Amy', 'Lopez', 'Manager', 'Sales', 50000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Amy', last_name = 'Lopez', position = 'Manager', department = 'Sales', salary = 50000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('12', 'David', 'Nguyen', 'Analyst', 'Finance', 45000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'David', last_name = 'Nguyen', position = 'Analyst', department = 'Finance', salary = 45000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('13', 'Michelle', 'Kim', 'Engineer', 'IT', 60000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Michelle', last_name = 'Kim', position = 'Engineer', department = 'IT', salary = 60000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('14', 'Kevin', 'Gonzalez', 'Developer', 'Engineering', 55000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Kevin', last_name = 'Gonzalez', position = 'Developer', department = 'Engineering', salary = 55000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('15', 'Amanda', 'Perez', 'Coordinator', 'HR', 40000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Amanda', last_name = 'Perez', position = 'Coordinator', department = 'HR', salary = 40000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('16', 'Jason', 'Hernandez', 'Manager', 'Sales', 50000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Jason', last_name = 'Hernandez', position = 'Manager', department = 'Sales', salary = 50000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('17', 'Rachel', 'Taylor', 'Analyst', 'Finance', 45000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Rachel', last_name = 'Taylor', position = 'Analyst', department = 'Finance', salary = 45000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('18', 'Tony', 'Wong', 'Engineer', 'IT', 60000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Tony', last_name = 'Wong', position = 'Engineer', department = 'IT', salary = 60000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('19', 'Erica', 'Rodriguez', 'Developer', 'Engineering', 55000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Erica', last_name = 'Rodriguez', position = 'Developer', department = 'Engineering', salary = 55000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('20', 'Greg', 'Sullivan', 'Coordinator', 'HR', 40000) ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Greg', last_name = 'Sullivan', position = 'Coordinator', department = 'HR', salary = 40000;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('4a044fd3-4cb3-4a7c-a013-1f85a1622f3f', 'John', 'Doe', 'Manager', 'Sales', 75000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='John', last_name='Doe', position='Manager', department='Sales', salary=75000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('4e918296-bb34-493c-8401-b4a9b5b1b44e', 'Jane', 'Smith', 'Engineer', 'Engineering', 85000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Jane', last_name='Smith', position='Engineer', department='Engineering', salary=85000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('eafe8fe0-95d3-46d8-9ea7-51edf695228b', 'Michael', 'Johnson', 'Analyst', 'Finance', 65000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Michael', last_name='Johnson', position='Analyst', department='Finance', salary=65000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('6daece5e-cb31-4cdd-b9c5-e8179da27e77', 'Sarah', 'Williams', 'Designer', 'Marketing', 70000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Sarah', last_name='Williams', position='Designer', department='Marketing', salary=70000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('a631b225-80b3-4fea-80b7-69ed07a2e248', 'David', 'Brown', 'Developer', 'Technology', 90000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='David', last_name='Brown', position='Developer', department='Technology', salary=90000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('7dca02a2-9f81-47b1-8cbb-3f3b48a7d2c0', 'Emily', 'Martinez', 'Manager', 'Operations', 78000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Emily', last_name='Martinez', position='Manager', department='Operations', salary=78000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('f4d8a1b6-170d-49a4-aaa7-6c13e7b0776f', 'Daniel', 'Garcia', 'Analyst', 'Finance', 67000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Daniel', last_name='Garcia', position='Analyst', department='Finance', salary=67000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('57fe39d5-278c-4020-96c4-231e8d636dd2', 'Olivia', 'Jones', 'Designer', 'Marketing', 72000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Olivia', last_name='Jones', position='Designer', department='Marketing', salary=72000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('410d4d9f-2b31-465f-8823-0ecf79014ec5', 'James', 'Smith', 'Engineer', 'Engineering', 83000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='James', last_name='Smith', position='Engineer', department='Engineering', salary=83000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('6e94deec-f045-4bef-8cfb-9f558b2171de', 'Isabella', 'Gonzalez', 'Developer', 'Technology', 92000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Isabella', last_name='Gonzalez', position='Developer', department='Technology', salary=92000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('05dc19b5-f277-4257-ba64-e257b9bc0c34', 'William', 'Martin', 'Engineer', 'Engineering', 82000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='William', last_name='Martin', position='Engineer', department='Engineering', salary=82000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('0a8ba73c-cc0b-44b5-aa80-acfd0c9cad76', 'Sophia', 'Rodriguez', 'Analyst', 'Finance', 66000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Sophia', last_name='Rodriguez', position='Analyst', department='Finance', salary=66000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('bec898c6-2beb-4ff6-bc04-046604efbcb8', 'Liam', 'Hernandez', 'Designer', 'Marketing', 73000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Liam', last_name='Hernandez', position='Designer', department='Marketing', salary=73000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('a2d4f0c5-d67c-4f7a-98ac-026bbb4951e4', 'Mia', 'Lopez', 'Developer', 'Technology', 93000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Mia', last_name='Lopez', position='Developer', department='Technology', salary=93000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('75a4b745-f8be-46c5-b17c-26f6fea1434f', 'Benjamin', 'Perez', 'Manager', 'Operations', 79000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Benjamin', last_name='Perez', position='Manager', department='Operations', salary=79000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('94560f0f-e167-459b-99b4-5359371b976a', 'Ethan', 'Sanchez', 'Analyst', 'Finance', 68000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Ethan', last_name='Sanchez', position='Analyst', department='Finance', salary=68000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('b8e91858-cd89-44ff-b7ba-3cc45081a5d1', 'Ava', 'Ortiz', 'Designer', 'Marketing', 74000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Ava', last_name='Ortiz', position='Designer', department='Marketing', salary=74000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('b2771e8c-1dc0-4004-a8c0-7f7b2a9f7292', 'Liam', 'Hernandez', 'Designer', 'Marketing', 73000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Liam', last_name='Hernandez', position='Designer', department='Marketing', salary=73000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('eed50adb-8686-4f85-97bf-75286f10aa6c', 'Mia', 'Lopez', 'Developer', 'Technology', 93000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Mia', last_name='Lopez', position='Developer', department='Technology', salary=93000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees ( employee_id UUID PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, position VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2) NOT NULL );\n\nCREATE TABLE performance_history ( employee_id UUID, evaluation_date DATE NOT NULL, evaluation_score INT NOT NULL, FOREIGN KEY (employee_id) REFERENCES employees(employee_id) );\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, first_name, last_name, position, department, salary) VALUES ('75d58f4d-8938-44dc-8093-d7ed4b7e3537', 'Benjamin', 'Perez', 'Manager', 'Operations', 79000.00) ON CONFLICT (employee_id) DO UPDATE SET first_name='Benjamin', last_name='Perez', position='Manager', department='Operations', salary=79000.00;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (1, 'John Doe', 'HR', 50000.00, '2022-01-10') ON DUPLICATE KEY UPDATE employee_name = 'John Doe', department = 'HR', salary = 50000.00, hire_date = '2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (2, 'Jane Smith', 'Marketing', 60000.00, '2022-02-15') ON DUPLICATE KEY UPDATE employee_name = 'Jane Smith', department = 'Marketing', salary = 60000.00, hire_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (3, 'Alice Johnson', 'Sales', 55000.00, '2022-03-20') ON DUPLICATE KEY UPDATE employee_name = 'Alice Johnson', department = 'Sales', salary = 55000.00, hire_date = '2022-03-20';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (4, 'Bob Brown', 'IT', 65000.00, '2022-04-25') ON DUPLICATE KEY UPDATE employee_name = 'Bob Brown', department = 'IT', salary = 65000.00, hire_date = '2022-04-25';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (5, 'Emily Davis', 'Finance', 70000.00, '2022-05-30') ON DUPLICATE KEY UPDATE employee_name = 'Emily Davis', department = 'Finance', salary = 70000.00, hire_date = '2022-05-30';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (6, 'Chris Wilson', 'Engineering', 75000.00, '2022-06-05') ON DUPLICATE KEY UPDATE employee_name = 'Chris Wilson', department = 'Engineering', salary = 75000.00, hire_date = '2022-06-05';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (7, 'Sarah Miller', 'Operations', 60000.00, '2022-07-10') ON DUPLICATE KEY UPDATE employee_name = 'Sarah Miller', department = 'Operations', salary = 60000.00, hire_date = '2022-07-10';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (8, 'Kevin Clark', 'Research', 62000.00, '2022-08-15') ON DUPLICATE KEY UPDATE employee_name = 'Kevin Clark', department = 'Research', salary = 62000.00, hire_date = '2022-08-15';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (9, 'Melissa Taylor', 'Customer Service', 58000.00, '2022-09-20') ON DUPLICATE KEY UPDATE employee_name = 'Melissa Taylor', department = 'Customer Service', salary = 58000.00, hire_date = '2022-09-20';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (10, 'Michael Anderson', 'Quality Assurance', 64000.00, '2022-10-25') ON DUPLICATE KEY UPDATE employee_name = 'Michael Anderson', department = 'Quality Assurance', salary = 64000.00, hire_date = '2022-10-25';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (11, 'Laura Martinez', 'Design', 67000.00, '2022-11-30') ON DUPLICATE KEY UPDATE employee_name = 'Laura Martinez', department = 'Design', salary = 67000.00, hire_date = '2022-11-30';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (12, 'Steven Chen', 'Production', 69000.00, '2022-12-05') ON DUPLICATE KEY UPDATE employee_name = 'Steven Chen', department = 'Production', salary = 69000.00, hire_date = '2022-12-05';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (13, 'Hannah Lee', 'Logistics', 56000.00, '2023-01-10') ON DUPLICATE KEY UPDATE employee_name = 'Hannah Lee', department = 'Logistics', salary = 56000.00, hire_date = '2023-01-10';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (14, 'Ethan Lopez', 'Security', 62000.00, '2023-02-15') ON DUPLICATE KEY UPDATE employee_name = 'Ethan Lopez', department = 'Security', salary = 62000.00, hire_date = '2023-02-15';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (15, 'Olivia Scott', 'Maintenance', 58000.00, '2023-03-20') ON DUPLICATE KEY UPDATE employee_name = 'Olivia Scott', department = 'Maintenance', salary = 58000.00, hire_date = '2023-03-20';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (16, 'Gavin Adams', 'Legal', 68000.00, '2023-04-25') ON DUPLICATE KEY UPDATE employee_name = 'Gavin Adams', department = 'Legal', salary = 68000.00, hire_date = '2023-04-25';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (17, 'Sophia Rodriguez', 'Training', 60000.00, '2023-05-30') ON DUPLICATE KEY UPDATE employee_name = 'Sophia Rodriguez', department = 'Training', salary = 60000.00, hire_date = '2023-05-30';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (18, 'Nathan Mitchell', 'Consulting', 70000.00, '2023-06-05') ON DUPLICATE KEY UPDATE employee_name = 'Nathan Mitchell', department = 'Consulting', salary = 70000.00, hire_date = '2023-06-05';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (19, 'Samantha Baker', 'Support', 75000.00, '2023-07-10') ON DUPLICATE KEY UPDATE employee_name = 'Samantha Baker', department = 'Support', salary = 75000.00, hire_date = '2023-07-10';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (20, 'Daniel Young', 'Analytics', 62000.00, '2023-08-15') ON DUPLICATE KEY UPDATE employee_name = 'Daniel Young', department = 'Analytics', salary = 62000.00, hire_date = '2023-08-15';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (1, 'John Doe', 'Marketing', 50000.00, '2020-01-15') ON DUPLICATE KEY UPDATE employee_name='John Doe', department='Marketing', salary=50000.00, hire_date='2020-01-15';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (2, 'Jane Smith', 'HR', 60000.00, '2019-08-20') ON DUPLICATE KEY UPDATE employee_name='Jane Smith', department='HR', salary=60000.00, hire_date='2019-08-20';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (3, 'Alice Johnson', 'Finance', 70000.00, '2018-05-10') ON DUPLICATE KEY UPDATE employee_name='Alice Johnson', department='Finance', salary=70000.00, hire_date='2018-05-10';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (4, 'Bob Brown', 'IT', 55000.00, '2017-11-30') ON DUPLICATE KEY UPDATE employee_name='Bob Brown', department='IT', salary=55000.00, hire_date='2017-11-30';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (5, 'Sarah Wilson', 'Operations', 48000.00, '2019-03-25') ON DUPLICATE KEY UPDATE employee_name='Sarah Wilson', department='Operations', salary=48000.00, hire_date='2019-03-25';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (6, 'Michael Lee', 'Development', 65000.00, '2018-09-15') ON DUPLICATE KEY UPDATE employee_name='Michael Lee', department='Development', salary=65000.00, hire_date='2018-09-15';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (7, 'Emily Davis', 'Marketing', 52000.00, '2020-02-10') ON DUPLICATE KEY UPDATE employee_name='Emily Davis', department='Marketing', salary=52000.00, hire_date='2020-02-10';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (8, 'David Rodriguez', 'Finance', 72000.00, '2017-07-20') ON DUPLICATE KEY UPDATE employee_name='David Rodriguez', department='Finance', salary=72000.00, hire_date='2017-07-20';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (9, 'Linda Martinez', 'HR', 59000.00, '2019-01-05') ON DUPLICATE KEY UPDATE employee_name='Linda Martinez', department='HR', salary=59000.00, hire_date='2019-01-05';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (10, 'Christopher Thompson', 'IT', 58000.00, '2016-12-10') ON DUPLICATE KEY UPDATE employee_name='Christopher Thompson', department='IT', salary=58000.00, hire_date='2016-12-10';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (11, 'Jennifer Harris', 'Operations', 49000.00, '2018-04-15') ON DUPLICATE KEY UPDATE employee_name='Jennifer Harris', department='Operations', salary=49000.00, hire_date='2018-04-15';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (12, 'James Baker', 'Development', 66000.00, '2017-10-05') ON DUPLICATE KEY UPDATE employee_name='James Baker', department='Development', salary=66000.00, hire_date='2017-10-05';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (13, 'Elizabeth Young', 'Marketing', 53000.00, '2019-03-10') ON DUPLICATE KEY UPDATE employee_name='Elizabeth Young', department='Marketing', salary=53000.00, hire_date='2019-03-10';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (14, 'Andrew Perez', 'HR', 61000.00, '2018-06-20') ON DUPLICATE KEY UPDATE employee_name='Andrew Perez', department='HR', salary=61000.00, hire_date='2018-06-20';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (15, 'Maria Sanchez', 'Finance', 73000.00, '2016-09-15') ON DUPLICATE KEY UPDATE employee_name='Maria Sanchez', department='Finance', salary=73000.00, hire_date='2016-09-15';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (16, 'Steven Hall', 'IT', 56000.00, '2019-02-05') ON DUPLICATE KEY UPDATE employee_name='Steven Hall', department='IT', salary=56000.00, hire_date='2019-02-05';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (17, 'Jessica Lewis', 'Operations', 50000.00, '2017-05-20') ON DUPLICATE KEY UPDATE employee_name='Jessica Lewis', department='Operations', salary=50000.00, hire_date='2017-05-20';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (18, 'Kevin Clark', 'Development', 67000.00, '2018-08-10') ON DUPLICATE KEY UPDATE employee_name='Kevin Clark', department='Development', salary=67000.00, hire_date='2018-08-10';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (19, 'Patricia Scott', 'Marketing', 54000.00, '2018-12-15') ON DUPLICATE KEY UPDATE employee_name='Patricia Scott', department='Marketing', salary=54000.00, hire_date='2018-12-15';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50),\n    salary DECIMAL(10,2),\n    hire_date DATE\n);\n\nCREATE TABLE IF NOT EXISTS performance (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    rating INT,\n    comments TEXT,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nCREATE TABLE IF NOT EXISTS payroll (\n    payroll_id INT PRIMARY KEY,\n    employee_id INT,\n    salary DECIMAL(10,2),\n    bonus DECIMAL(10,2),\n    paycheck_date DATE,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (20, 'Mark Adams', 'Finance', 74000.00, '2017-03-10') ON DUPLICATE KEY UPDATE employee_name='Mark Adams', department='Finance', salary=74000.00, hire_date='2017-03-10';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (1, 'John Doe', 'Finance', 5000.00, '2022-01-01')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO departments (department_id, department_name, location) VALUES (1, 'Finance', 'New York')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO performance_reviews (review_id, employee_id, review_date, performance_rating, feedback) VALUES (1, 1, '2022-03-15', 5, 'Excellent performance')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO payrolls (payroll_id, employee_id, month, year, salary) VALUES (1, 1, 'March', 2022, 5000.00)",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (2, 'Jane Smith', 'HR', 4800.00, '2022-02-01')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO departments (department_id, department_name, location) VALUES (2, 'HR', 'Chicago')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO performance_reviews (review_id, employee_id, review_date, performance_rating, feedback) VALUES (2, 2, '2022-04-20', 4, 'Satisfactory performance')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO payrolls (payroll_id, employee_id, month, year, salary) VALUES (2, 2, 'April', 2022, 4800.00)",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (3, 'Mike Johnson', 'IT', 5500.00, '2021-12-01')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO departments (department_id, department_name, location) VALUES (3, 'IT', 'San Francisco')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO performance_reviews (review_id, employee_id, review_date, performance_rating, feedback) VALUES (3, 3, '2022-01-10', 3, 'Needs improvement')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO payrolls (payroll_id, employee_id, month, year, salary) VALUES (3, 3, 'January', 2022, 5500.00)",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (4, 'Sarah Adams', 'Marketing', 4600.00, '2022-03-01')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO departments (department_id, department_name, location) VALUES (4, 'Marketing', 'Los Angeles')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO performance_reviews (review_id, employee_id, review_date, performance_rating, feedback) VALUES (4, 4, '2022-05-05', 5, 'Outstanding performance')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO payrolls (payroll_id, employee_id, month, year, salary) VALUES (4, 4, 'May', 2022, 4600.00)",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (5, 'Chris Brown', 'Sales', 5100.00, '2022-02-15')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO departments (department_id, department_name, location) VALUES (5, 'Sales', 'Seattle')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO performance_reviews (review_id, employee_id, review_date, performance_rating, feedback) VALUES (5, 5, '2022-04-30', 4, 'Meeting expectations')",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nUPSERT INTO payrolls (payroll_id, employee_id, month, year, salary) VALUES (5, 5, 'April', 2022, 5100.00)",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (1, 'Alice', 'Marketing', 50000.00, '2022-01-01') ON DUPLICATE KEY UPDATE employee_name='Alice', department='Marketing', salary=50000.00, hire_date='2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO departments (department_id, department_name, location) VALUES (1, 'Marketing', 'New York') ON DUPLICATE KEY UPDATE department_name='Marketing', location='New York';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO performance_reviews (review_id, employee_id, review_date, performance_rating, feedback) VALUES (1, 1, '2022-03-15', 5, 'Great job!') ON DUPLICATE KEY UPDATE employee_id=1, review_date='2022-03-15', performance_rating=5, feedback='Great job!';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO payrolls (payroll_id, employee_id, month, year, salary) VALUES (1, 1, 'March', 2022, 5000.00) ON DUPLICATE KEY UPDATE employee_id=1, month='March', year=2022, salary=5000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (2, 'Bob', 'Finance', 60000.00, '2022-02-01') ON DUPLICATE KEY UPDATE employee_name='Bob', department='Finance', salary=60000.00, hire_date='2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO departments (department_id, department_name, location) VALUES (2, 'Finance', 'Chicago') ON DUPLICATE KEY UPDATE department_name='Finance', location='Chicago';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO performance_reviews (review_id, employee_id, review_date, performance_rating, feedback) VALUES (2, 2, '2022-03-20', 4, 'Good work!') ON DUPLICATE KEY UPDATE employee_id=2, review_date='2022-03-20', performance_rating=4, feedback='Good work!';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO payrolls (payroll_id, employee_id, month, year, salary) VALUES (2, 2, 'March', 2022, 6000.00) ON DUPLICATE KEY UPDATE employee_id=2, month='March', year=2022, salary=6000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (3, 'Charlie', 'HR', 55000.00, '2022-01-15') ON DUPLICATE KEY UPDATE employee_name='Charlie', department='HR', salary=55000.00, hire_date='2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO departments (department_id, department_name, location) VALUES (3, 'HR', 'Los Angeles') ON DUPLICATE KEY UPDATE department_name='HR', location='Los Angeles';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO performance_reviews (review_id, employee_id, review_date, performance_rating, feedback) VALUES (3, 3, '2022-03-10', 3, 'Needs improvement.') ON DUPLICATE KEY UPDATE employee_id=3, review_date='2022-03-10', performance_rating=3, feedback='Needs improvement.';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO payrolls (payroll_id, employee_id, month, year, salary) VALUES (3, 3, 'March', 2022, 5500.00) ON DUPLICATE KEY UPDATE employee_id=3, month='March', year=2022, salary=5500.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (4, 'David', 'Engineering', 70000.00, '2022-02-15') ON DUPLICATE KEY UPDATE employee_name='David', department='Engineering', salary=70000.00, hire_date='2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO departments (department_id, department_name, location) VALUES (4, 'Engineering', 'Seattle') ON DUPLICATE KEY UPDATE department_name='Engineering', location='Seattle';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO performance_reviews (review_id, employee_id, review_date, performance_rating, feedback) VALUES (4, 4, '2022-03-25', 5, 'Excellent performance!') ON DUPLICATE KEY UPDATE employee_id=4, review_date='2022-03-25', performance_rating=5, feedback='Excellent performance!';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO payrolls (payroll_id, employee_id, month, year, salary) VALUES (4, 4, 'March', 2022, 7000.00) ON DUPLICATE KEY UPDATE employee_id=4, month='March', year=2022, salary=7000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO employees (employee_id, employee_name, department, salary, hire_date) VALUES (5, 'Emma', 'Marketing', 48000.00, '2022-01-10') ON DUPLICATE KEY UPDATE employee_name='Emma', department='Marketing', salary=48000.00, hire_date='2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO departments (department_id, department_name, location) VALUES (5, 'Marketing', 'San Francisco') ON DUPLICATE KEY UPDATE department_name='Marketing', location='San Francisco';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO performance_reviews (review_id, employee_id, review_date, performance_rating, feedback) VALUES (5, 5, '2022-03-30', 4, 'Well done!') ON DUPLICATE KEY UPDATE employee_id=5, review_date='2022-03-30', performance_rating=4, feedback='Well done!';",
  "### TABLEDATA\n\nCREATE TABLE employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2), hire_date DATE)\n\nCREATE TABLE departments (department_id INT PRIMARY KEY, department_name VARCHAR(50), location VARCHAR(50))\n\nCREATE TABLE performance_reviews (review_id INT PRIMARY KEY, employee_id INT, review_date DATE, performance_rating INT, feedback TEXT)\n\nCREATE TABLE payrolls (payroll_id INT PRIMARY KEY, employee_id INT, month VARCHAR(20), year INT, salary DECIMAL(10,2))\n\n### STATEMENT\n\nINSERT INTO payrolls (payroll_id, employee_id, month, year, salary) VALUES (5, 5, 'March', 2022, 4800.00) ON DUPLICATE KEY UPDATE employee_id=5, month='March', year=2022, salary=4800.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, department, hire_date, salary) VALUES (1, 'John', 'Doe', 'Engineering', '2022-01-01', 75000.00)",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, department, hire_date, salary) VALUES (2, 'Jane', 'Smith', 'Marketing', '2022-02-15', 65000.00)",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO employees (employee_id, first_name, last_name, department, hire_date, salary) VALUES (3, 'Michael', 'Johnson', 'Finance', '2022-03-10', 80000.00)",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO departments (department_id, department_name, manager_id, location) VALUES (1, 'Engineering', 101, 'San Francisco')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO departments (department_id, department_name, manager_id, location) VALUES (2, 'Marketing', 201, 'New York')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO departments (department_id, department_name, manager_id, location) VALUES (3, 'Finance', 301, 'Chicago')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO salaries (salary_id, employee_id, salary, start_date, end_date) VALUES (1, 1, 75000.00, '2022-01-01', '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO salaries (salary_id, employee_id, salary, start_date, end_date) VALUES (2, 2, 65000.00, '2022-02-15', '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO salaries (salary_id, employee_id, salary, start_date, end_date) VALUES (3, 3, 80000.00, '2022-03-10', '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO performance_reviews (review_id, employee_id, reviewer_id, review_date, rating) VALUES (1, 1, 201, '2022-06-15', 4)",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO performance_reviews (review_id, employee_id, reviewer_id, review_date, rating) VALUES (2, 2, 301, '2022-07-20', 5)",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO performance_reviews (review_id, employee_id, reviewer_id, review_date, rating) VALUES (3, 3, 101, '2022-08-10', 4)",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO benefits (benefit_id, employee_id, benefit_name, amount) VALUES (1, 1, 'Health Insurance', 5000.00)",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO benefits (benefit_id, employee_id, benefit_name, amount) VALUES (2, 2, '401k Matching', 3000.00)",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO benefits (benefit_id, employee_id, benefit_name, amount) VALUES (3, 3, 'Paid Time Off', 2000.00)",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO employees(employee_id, first_name, last_name, department, hire_date, salary) VALUES (1, 'John', 'Doe', 'IT', '2021-01-15', 60000.00) ON DUPLICATE KEY UPDATE first_name='John', last_name='Doe', department='IT', salary=60000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO departments(department_id, department_name, manager_id, location) VALUES (1, 'IT', 1001, 'New York') ON DUPLICATE KEY UPDATE department_name='IT', manager_id=1001, location='New York';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO salaries(salary_id, employee_id, salary, start_date, end_date) VALUES (1, 1, 60000.00, '2021-01-01', '2021-12-31') ON DUPLICATE KEY UPDATE employee_id=1, salary=60000.00, start_date='2021-01-01', end_date='2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO performance_reviews(review_id, employee_id, reviewer_id, review_date, rating) VALUES (1, 1, 1002, '2021-07-01', 4) ON DUPLICATE KEY UPDATE employee_id=1, reviewer_id=1002, review_date='2021-07-01', rating=4;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO benefits(benefit_id, employee_id, benefit_name, amount) VALUES (1, 1, 'Health Insurance', 500.00) ON DUPLICATE KEY UPDATE employee_id=1, benefit_name='Health Insurance', amount=500.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO employees(employee_id, first_name, last_name, department, hire_date, salary) VALUES (2, 'Jane', 'Smith', 'HR', '2021-02-20', 55000.00) ON DUPLICATE KEY UPDATE first_name='Jane', last_name='Smith', department='HR', salary=55000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO departments(department_id, department_name, manager_id, location) VALUES (2, 'HR', 1002, 'Los Angeles') ON DUPLICATE KEY UPDATE department_name='HR', manager_id=1002, location='Los Angeles';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO salaries(salary_id, employee_id, salary, start_date, end_date) VALUES (2, 2, 55000.00, '2021-02-01', '2021-12-31') ON DUPLICATE KEY UPDATE employee_id=2, salary=55000.00, start_date='2021-02-01', end_date='2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO performance_reviews(review_id, employee_id, reviewer_id, review_date, rating) VALUES (2, 2, 1001, '2021-08-15', 5) ON DUPLICATE KEY UPDATE employee_id=2, reviewer_id=1001, review_date='2021-08-15', rating=5;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO benefits(benefit_id, employee_id, benefit_name, amount) VALUES (2, 2, 'Paid Time Off', 700.00) ON DUPLICATE KEY UPDATE employee_id=2, benefit_name='Paid Time Off', amount=700.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO employees(employee_id, first_name, last_name, department, hire_date, salary) VALUES (3, 'Alice', 'Johnson', 'Finance', '2021-03-10', 65000.00) ON DUPLICATE KEY UPDATE first_name='Alice', last_name='Johnson', department='Finance', salary=65000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO departments(department_id, department_name, manager_id, location) VALUES (3, 'Finance', 1003, 'Chicago') ON DUPLICATE KEY UPDATE department_name='Finance', manager_id=1003, location='Chicago';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO salaries(salary_id, employee_id, salary, start_date, end_date) VALUES (3, 3, 65000.00, '2021-03-01', '2021-12-31') ON DUPLICATE KEY UPDATE employee_id=3, salary=65000.00, start_date='2021-03-01', end_date='2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO performance_reviews(review_id, employee_id, reviewer_id, review_date, rating) VALUES (3, 3, 1003, '2021-09-20', 4) ON DUPLICATE KEY UPDATE employee_id=3, reviewer_id=1003, review_date='2021-09-20', rating=4;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO benefits(benefit_id, employee_id, benefit_name, amount) VALUES (3, 3, '401(k) Matching', 800.00) ON DUPLICATE KEY UPDATE employee_id=3, benefit_name='401(k) Matching', amount=800.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO employees(employee_id, first_name, last_name, department, hire_date, salary) VALUES (4, 'David', 'Williams', 'Marketing', '2021-04-05', 60000.00) ON DUPLICATE KEY UPDATE first_name='David', last_name='Williams', department='Marketing', salary=60000.00;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO departments(department_id, department_name, manager_id, location) VALUES (4, 'Marketing', 1004, 'San Francisco') ON DUPLICATE KEY UPDATE department_name='Marketing', manager_id=1004, location='San Francisco';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO salaries(salary_id, employee_id, salary, start_date, end_date) VALUES (4, 4, 60000.00, '2021-04-01', '2021-12-31') ON DUPLICATE KEY UPDATE employee_id=4, salary=60000.00, start_date='2021-04-01', end_date='2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO performance_reviews(review_id, employee_id, reviewer_id, review_date, rating) VALUES (4, 4, 1002, '2021-10-25', 4) ON DUPLICATE KEY UPDATE employee_id=4, reviewer_id=1002, review_date='2021-10-25', rating=4;",
  "### TABLEDATA\n\nCREATE TABLE employees (\n  employee_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  department VARCHAR(50),\n  hire_date DATE,\n  salary DECIMAL(10,2)\n)\n\nCREATE TABLE departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50),\n  manager_id INT,\n  location VARCHAR(50)\n)\n\nCREATE TABLE salaries (\n  salary_id INT PRIMARY KEY,\n  employee_id INT,\n  salary DECIMAL(10,2),\n  start_date DATE,\n  end_date DATE\n)\n\nCREATE TABLE performance_reviews (\n  review_id INT PRIMARY KEY,\n  employee_id INT,\n  reviewer_id INT,\n  review_date DATE,\n  rating INT\n)\n\nCREATE TABLE benefits (\n  benefit_id INT PRIMARY KEY,\n  employee_id INT,\n  benefit_name VARCHAR(50),\n  amount DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPSERT INTO benefits(benefit_id, employee_id, benefit_name, amount) VALUES (4, 4, 'Gym Membership', 300.00) ON DUPLICATE KEY UPDATE employee_id=4, benefit_name='Gym Membership', amount=300.00;"
]