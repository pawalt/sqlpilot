[
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product1', 10.00, 5) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product1', price = 10.00, quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product2', 15.50, 8) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product2', price = 15.50, quantity = 8;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product3', 20.75, 3) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product3', price = 20.75, quantity = 3;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product4', 12.99, 10) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product4', price = 12.99, quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product5', 5.00, 15) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product5', price = 5.00, quantity = 15;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product6', 18.25, 6) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product6', price = 18.25, quantity = 6;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product7', 14.75, 12) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product7', price = 14.75, quantity = 12;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product8', 22.50, 4) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product8', price = 22.50, quantity = 4;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product9', 11.20, 9) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product9', price = 11.20, quantity = 9;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product10', 30.00, 7) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product10', price = 30.00, quantity = 7;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product11', 8.99, 6) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product11', price = 8.99, quantity = 6;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product12', 14.25, 10) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product12', price = 14.25, quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product13', 21.50, 4) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product13', price = 21.50, quantity = 4;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product14', 10.99, 8) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product14', price = 10.99, quantity = 8;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product15', 17.75, 5) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product15', price = 17.75, quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product16', 25.00, 3) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product16', price = 25.00, quantity = 3;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product17', 9.50, 7) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product17', price = 9.50, quantity = 7;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product18', 12.75, 9) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product18', price = 12.75, quantity = 9;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product19', 30.25, 2) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product19', price = 30.25, quantity = 2;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product20', 13.50, 6) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product20', price = 13.50, quantity = 6;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product A', 10.99, 5) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product A', price = 10.99, quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product B', 15.75, 3) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product B', price = 15.75, quantity = 3;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product C', 20.50, 2) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product C', price = 20.50, quantity = 2;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product D', 12.00, 7) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product D', price = 12.00, quantity = 7;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product E', 5.49, 10) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product E', price = 5.49, quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product F', 18.25, 4) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product F', price = 18.25, quantity = 4;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product G', 22.75, 6) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product G', price = 22.75, quantity = 6;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product H', 9.99, 8) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product H', price = 9.99, quantity = 8;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product I', 14.50, 3) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product I', price = 14.50, quantity = 3;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product J', 16.75, 5) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product J', price = 16.75, quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product K', 11.99, 3) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product K', price = 11.99, quantity = 3;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product L', 25.00, 2) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product L', price = 25.00, quantity = 2;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product M', 8.50, 4) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product M', price = 8.50, quantity = 4;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product N', 19.99, 6) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product N', price = 19.99, quantity = 6;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product O', 13.25, 5) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product O', price = 13.25, quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product P', 30.50, 3) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product P', price = 30.50, quantity = 3;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product Q', 7.99, 7) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product Q', price = 7.99, quantity = 7;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product R', 12.75, 4) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product R', price = 12.75, quantity = 4;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product S', 21.00, 8) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product S', price = 21.00, quantity = 8;",
  "### TABLEDATA\n\nCREATE TABLE sales_transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INTEGER\n);\n\n### STATEMENT\n\nINSERT INTO sales_transactions (product_name, price, quantity) VALUES ('Product T', 17.25, 2) ON CONFLICT (transaction_id) DO UPDATE SET product_name = 'Product T', price = 17.25, quantity = 2;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (1, 'Product A', 50.50) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', product_price = 50.50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (1, 1, 10, '2022-01-01') ON CONFLICT (sale_id) DO UPDATE SET product_id = 1, quantity_sold = 10, sale_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (2, 'Product B', 75.25) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product B', product_price = 75.25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (2, 2, 15, '2022-02-01') ON CONFLICT (sale_id) DO UPDATE SET product_id = 2, quantity_sold = 15, sale_date = '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (3, 'Product C', 100.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product C', product_price = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (3, 3, 20, '2022-03-01') ON CONFLICT (sale_id) DO UPDATE SET product_id = 3, quantity_sold = 20, sale_date = '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (4, 'Product D', 120.75) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product D', product_price = 120.75;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (4, 4, 25, '2022-04-01') ON CONFLICT (sale_id) DO UPDATE SET product_id = 4, quantity_sold = 25, sale_date = '2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (5, 'Product E', 150.50) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product E', product_price = 150.50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (5, 5, 30, '2022-05-01') ON CONFLICT (sale_id) DO UPDATE SET product_id = 5, quantity_sold = 30, sale_date = '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (6, 'Product F', 175.25) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product F', product_price = 175.25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (6, 6, 35, '2022-06-01') ON CONFLICT (sale_id) DO UPDATE SET product_id = 6, quantity_sold = 35, sale_date = '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (7, 'Product G', 200.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product G', product_price = 200.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (7, 7, 40, '2022-07-01') ON CONFLICT (sale_id) DO UPDATE SET product_id = 7, quantity_sold = 40, sale_date = '2022-07-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (8, 'Product H', 220.75) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product H', product_price = 220.75;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (8, 8, 45, '2022-08-01') ON CONFLICT (sale_id) DO UPDATE SET product_id = 8, quantity_sold = 45, sale_date = '2022-08-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (9, 'Product I', 250.50) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product I', product_price = 250.50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (9, 9, 50, '2022-09-01') ON CONFLICT (sale_id) DO UPDATE SET product_id = 9, quantity_sold = 50, sale_date = '2022-09-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (10, 'Product J', 275.25) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product J', product_price = 275.25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (10, 10, 55, '2022-10-01') ON CONFLICT (sale_id) DO UPDATE SET product_id = 10, quantity_sold = 55, sale_date = '2022-10-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (1, 'Product A', 10.50) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', product_price = 10.50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (2, 'Product B', 15.75) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product B', product_price = 15.75;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (3, 'Product C', 20.25) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product C', product_price = 20.25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (4, 'Product D', 12.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product D', product_price = 12.99;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (5, 'Product E', 9.49) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product E', product_price = 9.49;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (6, 'Product F', 18.50) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product F', product_price = 18.50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (7, 'Product G', 22.75) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product G', product_price = 22.75;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (8, 'Product H', 17.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product H', product_price = 17.99;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (9, 'Product I', 14.25) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product I', product_price = 14.25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (10, 'Product J', 11.75) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product J', product_price = 11.75;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (11, 'Product K', 13.50) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product K', product_price = 13.50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (12, 'Product L', 8.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product L', product_price = 8.99;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (13, 'Product M', 21.25) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product M', product_price = 21.25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (14, 'Product N', 16.50) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product N', product_price = 16.50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (15, 'Product O', 19.75) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product O', product_price = 19.75;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (16, 'Product P', 23.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product P', product_price = 23.99;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (17, 'Product Q', 12.25) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product Q', product_price = 12.25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (18, 'Product R', 14.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product R', product_price = 14.99;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (19, 'Product S', 17.25) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product S', product_price = 17.25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, product_price) VALUES (20, 'Product T', 10.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product T', product_price = 10.99;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VALUES (1, 'Product1', 10.99, 'Description1') ON DUPLICATE KEY UPDATE product_name = VALUES(product_name), price = VALUES(price), description = VALUES(description);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VALUES (2, 'Product2', 15.99, 'Description2') ON DUPLICATE KEY UPDATE product_name = VALUES(product_name), price = VALUES(price), description = VALUES(description);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VALUES (3, 'Product3', 20.99, 'Description3') ON DUPLICATE KEY UPDATE product_name = VALUES(product_name), price = VALUES(price), description = VALUES(description);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VALUES (4, 'Product4', 25.99, 'Description4') ON DUPLICATE KEY UPDATE product_name = VALUES(product_name), price = VALUES(price), description = VALUES(description);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VAL...",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VALUES (1, 'Product 1', 19.99, 'Description 1') ON DUPLICATE KEY UPDATE product_name = 'Product 1 Updated', price = 19.99, description = 'Description 1 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VALUES (2, 'Product 2', 29.99, 'Description 2') ON DUPLICATE KEY UPDATE product_name = 'Product 2 Updated', price = 29.99, description = 'Description 2 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VALUES (3, 'Product 3', 39.99, 'Description 3') ON DUPLICATE KEY UPDATE product_name = 'Product 3 Updated', price = 39.99, description = 'Description 3 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VALUES (4, 'Product 4', 49.99, 'Description 4') ON DUPLICATE KEY UPDATE product_name = 'Product 4 Updated', price = 49.99, description = 'Description 4 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VALUES (5, 'Product 5', 59.99, 'Description 5') ON DUPLICATE KEY UPDATE product_name = 'Product 5 Updated', price = 59.99, description = 'Description 5 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VALUES (6, 'Product 6', 69.99, 'Description 6') ON DUPLICATE KEY UPDATE product_name = 'Product 6 Updated', price = 69.99, description = 'Description 6 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VALUES (7, 'Product 7', 79.99, 'Description 7') ON DUPLICATE KEY UPDATE product_name = 'Product 7 Updated', price = 79.99, description = 'Description 7 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VALUES (8, 'Product 8', 89.99, 'Description 8') ON DUPLICATE KEY UPDATE product_name = 'Product 8 Updated', price = 89.99, description = 'Description 8 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VALUES (9, 'Product 9', 99.99, 'Description 9') ON DUPLICATE KEY UPDATE product_name = 'Product 9 Updated', price = 99.99, description = 'Description 9 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, description) VALUES (10, 'Product 10', 109.99, 'Description 10') ON DUPLICATE KEY UPDATE product_name = 'Product 10 Updated', price = 109.99, description = 'Description 10 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (1, 1, 10, '2022-04-01') ON DUPLICATE KEY UPDATE product_id = 1, quantity_sold = 10, sale_date = '2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (2, 2, 20, '2022-04-02') ON DUPLICATE KEY UPDATE product_id = 2, quantity_sold = 20, sale_date = '2022-04-02';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (3, 3, 30, '2022-04-03') ON DUPLICATE KEY UPDATE product_id = 3, quantity_sold = 30, sale_date = '2022-04-03';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (4, 4, 40, '2022-04-04') ON DUPLICATE KEY UPDATE product_id = 4, quantity_sold = 40, sale_date = '2022-04-04';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (5, 5, 50, '2022-04-05') ON DUPLICATE KEY UPDATE product_id = 5, quantity_sold = 50, sale_date = '2022-04-05';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (6, 6, 60, '2022-04-06') ON DUPLICATE KEY UPDATE product_id = 6, quantity_sold = 60, sale_date = '2022-04-06';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (7, 7, 70, '2022-04-07') ON DUPLICATE KEY UPDATE product_id = 7, quantity_sold = 70, sale_date = '2022-04-07';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (8, 8, 80, '2022-04-08') ON DUPLICATE KEY UPDATE product_id = 8, quantity_sold = 80, sale_date = '2022-04-08';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (9, 9, 90, '2022-04-09') ON DUPLICATE KEY UPDATE product_id = 9, quantity_sold = 90, sale_date = '2022-04-09';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, product_id, quantity_sold, sale_date) VALUES (10, 10, 100, '2022-04-10') ON DUPLICATE KEY UPDATE product_id = 10, quantity_sold = 100, sale_date = '2022-04-10';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe Updated', email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (2, 'Jane Smith', 'jane.smith@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Jane Smith Updated', email = 'jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Alice Johnson Updated', email = 'alice.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (4, 'Bob Brown', 'bob.brown@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Bob Brown Updated', email = 'bob.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    description TEXT\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_sold INT,\n    sale_date DATE,\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email) VALUES (5, 'Emily Davis', 'emily.davis@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Emily Davis Updated', email = 'emily.davis@example.com';",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (1, 'Product A', 10.00, 20) ON DUPLICATE KEY UPDATE product_name = 'Product A', price = 10.00, quantity_sold = 20;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (2, 'Product B', 15.50, 30) ON DUPLICATE KEY UPDATE product_name = 'Product B', price = 15.50, quantity_sold = 30;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (3, 'Product C', 25.75, 15) ON DUPLICATE KEY UPDATE product_name = 'Product C', price = 25.75, quantity_sold = 15;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (4, 'Product D', 19.99, 25) ON DUPLICATE KEY UPDATE product_name = 'Product D', price = 19.99, quantity_sold = 25;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (5, 'Product E', 30.25, 10) ON DUPLICATE KEY UPDATE product_name = 'Product E', price = 30.25, quantity_sold = 10;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, email) VALUES (1, 'John Doe', '123 Main Street', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', address = '123 Main Street', email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, email) VALUES (2, 'Jane Smith', '456 Elm Street', 'jane.smith@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Jane Smith', address = '456 Elm Street', email = 'jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, email) VALUES (3, 'Alice Johnson', '789 Oak Street', 'alice.johnson@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Alice Johnson', address = '789 Oak Street', email = 'alice.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO sales (sale_id, sale_date, customer_id) VALUES (1, '2022-05-15', 1) ON DUPLICATE KEY UPDATE sale_date = '2022-05-15', customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO sales (sale_id, sale_date, customer_id) VALUES (2, '2022-05-20', 2) ON DUPLICATE KEY UPDATE sale_date = '2022-05-20', customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO sales (sale_id, sale_date, customer_id) VALUES (3, '2022-05-25', 3) ON DUPLICATE KEY UPDATE sale_date = '2022-05-25', customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO sale_items (item_id, sale_id, product_id, quantity_sold) VALUES (1, 1, 1, 5) ON DUPLICATE KEY UPDATE sale_id = 1, product_id = 1, quantity_sold = 5;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO sale_items (item_id, sale_id, product_id, quantity_sold) VALUES (2, 2, 2, 3) ON DUPLICATE KEY UPDATE sale_id = 2, product_id = 2, quantity_sold = 3;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO sale_items (item_id, sale_id, product_id, quantity_sold) VALUES (3, 3, 3, 7) ON DUPLICATE KEY UPDATE sale_id = 3, product_id = 3, quantity_sold = 7;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO sale_items (item_id, sale_id, product_id, quantity_sold) VALUES (4, 1, 4, 2) ON DUPLICATE KEY UPDATE sale_id = 1, product_id = 4, quantity_sold = 2;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO sale_items (item_id, sale_id, product_id, quantity_sold) VALUES (5, 2, 5, 4) ON DUPLICATE KEY UPDATE sale_id = 2, product_id = 5, quantity_sold = 4;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (1, 'Product A', 50.00, 100) ON DUPLICATE KEY UPDATE product_name = 'Product A Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (2, 'Product B', 75.00, 50) ON DUPLICATE KEY UPDATE price = 80.00, quantity_sold = quantity_sold + 10;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (3, 'Product C', 100.00, 200) ON DUPLICATE KEY UPDATE price = price + 10.00, quantity_sold = quantity_sold - 20;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (4, 'Product D', 120.00, 150) ON DUPLICATE KEY UPDATE price = price * 1.05, quantity_sold = quantity_sold * 0.9;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (5, 'Product E', 80.00, 80) ON DUPLICATE KEY UPDATE price = price * 0.95, quantity_sold = quantity_sold + 5;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (6, 'Product F', 60.00, 120) ON DUPLICATE KEY UPDATE product_name = 'Product F Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (7, 'Product G', 90.00, 70) ON DUPLICATE KEY UPDATE price = 95.00, quantity_sold = quantity_sold - 15;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (8, 'Product H', 110.00, 100) ON DUPLICATE KEY UPDATE price = price - 10.00, quantity_sold = quantity_sold + 20;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (9, 'Product I', 70.00, 90) ON DUPLICATE KEY UPDATE price = price + 5.00, quantity_sold = quantity_sold - 10;",
  "### TABLEDATA\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), quantity_sold INT);\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(255), address VARCHAR(255), email VARCHAR(255));\n\nCREATE TABLE sales (sale_id INT PRIMARY KEY, sale_date DATE, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));\n\nCREATE TABLE sale_items (item_id INT PRIMARY KEY, sale_id INT, product_id INT, quantity_sold INT, FOREIGN KEY (sale_id) REFERENCES sales(sale_id), FOREIGN KEY (product_id) REFERENCES products(product_id));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity_sold) VALUES (10, 'Product J', 95.00, 110) ON DUPLICATE KEY UPDATE price = price * 1.10, quantity_sold = quantity_sold * 1.1;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products(product_id, product_name, price, quantity_in_stock) VALUES (1, 'Product1', 10.99, 100) ON DUPLICATE KEY UPDATE product_name='Product1', price=10.99, quantity_in_stock=100;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products(product_id, product_name, price, quantity_in_stock) VALUES (2, 'Product2', 20.99, 150) ON DUPLICATE KEY UPDATE product_name='Product2', price=20.99, quantity_in_stock=150;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products(product_id, product_name, price, quantity_in_stock) VALUES (3, 'Product3', 30.99, 200) ON DUPLICATE KEY UPDATE product_name='Product3', price=30.99, quantity_in_stock=200;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products(product_id, product_name, price, quantity_in_stock) VALUES (4, 'Product4', 40.99, 250) ON DUPLICATE KEY UPDATE product_name='Product4', price=40.99, quantity_in_stock=250;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products(product_id, product_name, price, quantity_in_stock) VALUES (5, 'Product5', 50.99, 300) ON DUPLICATE KEY UPDATE product_name='Product5', price=50.99, quantity_in_stock=300;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products(product_id, product_name, price, quantity_in_stock) VALUES (6, 'Product6', 60.99, 350) ON DUPLICATE KEY UPDATE product_name='Product6', price=60.99, quantity_in_stock=350;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products(product_id, product_name, price, quantity_in_stock) VALUES (7, 'Product7', 70.99, 400) ON DUPLICATE KEY UPDATE product_name='Product7', price=70.99, quantity_in_stock=400;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products(product_id, product_name, price, quantity_in_stock) VALUES (8, 'Product8', 80.99, 450) ON DUPLICATE KEY UPDATE product_name='Product8', price=80.99, quantity_in_stock=450;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products(product_id, product_name, price, quantity_in_stock) VALUES (9, 'Product9', 90.99, 500) ON DUPLICATE KEY UPDATE product_name='Product9', price=90.99, quantity_in_stock=500;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products(product_id, product_name, price, quantity_in_stock) VALUES (10, 'Product10', 100.99, 550) ON DUPLICATE KEY UPDATE product_name='Product10', price=100.99, quantity_in_stock=550;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (1, 'Customer1', 'customer1@example.com') ON DUPLICATE KEY UPDATE customer_name='Customer1', email='customer1@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (2, 'Customer2', 'customer2@example.com') ON DUPLICATE KEY UPDATE customer_name='Customer2', email='customer2@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (3, 'Customer3', 'customer3@example.com') ON DUPLICATE KEY UPDATE customer_name='Customer3', email='customer3@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (4, 'Customer4', 'customer4@example.com') ON DUPLICATE KEY UPDATE customer_name='Customer4', email='customer4@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (5, 'Customer5', 'customer5@example.com') ON DUPLICATE KEY UPDATE customer_name='Customer5', email='customer5@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (6, 'Customer6', 'customer6@example.com') ON DUPLICATE KEY UPDATE customer_name='Customer6', email='customer6@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (7, 'Customer7', 'customer7@example.com') ON DUPLICATE KEY UPDATE customer_name='Customer7', email='customer7@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (8, 'Customer8', 'customer8@example.com') ON DUPLICATE KEY UPDATE customer_name='Customer8', email='customer8@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (9, 'Customer9', 'customer9@example.com') ON DUPLICATE KEY UPDATE customer_name='Customer9', email='customer9@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers(customer_id, customer_name, email) VALUES (10, 'Customer10', 'customer10@example.com') ON DUPLICATE KEY UPDATE customer_name='Customer10', email='customer10@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products (product_id, product_name, price, quantity_in_stock) VALUES (1, 'ProductA', 50.00, 100) ON DUPLICATE KEY UPDATE product_name='ProductA', price=50.00, quantity_in_stock=100;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products (product_id, product_name, price, quantity_in_stock) VALUES (2, 'ProductB', 75.00, 150) ON DUPLICATE KEY UPDATE product_name='ProductB', price=75.00, quantity_in_stock=150;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, email) VALUES (1, 'CustomerA', 'customerA@example.com') ON DUPLICATE KEY UPDATE customer_name='CustomerA', email='customerA@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, email) VALUES (2, 'CustomerB', 'customerB@example.com') ON DUPLICATE KEY UPDATE customer_name='CustomerB', email='customerB@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, customer_id, product_id, quantity_sold, transaction_date) VALUES (1, 1, 1, 5, '2022-01-10') ON DUPLICATE KEY UPDATE quantity_sold=5, transaction_date='2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, customer_id, product_id, quantity_sold, transaction_date) VALUES (2, 2, 2, 8, '2022-01-15') ON DUPLICATE KEY UPDATE quantity_sold=8, transaction_date='2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Salespersons (salesperson_id, salesperson_name, commission_rate) VALUES (1, 'SalespersonA', 0.10) ON DUPLICATE KEY UPDATE salesperson_name='SalespersonA', commission_rate=0.10;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Salespersons (salesperson_id, salesperson_name, commission_rate) VALUES (2, 'SalespersonB', 0.15) ON DUPLICATE KEY UPDATE salesperson_name='SalespersonB', commission_rate=0.15;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, transaction_id, salesperson_id) VALUES (1, 1, 1) ON DUPLICATE KEY UPDATE transaction_id=1, salesperson_id=1;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, transaction_id, salesperson_id) VALUES (2, 2, 2) ON DUPLICATE KEY UPDATE transaction_id=2, salesperson_id=2;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products (product_id, product_name, price, quantity_in_stock) VALUES (3, 'ProductC', 60.00, 120) ON DUPLICATE KEY UPDATE product_name='ProductC', price=60.00, quantity_in_stock=120;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products (product_id, product_name, price, quantity_in_stock) VALUES (4, 'ProductD', 90.00, 200) ON DUPLICATE KEY UPDATE product_name='ProductD', price=90.00, quantity_in_stock=200;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, email) VALUES (3, 'CustomerC', 'customerC@example.com') ON DUPLICATE KEY UPDATE customer_name='CustomerC', email='customerC@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, email) VALUES (4, 'CustomerD', 'customerD@example.com') ON DUPLICATE KEY UPDATE customer_name='CustomerD', email='customerD@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, customer_id, product_id, quantity_sold, transaction_date) VALUES (3, 3, 3, 10, '2022-01-20') ON DUPLICATE KEY UPDATE quantity_sold=10, transaction_date='2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, customer_id, product_id, quantity_sold, transaction_date) VALUES (4, 4, 4, 4, '2022-01-25') ON DUPLICATE KEY UPDATE quantity_sold=4, transaction_date='2022-01-25';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Salespersons (salesperson_id, salesperson_name, commission_rate) VALUES (3, 'SalespersonC', 0.12) ON DUPLICATE KEY UPDATE salesperson_name='SalespersonC', commission_rate=0.12;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Salespersons (salesperson_id, salesperson_name, commission_rate) VALUES (4, 'SalespersonD', 0.20) ON DUPLICATE KEY UPDATE salesperson_name='SalespersonD', commission_rate=0.20;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, transaction_id, salesperson_id) VALUES (3, 3, 3) ON DUPLICATE KEY UPDATE transaction_id=3, salesperson_id=3;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity_sold INT,\n    transaction_date DATE\n);\n\nCREATE TABLE Salespersons (\n    salesperson_id INT PRIMARY KEY,\n    salesperson_name VARCHAR(255),\n    commission_rate DECIMAL(5, 2)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    transaction_id INT,\n    salesperson_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, transaction_id, salesperson_id) VALUES (4, 4, 4) ON DUPLICATE KEY UPDATE transaction_id=4, salesperson_id=4;"
]