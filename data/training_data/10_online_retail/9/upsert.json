[
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (1, 'John Doe', 'johndoe@example.com', '123-456-7890', '123 Main St, City, Country', '1234567812345678', '2023-12-31', 123, 1000.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (2, 'Jane Smith', 'janesmith@example.com', '456-789-0123', '456 Elm St, City, Country', '9876543210987654', '2022-11-30', 456, 1500.50)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (3, 'Alice Johnson', 'alicejohnson@example.com', '789-012-3456', '789 Oak St, City, Country', '2468135791357924', '2024-10-31', 789, 2000.75)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (4, 'Bob Williams', 'bobwilliams@example.com', '012-345-6789', '012 Pine St, City, Country', '1357924681597536', '2025-09-30', 234, 2500.25)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (5, 'Eve Brown', 'evebrown@example.com', '345-678-9012', '345 Cedar St, City, Country', '3691248573691248', '2026-08-31', 567, 3000.50)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (6, 'Mike Davis', 'mikedavis@example.com', '678-901-2345', '678 Maple St, City, Country', '5823914765823914', '2027-07-31', 890, 3500.75)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (7, 'Sarah Wilson', 'sarahwilson@example.com', '', '789 Birch St, City, Country', '2947538162947538', '2028-06-30', 123, 4000.25)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (8, 'David Lee', 'davidlee@example.com', '', '890 Oak St, City, Country', '8162539478162539', '2029-05-31', 456, 4500.50)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (9, 'Mia Clark', 'miaclark@example.com', '', '901 Elm St, City, Country', '3591682473591682', '2030-04-30', 789, 5000.75)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (10, 'Luke Brown', 'lukebrown@example.com', '', '012 Cedar St, City, Country', '8246192838246192', '2031-03-31', 234, 5500.25)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (11, 'Olivia Green', 'oliviagreen@example.com', '', '123 Maple St, City, Country', '5716234985716234', '2032-02-29', 567, 6000.50)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (12, 'Tom White', 'tomwhite@example.com', '', '234 Pine St, City, Country', '3498156273498156', '2033-01-31', 890, 6500.75)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (13, 'Amy Baker', 'amybaker@example.com', '', '345 Birch St, City, Country', '7326485197326485', '2034-12-31', 123, 7000.25)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (14, 'Sam King', 'samking@example.com', '', '456 Oak St, City, Country', '9167352849167352', '2035-11-30', 456, 7500.50)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (15, 'Grace Young', 'graceyoung@example.com', '', '567 Elm St, City, Country', '2587419632587419', '2036-10-31', 789, 8000.75)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (16, 'Paul Miller', 'paulmiller@example.com', '', '678 Main St, City, Country', '4692731854692731', '2037-09-30', 234, 8500.25)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (17, 'Lily Roberts', 'lilyroberts@example.com', '', '789 Cedar St, City, Country', '8375619428375619', '2038-08-31', 567, 9000.50)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (18, 'Mark Evans', 'markevans@example.com', '', '890 Birch St, City, Country', '7521684397521684', '2039-07-31', 890, 9500.75)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (19, 'Sophie Hall', 'sophiehall@example.com', '', '901 Oak St, City, Country', '1394728561394728', '2040-06-30', 123, 10000.25)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nUPSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (20, 'Jake Turner', 'jaketurner@example.com', '', '012 Elm St, City, Country', '6248197356248197', '2041-05-31', 456, 10500.50)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890', '1234 Elm Street, City, State', '1234567890123456', '2025-12-31', 123, 1000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '111-222-3333', '5678 Maple Avenue, City, State', '9876543210987654', '2024-10-31', 456, 2000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '555-666-7777', '9101 Oak Avenue, City, State', '1357924680135792', '2023-06-30', 789, 3000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (4, 'Michael Brown', 'michael.brown@example.com', '999-888-7777', '2468 Pine Street, City, State', '2468135790246813', '2022-04-30', 321, 4000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (5, 'Sarah Wilson', 'sarah.wilson@example.com', '777-999-8888', '3697 Cedar Street, City, State', '9876541230123456', '2021-08-31', 654, 5000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (6, 'Chris Davis', 'chris.davis@example.com', '222-333-4444', '1357 Walnut Street, City, State', '9876123456987612', '2020-12-31', 987, 6000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (7, 'Emily Miller', 'emily.miller@example.com', '444-555-6666', '9876 Cherry Street, City, State', '1357987654315798', '2019-10-31', 210, 7000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (8, 'Brian Harris', 'brian.harris@example.com', '888-777-6666', '3698 Elmwood Street, City, State', '8976135948671394', '2018-06-30', 543, 8000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (9, 'Laura Lee', 'laura.lee@example.com', '999-888-7777', '1596 Birch Street, City, State', '9876123489649312', '2017-04-30', 765, 9000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (10, 'Tom Smith', 'tom.smith@example.com', '111-222-3333', '7531 Magnolia Street, City, State', '4567890132578941', '2016-08-31', 321, 10000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (11, 'Olivia Clark', 'olivia.clark@example.com', '555-666-7777', '7843 Dogwood Street, City, State', '3218794653217894', '2015-12-31', 654, 11000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (12, 'Benjamin Lopez', 'benjamin.lopez@example.com', '999-888-7777', '2357 Oakwood Street, City, State', '9876512340897651', '2014-10-31', 987, 12000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (13, 'Sophia Perez', 'sophia.perez@example.com', '222-333-4444', '7854 Birchwood Street, City, State', '9876512390865821', '2013-06-30', 210, 13000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (14, 'Ava Martinez', 'ava.martinez@example.com', '444-555-6666', '6321 Maplewood Street, City, State', '1237896540123789', '2012-04-30', 543, 14000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (15, 'Lucas Rodriguez', 'lucas.rodriguez@example.com', '888-777-6666', '4896 Cedarwood Street, City, State', '1357986420135798', '2011-08-31', 765, 15000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (16, 'Amelia Hernandez', 'amelia.hernandez@example.com', '999-888-7777', '7530 Elmwood Street, City, State', '9876123490876213', '2010-12-31', 321, 16000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (17, 'Ethan Green', 'ethan.green@example.com', '111-222-3333', '5689 Walnutwood Street, City, State', '4567890123456789', '2009-10-31', 654, 17000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (18, 'Evelyn King', 'evelyn.king@example.com', '555-666-7777', '7843 Chestnut Street, City, State', '3218790543218790', '2008-06-30', 987, 18000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (19, 'Mia Rivera', 'mia.rivera@example.com', '444-555-6666', '2367 Cherrywood Street, City, State', '1237865478123786', '2007-04-30', 210, 19000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nINSERT INTO customer_data (customer_id, customer_name, customer_email, customer_phone, customer_address, credit_card_number, expiry_date, cvv, account_balance) VALUES (20, 'Noah Perez', 'noah.perez@example.com', '999-888-7777', '1590 Magnoliawood Street, City, State', '9876132487649132', '2006-08-31', 765, 20000.00) ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email, customer_phone = excluded.customer_phone, customer_address = excluded.customer_address, credit_card_number = excluded.credit_card_number, expiry_date = excluded.expiry_date, cvv = excluded.cvv, account_balance = excluded.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (1, 'John Doe', 'john.doe@example.com', '123 Main St, City', '123-456-7890') ON DUPLICATE KEY UPDATE full_name='John Doe Updated', email='john.doe@example.com', address='123 Main St, City Updated', phone_number='123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '456 Maple Ave, Town', '987-654-3210') ON DUPLICATE KEY UPDATE full_name='Jane Smith Updated', email='jane.smith@example.com', address='456 Maple Ave, Town Updated', phone_number='987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '789 Oak Rd, Village', '555-123-4567') ON DUPLICATE KEY UPDATE full_name='Alice Johnson Updated', email='alice.johnson@example.com', address='789 Oak Rd, Village Updated', phone_number='555-123-4567';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (4, 'Bob Brown', 'bob.brown@example.com', '321 Elm St, County', '777-888-9999') ON DUPLICATE KEY UPDATE full_name='Bob Brown Updated', email='bob.brown@example.com', address='321 Elm St, County Updated', phone_number='777-888-9999';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (5, 'Emily Wilson', 'emily.wilson@example.com', '654 Pine Blvd, Borough', '222-333-4444') ON DUPLICATE KEY UPDATE full_name='Emily Wilson Updated', email='emily.wilson@example.com', address='654 Pine Blvd, Borough Updated', phone_number='222-333-4444';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (6, 'David Lee', 'david.lee@example.com', '987 Cedar Ln, Township', '666-777-8888') ON DUPLICATE KEY UPDATE full_name='David Lee Updated', email='david.lee@example.com', address='987 Cedar Ln, Township Updated', phone_number='666-777-8888';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (7, 'Sarah Miller', 'sarah.miller@example.com', '741 Oakridge Dr, Hamlet', '999-888-7777') ON DUPLICATE KEY UPDATE full_name='Sarah Miller Updated', email='sarah.miller@example.com', address='741 Oakridge Dr, Hamlet Updated', phone_number='999-888-7777';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (8, 'Michael Wilson', 'michael.wilson@example.com', '852 Willow Rd, Manor', '111-222-3333') ON DUPLICATE KEY UPDATE full_name='Michael Wilson Updated', email='michael.wilson@example.com', address='852 Willow Rd, Manor Updated', phone_number='111-222-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (9, 'Laura Davis', 'laura.davis@example.com', '369 Birch Ave, Villa', '444-555-6666') ON DUPLICATE KEY UPDATE full_name='Laura Davis Updated', email='laura.davis@example.com', address='369 Birch Ave, Villa Updated', phone_number='444-555-6666';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (10, 'Chris Johnson', 'chris.johnson@example.com', '753 Elmwood Dr, Grove', '666-999-1111') ON DUPLICATE KEY UPDATE full_name='Chris Johnson Updated', email='chris.johnson@example.com', address='753 Elmwood Dr, Grove Updated', phone_number='666-999-1111';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (11, 'Lisa Adams', 'lisa.adams@example.com', '852 Birchwood Blvd, Summit', '888-111-2222') ON DUPLICATE KEY UPDATE full_name='Lisa Adams Updated', email='lisa.adams@example.com', address='852 Birchwood Blvd, Summit Updated', phone_number='888-111-2222';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (12, 'Steven Anderson', 'steven.anderson@example.com', '369 Pinecrest Ave, Heights', '111-555-7777') ON DUPLICATE KEY UPDATE full_name='Steven Anderson Updated', email='steven.anderson@example.com', address='369 Pinecrest Ave, Heights Updated', phone_number='111-555-7777';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (13, 'Megan Stewart', 'megan.stewart@example.com', '753 Hillside Ln, Dale', '222-888-3333') ON DUPLICATE KEY UPDATE full_name='Megan Stewart Updated', email='megan.stewart@example.com', address='753 Hillside Ln, Dale Updated', phone_number='222-888-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (14, 'Kevin Evans', 'kevin.evans@example.com', '456 Oakwood Rd, Park', '333-444-5555') ON DUPLICATE KEY UPDATE full_name='Kevin Evans Updated', email='kevin.evans@example.com', address='456 Oakwood Rd, Park Updated', phone_number='333-444-5555';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (15, 'Rachel Brooks', 'rachel.brooks@example.com', '987 Maplewood Blvd, Harbor', '555-666-7777') ON DUPLICATE KEY UPDATE full_name='Rachel Brooks Updated', email='rachel.brooks@example.com', address='987 Maplewood Blvd, Harbor Updated', phone_number='555-666-7777';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (16, 'Erica Bennett', 'erica.bennett@example.com', '147 Willowcrest Dr, Cove', '777-222-9999') ON DUPLICATE KEY UPDATE full_name='Erica Bennett Updated', email='erica.bennett@example.com', address='147 Willowcrest Dr, Cove Updated', phone_number='777-222-9999';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (17, 'Derek Parker', 'derek.parker@example.com', '321 Elmwood Rd, Bay', '888-666-5555') ON DUPLICATE KEY UPDATE full_name='Derek Parker Updated', email='derek.parker@example.com', address='321 Elmwood Rd, Bay Updated', phone_number='888-666-5555';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (18, 'Hannah Collins', 'hannah.collins@example.com', '654 Cedar Ave, Point', '999-999-1111') ON DUPLICATE KEY UPDATE full_name='Hannah Collins Updated', email='hannah.collins@example.com', address='654 Cedar Ave, Point Updated', phone_number='999-999-1111';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (19, 'Tommy Cook', 'tommy.cook@example.com', '852 Hillcrest Dr, Ridge', '111-333-7777') ON DUPLICATE KEY UPDATE full_name='Tommy Cook Updated', email='tommy.cook@example.com', address='852 Hillcrest Dr, Ridge Updated', phone_number='111-333-7777';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (20, 'Olivia Fisher', 'olivia.fisher@example.com', '369 Pinecrest Ave, Shore', '222-555-9999') ON DUPLICATE KEY UPDATE full_name='Olivia Fisher Updated', email='olivia.fisher@example.com', address='369 Pinecrest Ave, Shore Updated', phone_number='222-555-9999';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (1, 'John Doe', 'john.doe@example.com', '123 Main St', '555-1234') ON CONFLICT (customer_id) DO UPDATE SET full_name = EXCLUDED.full_name, email = EXCLUDED.email, address = EXCLUDED.address, phone_number = EXCLUDED.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '456 Elm St', '555-5678') ON CONFLICT (customer_id) DO UPDATE SET full_name = EXCLUDED.full_name, email = EXCLUDED.email, address = EXCLUDED.address, phone_number = EXCLUDED.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '789 Oak St', '555-9101') ON CONFLICT (customer_id) DO UPDATE SET full_name = EXCLUDED.full_name, email = EXCLUDED.email, address = EXCLUDED.address, phone_number = EXCLUDED.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (4, 'Bob Brown', 'bob.brown@example.com', '321 Pine St', '555-1212') ON CONFLICT (customer_id) DO UPDATE SET full_name = EXCLUDED.full_name, email = EXCLUDED.email, address = EXCLUDED.address, phone_number = EXCLUDED.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, full_name, email, address, phone_number) VALUES (5, 'Carol Wilson', 'carol.wilson@example.com', '654 Birch St', '555-1313') ON CONFLICT (customer_id) DO UPDATE SET full_name = EXCLUDED.full_name, email = EXCLUDED.email, address = EXCLUDED.address, phone_number = EXCLUDED.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, description) VALUES (1, 1, '2022-01-01 10:00:00', 100.00, 'Purchase 1') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, transaction_date = EXCLUDED.transaction_date, amount = EXCLUDED.amount, description = EXCLUDED.description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, description) VALUES (2, 2, '2022-01-02 11:00:00', 150.00, 'Purchase 2') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, transaction_date = EXCLUDED.transaction_date, amount = EXCLUDED.amount, description = EXCLUDED.description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, description) VALUES (3, 3, '2022-01-03 12:00:00', 200.00, 'Purchase 3') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, transaction_date = EXCLUDED.transaction_date, amount = EXCLUDED.amount, description = EXCLUDED.description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, description) VALUES (4, 4, '2022-01-04 13:00:00', 250.00, 'Purchase 4') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, transaction_date = EXCLUDED.transaction_date, amount = EXCLUDED.amount, description = EXCLUDED.description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, description) VALUES (5, 5, '2022-01-05 14:00:00', 300.00, 'Purchase 5') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, transaction_date = EXCLUDED.transaction_date, amount = EXCLUDED.amount, description = EXCLUDED.description;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (1, 'John Doe', 'john.doe@example.com', 'hash123', '2022-01-01') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (2, 'Jane Smith', 'jane.smith@example.com', 'hash456', '2022-01-05') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', 'hash789', '2022-01-10') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (4, 'Bob Williams', 'bob.williams@example.com', 'hashabc', '2022-01-15') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (5, 'Eve Davis', 'eve.davis@example.com', 'hashdef', '2022-01-20') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (6, 'Michael Brown', 'michael.brown@example.com', 'hashghi', '2022-01-25') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (7, 'Sarah Lee', 'sarah.lee@example.com', 'hashjkl', '2022-01-30') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (8, 'Tom Clark', 'tom.clark@example.com', 'hashmno', '2022-02-01') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (9, 'Olivia Parker', 'olivia.parker@example.com', 'hashpqr', '2022-02-05') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (10, 'William Scott', 'william.scott@example.com', 'hasstu', '2022-02-10') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (11, 'Grace White', 'grace.white@example.com', 'hashvwx', '2022-02-15') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (12, 'Henry King', 'henry.king@example.com', 'hashyza', '2022-02-20') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (13, 'Sophia Adams', 'sophia.adams@example.com', 'hashbcd', '2022-02-25') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (14, 'Lucas Martin', 'lucas.martin@example.com', 'hashefg', '2022-03-01') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (15, 'Emily Lewis', 'emily.lewis@example.com', 'hashhij', '2022-03-05') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (16, 'Luke Anderson', 'luke.anderson@example.com', 'hashklm', '2022-03-10') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (17, 'Chloe Taylor', 'chloe.taylor@example.com', 'hashnop', '2022-03-15') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (18, 'David Hernandez', 'david.hernandez@example.com', 'hashqrs', '2022-03-20') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (19, 'Sophie Garcia', 'sophie.garcia@example.com', 'hashtuv', '2022-03-25') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (20, 'Michaela Torres', 'michaela.torres@example.com', 'hashwxy', '2022-03-30') ON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, password_hash = excluded.password_hash, registration_date = excluded.registration_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (1, 'Alice', 'alice@example.com', 'hash123', '2022-01-01') ON CONFLICT (customer_id) DO UPDATE SET name = 'Alice', email = 'alice@example.com', password_hash = 'hash123', registration_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (2, 'Bob', 'bob@example.com', 'hash456', '2022-01-02') ON CONFLICT (customer_id) DO UPDATE SET name = 'Bob', email = 'bob@example.com', password_hash = 'hash456', registration_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (3, 'Charlie', 'charlie@example.com', 'hash789', '2022-01-03') ON CONFLICT (customer_id) DO UPDATE SET name = 'Charlie', email = 'charlie@example.com', password_hash = 'hash789', registration_date = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (4, 'David', 'david@example.com', 'hash456', '2022-01-04') ON CONFLICT (customer_id) DO UPDATE SET name = 'David', email = 'david@example.com', password_hash = 'hash456', registration_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, password_hash, registration_date) VALUES (5, 'Eve', 'eve@example.com', 'hash123', '2022-01-05') ON CONFLICT (customer_id) DO UPDATE SET name = 'Eve', email = 'eve@example.com', password_hash = 'hash123', registration_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES (1, 1, 100.50, '2022-01-10 08:30:00') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 1, amount = 100.50, transaction_date = '2022-01-10 08:30:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES (2, 2, 200.75, '2022-01-11 09:45:00') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 2, amount = 200.75, transaction_date = '2022-01-11 09:45:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES (3, 3, 300.25, '2022-01-12 10:20:00') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 3, amount = 300.25, transaction_date = '2022-01-12 10:20:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES (4, 4, 400.30, '2022-01-13 11:15:00') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 4, amount = 400.30, transaction_date = '2022-01-13 11:15:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES (5, 5, 500.00, '2022-01-14 12:30:00') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 5, amount = 500.00, transaction_date = '2022-01-14 12:30:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, customer_id, access_timestamp, accessed_resource, access_type) VALUES (1, 1, '2022-01-20 08:30:00', 'resource1', 'READ') ON CONFLICT (log_id) DO UPDATE SET customer_id = 1, access_timestamp = '2022-01-20 08:30:00', accessed_resource = 'resource1', access_type = 'READ';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, customer_id, access_timestamp, accessed_resource, access_type) VALUES (2, 2, '2022-01-21 09:45:00', 'resource2', 'WRITE') ON CONFLICT (log_id) DO UPDATE SET customer_id = 2, access_timestamp = '2022-01-21 09:45:00', accessed_resource = 'resource2', access_type = 'WRITE';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, customer_id, access_timestamp, accessed_resource, access_type) VALUES (3, 3, '2022-01-22 10:20:00', 'resource3', 'READ') ON CONFLICT (log_id) DO UPDATE SET customer_id = 3, access_timestamp = '2022-01-22 10:20:00', accessed_resource = 'resource3', access_type = 'READ';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, customer_id, access_timestamp, accessed_resource, access_type) VALUES (4, 4, '2022-01-23 11:15:00', 'resource4', 'WRITE') ON CONFLICT (log_id) DO UPDATE SET customer_id = 4, access_timestamp = '2022-01-23 11:15:00', accessed_resource = 'resource4', access_type = 'WRITE';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, customer_id, access_timestamp, accessed_resource, access_type) VALUES (5, 5, '2022-01-24 12:30:00', 'resource5', 'READ') ON CONFLICT (log_id) DO UPDATE SET customer_id = 5, access_timestamp = '2022-01-24 12:30:00', accessed_resource = 'resource5', access_type = 'READ';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (1, 'John Doe', '123 Main St', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, address=excluded.address, email=excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, customer_id, amount, transaction_date) VALUES (1, 1, 100.50, CURRENT_TIMESTAMP) ON CONFLICT (transaction_id) DO UPDATE SET customer_id=excluded.customer_id, amount=excluded.amount, transaction_date=excluded.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO SecurityLogs (log_id, customer_id, log_details, log_timestamp) VALUES (1, 1, 'Login Success', CURRENT_TIMESTAMP) ON CONFLICT (log_id) DO UPDATE SET customer_id=excluded.customer_id, log_details=excluded.log_details, log_timestamp=excluded.log_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO AdminUsers (user_id, username, password, is_admin) VALUES (1, 'admin1', 'password123', TRUE) ON CONFLICT (user_id) DO UPDATE SET username=excluded.username, password=excluded.password, is_admin=excluded.is_admin;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (2, 'Jane Smith', '456 Oak St', 'jane.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, address=excluded.address, email=excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, customer_id, amount, transaction_date) VALUES (2, 2, 200.75, CURRENT_TIMESTAMP) ON CONFLICT (transaction_id) DO UPDATE SET customer_id=excluded.customer_id, amount=excluded.amount, transaction_date=excluded.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO SecurityLogs (log_id, customer_id, log_details, log_timestamp) VALUES (2, 2, 'Password Change', CURRENT_TIMESTAMP) ON CONFLICT (log_id) DO UPDATE SET customer_id=excluded.customer_id, log_details=excluded.log_details, log_timestamp=excluded.log_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO AdminUsers (user_id, username, password, is_admin) VALUES (2, 'admin2', 'securePass', FALSE) ON CONFLICT (user_id) DO UPDATE SET username=excluded.username, password=excluded.password, is_admin=excluded.is_admin;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (3, 'Alice Johnson', '789 Pine St', 'alice.johnson@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, address=excluded.address, email=excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, customer_id, amount, transaction_date) VALUES (3, 3, 150.25, CURRENT_TIMESTAMP) ON CONFLICT (transaction_id) DO UPDATE SET customer_id=excluded.customer_id, amount=excluded.amount, transaction_date=excluded.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO SecurityLogs (log_id, customer_id, log_details, log_timestamp) VALUES (3, 3, 'Unauthorized Access Attempt', CURRENT_TIMESTAMP) ON CONFLICT (log_id) DO UPDATE SET customer_id=excluded.customer_id, log_details=excluded.log_details, log_timestamp=excluded.log_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO AdminUsers (user_id, username, password, is_admin) VALUES (3, 'admin3', 'adminPass', TRUE) ON CONFLICT (user_id) DO UPDATE SET username=excluded.username, password=excluded.password, is_admin=excluded.is_admin;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (4, 'Michael Brown', '101 Elm St', 'michael.brown@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, address=excluded.address, email=excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, customer_id, amount, transaction_date) VALUES (4, 4, 75.60, CURRENT_TIMESTAMP) ON CONFLICT (transaction_id) DO UPDATE SET customer_id=excluded.customer_id, amount=excluded.amount, transaction_date=excluded.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO SecurityLogs (log_id, customer_id, log_details, log_timestamp) VALUES (4, 4, 'Logout Event', CURRENT_TIMESTAMP) ON CONFLICT (log_id) DO UPDATE SET customer_id=excluded.customer_id, log_details=excluded.log_details, log_timestamp=excluded.log_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO AdminUsers (user_id, username, password, is_admin) VALUES (4, 'admin4', 'admin123', FALSE) ON CONFLICT (user_id) DO UPDATE SET username=excluded.username, password=excluded.password, is_admin=excluded.is_admin;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (5, 'Sarah Miller', '202 Maple St', 'sarah.miller@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, address=excluded.address, email=excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, customer_id, amount, transaction_date) VALUES (5, 5, 120.80, CURRENT_TIMESTAMP) ON CONFLICT (transaction_id) DO UPDATE SET customer_id=excluded.customer_id, amount=excluded.amount, transaction_date=excluded.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO SecurityLogs (log_id, customer_id, log_details, log_timestamp) VALUES (5, 5, 'Failed Login Attempt', CURRENT_TIMESTAMP) ON CONFLICT (log_id) DO UPDATE SET customer_id=excluded.customer_id, log_details=excluded.log_details, log_timestamp=excluded.log_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO AdminUsers (user_id, username, password, is_admin) VALUES (5, 'admin5', 'pass1234', TRUE) ON CONFLICT (user_id) DO UPDATE SET username=excluded.username, password=excluded.password, is_admin=excluded.is_admin;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (1, 'John Doe', '123 Main St', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', address = '123 Main St', email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, customer_id, amount, transaction_date) VALUES (1, 1, 100.00, '2021-10-15 09:00:00') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 1, amount = 100.00, transaction_date = '2021-10-15 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (2, 'Jane Smith', '456 Oak St', 'jane.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith', address = '456 Oak St', email = 'jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO AdminUsers (user_id, username, password, is_admin) VALUES (1, 'admin', 'password123', true) ON CONFLICT (user_id) DO UPDATE SET username = 'admin', password = 'password123', is_admin = true;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (3, 'Alice Johnson', '789 Elm St', 'alice.johnson@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Johnson', address = '789 Elm St', email = 'alice.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, customer_id, amount, transaction_date) VALUES (2, 2, 200.50, '2021-10-16 10:30:00') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 2, amount = 200.50, transaction_date = '2021-10-16 10:30:00';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (4, 'Bob Brown', '101 Pine St', 'bob.brown@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob Brown', address = '101 Pine St', email = 'bob.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO AdminUsers (user_id, username, password, is_admin) VALUES (2, 'superadmin', 'superpassword', true) ON CONFLICT (user_id) DO UPDATE SET username = 'superadmin', password = 'superpassword', is_admin = true;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (5, 'Eve Williams', '202 Cedar St', 'eve.williams@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Eve Williams', address = '202 Cedar St', email = 'eve.williams@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, customer_id, amount, transaction_date) VALUES (3, 3, 150.75, '2021-10-17 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 3, amount = 150.75, transaction_date = '2021-10-17 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (6, 'Charlie Davis', '303 Maple St', 'charlie.davis@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Charlie Davis', address = '303 Maple St', email = 'charlie.davis@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO AdminUsers (user_id, username, password, is_admin) VALUES (3, 'manager', 'managerpass', false) ON CONFLICT (user_id) DO UPDATE SET username = 'manager', password = 'managerpass', is_admin = false;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (7, 'Grace Lee', '404 Birch St', 'grace.lee@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Grace Lee', address = '404 Birch St', email = 'grace.lee@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, customer_id, amount, transaction_date) VALUES (4, 4, 300.25, '2021-10-18 14:30:00') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 4, amount = 300.25, transaction_date = '2021-10-18 14:30:00';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (8, 'Sam Wilson', '505 Walnut St', 'sam.wilson@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sam Wilson', address = '505 Walnut St', email = 'sam.wilson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO AdminUsers (user_id, username, password, is_admin) VALUES (4, 'staff', 'staffpass', false) ON CONFLICT (user_id) DO UPDATE SET username = 'staff', password = 'staffpass', is_admin = false;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (9, 'Olivia Martinez', '606 Cherry St', 'olivia.martinez@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Olivia Martinez', address = '606 Cherry St', email = 'olivia.martinez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, customer_id, amount, transaction_date) VALUES (5, 5, 250.00, '2021-10-19 16:00:00') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 5, amount = 250.00, transaction_date = '2021-10-19 16:00:00';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, address, email) VALUES (10, 'Max Roberts', '707 Pineapple St', 'max.roberts@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Max Roberts', address = '707 Pineapple St', email = 'max.roberts@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO AdminUsers (user_id, username, password, is_admin) VALUES (5, 'analyst', 'analystpass', false) ON CONFLICT (user_id) DO UPDATE SET username = 'analyst', password = 'analystpass', is_admin = false;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, transaction_date, transaction_amount, customer_id) VALUES (1, '2022-01-01', 100.00, 1) ON CONFLICT (transaction_id) DO UPDATE SET transaction_date = '2022-01-01', transaction_amount = 100.00, customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_cards (card_number, card_holder_name, expiry_date, cvv, customer_id) VALUES ('1234567890123456', 'John Doe', '2023-01-01', '123', 1) ON CONFLICT (card_number) DO UPDATE SET card_holder_name = 'John Doe', expiry_date = '2023-01-01', cvv = '123', customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO login_credentials (username, password, customer_id) VALUES ('johndoe', 'password123', 1) ON CONFLICT (username) DO UPDATE SET password = 'password123', customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, log_date, action, customer_id) VALUES (1, '2022-01-01 12:00:00', 'login', 1) ON CONFLICT (log_id) DO UPDATE SET log_date = '2022-01-01 12:00:00', action = 'login', customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (2, 'Alice Smith', 'alice.smith@example.com', '234-567-8901') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Smith', customer_email = 'alice.smith@example.com', customer_phone = '234-567-8901';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, transaction_date, transaction_amount, customer_id) VALUES (2, '2022-01-02', 200.00, 2) ON CONFLICT (transaction_id) DO UPDATE SET transaction_date = '2022-01-02', transaction_amount = 200.00, customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_cards (card_number, card_holder_name, expiry_date, cvv, customer_id) VALUES ('2345678901234567', 'Alice Smith', '2024-01-01', '456', 2) ON CONFLICT (card_number) DO UPDATE SET card_holder_name = 'Alice Smith', expiry_date = '2024-01-01', cvv = '456', customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO login_credentials (username, password, customer_id) VALUES ('alicesmith', 'password456', 2) ON CONFLICT (username) DO UPDATE SET password = 'password456', customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, log_date, action, customer_id) VALUES (2, '2022-01-02 12:00:00', 'login', 2) ON CONFLICT (log_id) DO UPDATE SET log_date = '2022-01-02 12:00:00', action = 'login', customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (3, 'Bob Johnson', 'bob.johnson@example.com', '345-678-9012') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob Johnson', customer_email = 'bob.johnson@example.com', customer_phone = '345-678-9012';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, transaction_date, transaction_amount, customer_id) VALUES (3, '2022-01-03', 300.00, 3) ON CONFLICT (transaction_id) DO UPDATE SET transaction_date = '2022-01-03', transaction_amount = 300.00, customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_cards (card_number, card_holder_name, expiry_date, cvv, customer_id) VALUES ('3456789012345678', 'Bob Johnson', '2025-01-01', '789', 3) ON CONFLICT (card_number) DO UPDATE SET card_holder_name = 'Bob Johnson', expiry_date = '2025-01-01', cvv = '789', customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO login_credentials (username, password, customer_id) VALUES ('bobjohnson', 'password789', 3) ON CONFLICT (username) DO UPDATE SET password = 'password789', customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, log_date, action, customer_id) VALUES (3, '2022-01-03 12:00:00', 'login', 3) ON CONFLICT (log_id) DO UPDATE SET log_date = '2022-01-03 12:00:00', action = 'login', customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (4, 'Emily Davis', 'emily.davis@example.com', '456-789-0123') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emily Davis', customer_email = 'emily.davis@example.com', customer_phone = '456-789-0123';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, transaction_date, transaction_amount, customer_id) VALUES (4, '2022-01-04', 400.00, 4) ON CONFLICT (transaction_id) DO UPDATE SET transaction_date = '2022-01-04', transaction_amount = 400.00, customer_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_cards (card_number, card_holder_name, expiry_date, cvv, customer_id) VALUES ('4567890123456789', 'Emily Davis', '2026-01-01', '012', 4) ON CONFLICT (card_number) DO UPDATE SET card_holder_name = 'Emily Davis', expiry_date = '2026-01-01', cvv = '012', customer_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO login_credentials (username, password, customer_id) VALUES ('emilydavis', 'password012', 4) ON CONFLICT (username) DO UPDATE SET password = 'password012', customer_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, log_date, action, customer_id) VALUES (4, '2022-01-04 12:00:00', 'login', 4) ON CONFLICT (log_id) DO UPDATE SET log_date = '2022-01-04 12:00:00', action = 'login', customer_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (customer_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, customer_email = EXCLUDED.customer_email, customer_phone = EXCLUDED.customer_phone;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, transaction_date, transaction_amount, customer_id) VALUES (1, '2022-01-01', 100.00, 1) ON CONFLICT (transaction_id) DO UPDATE SET transaction_date = EXCLUDED.transaction_date, transaction_amount = EXCLUDED.transaction_amount;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_cards (card_number, card_holder_name, expiry_date, cvv, customer_id) VALUES ('1234567890123456', 'John Doe', '2023-01-01', '123', 1) ON CONFLICT (card_number) DO UPDATE SET card_holder_name = EXCLUDED.card_holder_name, expiry_date = EXCLUDED.expiry_date, cvv = EXCLUDED.cvv;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO login_credentials (username, password, customer_id) VALUES ('johndoe', 'password123', 1) ON CONFLICT (username) DO UPDATE SET password = EXCLUDED.password;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, log_date, action, customer_id) VALUES (1, CURRENT_TIMESTAMP, 'Login', 1) ON CONFLICT (log_id) DO UPDATE SET log_date = EXCLUDED.log_date, action = EXCLUDED.action;"
]