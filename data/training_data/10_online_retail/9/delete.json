[
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nDELETE FROM customer_data WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nDELETE FROM customer_data WHERE customer_email = 'example@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nDELETE FROM customer_data WHERE credit_card_number = '1234567890123456';",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nDELETE FROM customer_data WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nDELETE FROM customer_data WHERE customer_name LIKE '%John Doe%';",
  "### TABLEDATA\n\nCREATE TABLE customer_data (   customer_id INT PRIMARY KEY,   customer_name VARCHAR(50),   customer_email VARCHAR(100) NOT NULL,   customer_phone VARCHAR(15),   customer_address TEXT,   credit_card_number VARCHAR(16) NOT NULL,   expiry_date DATE NOT NULL,   cvv INT NOT NULL,   account_balance DECIMAL(10, 2) NOT NULL );\n\n### STATEMENT\n\nDELETE FROM customer_data WHERE credit_card_number = '1234567890123456';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nDELETE FROM customers WHERE customer_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nDELETE FROM transactions WHERE transaction_id = 2001;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nDELETE FROM customers WHERE phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nDELETE FROM transactions WHERE amount > 1000",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nDELETE FROM customers WHERE customer_id IN (SELECT customer_id FROM transactions WHERE amount > 100)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    description VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nDELETE FROM customers WHERE customer_id IN (SELECT customer_id FROM transactions WHERE transaction_date < '2022-01-01')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nDELETE FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nDELETE FROM transactions WHERE transaction_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nDELETE FROM access_logs WHERE log_id = 50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nDELETE FROM customers WHERE registration_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nDELETE FROM transactions WHERE amount <= 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  email VARCHAR(100) UNIQUE,\n  password_hash VARCHAR(100),\n  registration_date DATE\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE access_logs (\n  log_id INT PRIMARY KEY,\n  customer_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_resource VARCHAR(100),\n  access_type VARCHAR(50),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nDELETE FROM access_logs WHERE access_type = 'admin' AND accessed_resource LIKE 'customer_%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM Customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM Transactions WHERE transaction_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM SecurityLogs WHERE log_id = 50;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM Customers WHERE customer_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM Transactions WHERE transaction_id IN (SELECT transaction_id FROM Transactions WHERE amount > 1000);",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n   customer_id INT PRIMARY KEY,\n   customer_name VARCHAR(50),\n   address VARCHAR(100),\n   email VARCHAR(50)\n);\n\n\nCREATE TABLE Transactions (\n   transaction_id INT PRIMARY KEY,\n   customer_id INT,\n   amount DECIMAL(10, 2),\n   transaction_date TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE SecurityLogs (\n   log_id INT PRIMARY KEY,\n   customer_id INT,\n   log_details TEXT,\n   log_timestamp TIMESTAMP,\n   FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n\nCREATE TABLE AdminUsers (\n   user_id INT PRIMARY KEY,\n   username VARCHAR(50) UNIQUE,\n   password VARCHAR(100),\n   is_admin BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM SecurityLogs WHERE log_timestamp < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nDELETE FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nDELETE FROM transactions WHERE transaction_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nDELETE FROM credit_cards WHERE card_number = '1234567890123456';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nDELETE FROM transactions WHERE transaction_id = 12345;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nDELETE FROM credit_cards WHERE card_number = '1234567890123456';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_cards (\n    card_number VARCHAR(16) PRIMARY KEY,\n    card_holder_name VARCHAR(50),\n    expiry_date DATE,\n    cvv VARCHAR(3),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\nCREATE TABLE login_credentials (\n    username VARCHAR(50) PRIMARY KEY,\n    password VARCHAR(50),\n    customer_id INT UNIQUE REFERENCES customers(customer_id)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    log_date TIMESTAMP,\n    action VARCHAR(50),\n    customer_id INT REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nDELETE FROM login_credentials WHERE username = 'john_doe';"
]