[
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product A', 100, 20) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 100, reorder_point = 20;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product B', 150, 30) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 150, reorder_point = 30;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product C', 200, 40) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 200, reorder_point = 40;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product D', 120, 25) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 120, reorder_point = 25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product E', 180, 35) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 180, reorder_point = 35;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product F', 90, 18) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 90, reorder_point = 18;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product G', 110, 22) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 110, reorder_point = 22;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product H', 160, 28) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 160, reorder_point = 28;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product I', 130, 26) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 130, reorder_point = 26;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product J', 170, 32) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 170, reorder_point = 32;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product K', 95, 19) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 95, reorder_point = 19;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product L', 125, 24) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 125, reorder_point = 24;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product M', 140, 28) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 140, reorder_point = 28;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product N', 155, 31) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 155, reorder_point = 31;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product O', 115, 23) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 115, reorder_point = 23;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product P', 185, 37) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 185, reorder_point = 37;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product Q', 105, 21) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 105, reorder_point = 21;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product R', 145, 29) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 145, reorder_point = 29;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product S', 135, 27) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 135, reorder_point = 27;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name,quantity_in_stock,reorder_point) VALUES ('Product T', 165, 33) ON CONFLICT (product_name) DO UPDATE SET quantity_in_stock = 165, reorder_point = 33;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (1, 'Product A', 100, 20) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', quantity_in_stock = 120, reorder_point = 30;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (2, 'Product B', 50, 10) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product B', quantity_in_stock = 60, reorder_point = 15;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (3, 'Product C', 75, 15) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product C', quantity_in_stock = 90, reorder_point = 18;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (4, 'Product D', 200, 30) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product D', quantity_in_stock = 240, reorder_point = 36;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (5, 'Product E', 80, 16) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product E', quantity_in_stock = 96, reorder_point = 19;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (6, 'Product F', 150, 25) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product F', quantity_in_stock = 180, reorder_point = 27;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (7, 'Product G', 90, 18) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product G', quantity_in_stock = 108, reorder_point = 21;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (8, 'Product H', 120, 20) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product H', quantity_in_stock = 144, reorder_point = 24;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (9, 'Product I', 100, 20) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product I', quantity_in_stock = 120, reorder_point = 24;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (10, 'Product J', 70, 14) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product J', quantity_in_stock = 84, reorder_point = 16;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (11, 'Product K', 180, 30) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product K', quantity_in_stock = 216, reorder_point = 36;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (12, 'Product L', 60, 12) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product L', quantity_in_stock = 72, reorder_point = 14;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (13, 'Product M', 130, 26) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product M', quantity_in_stock = 156, reorder_point = 29;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (14, 'Product N', 110, 22) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product N', quantity_in_stock = 132, reorder_point = 25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (15, 'Product O', 140, 28) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product O', quantity_in_stock = 168, reorder_point = 30;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (16, 'Product P', 90, 18) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product P', quantity_in_stock = 108, reorder_point = 20;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (17, 'Product Q', 170, 34) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product Q', quantity_in_stock = 204, reorder_point = 36;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (18, 'Product R', 80, 16) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product R', quantity_in_stock = 96, reorder_point = 18;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (19, 'Product S', 120, 24) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product S', quantity_in_stock = 144, reorder_point = 26;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, quantity_in_stock, reorder_point) VALUES (20, 'Product T', 100, 20) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product T', quantity_in_stock = 120, reorder_point = 22;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (1, 'Product 1', 100, 20) ON DUPLICATE KEY UPDATE product_name='Product 1', current_stock=100, reorder_point=20;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (2, 'Product 2', 150, 30) ON DUPLICATE KEY UPDATE product_name='Product 2', current_stock=150, reorder_point=30;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (3, 'Product 3', 120, 25) ON DUPLICATE KEY UPDATE product_name='Product 3', current_stock=120, reorder_point=25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (4, 'Product 4', 75, 15) ON DUPLICATE KEY UPDATE product_name='Product 4', current_stock=75, reorder_point=15;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (5, 'Product 5', 200, 40) ON DUPLICATE KEY UPDATE product_name='Product 5', current_stock=200, reorder_point=40;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (6, 'Product 6', 80, 10) ON DUPLICATE KEY UPDATE product_name='Product 6', current_stock=80, reorder_point=10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (7, 'Product 7', 110, 22) ON DUPLICATE KEY UPDATE product_name='Product 7', current_stock=110, reorder_point=22;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (8, 'Product 8', 90, 18) ON DUPLICATE KEY UPDATE product_name='Product 8', current_stock=90, reorder_point=18;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (9, 'Product 9', 130, 26) ON DUPLICATE KEY UPDATE product_name='Product 9', current_stock=130, reorder_point=26;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (10, 'Product 10', 70, 14) ON DUPLICATE KEY UPDATE product_name='Product 10', current_stock=70, reorder_point=14;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (11, 'Product 11', 180, 36) ON DUPLICATE KEY UPDATE product_name='Product 11', current_stock=180, reorder_point=36;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (12, 'Product 12', 160, 32) ON DUPLICATE KEY UPDATE product_name='Product 12', current_stock=160, reorder_point=32;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (13, 'Product 13', 140, 28) ON DUPLICATE KEY UPDATE product_name='Product 13', current_stock=140, reorder_point=28;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (14, 'Product 14', 100, 20) ON DUPLICATE KEY UPDATE product_name='Product 14', current_stock=100, reorder_point=20;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (15, 'Product 15', 90, 18) ON DUPLICATE KEY UPDATE product_name='Product 15', current_stock=90, reorder_point=18;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (16, 'Product 16', 120, 24) ON DUPLICATE KEY UPDATE product_name='Product 16', current_stock=120, reorder_point=24;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (17, 'Product 17', 200, 40) ON DUPLICATE KEY UPDATE product_name='Product 17', current_stock=200, reorder_point=40;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (18, 'Product 18', 110, 22) ON DUPLICATE KEY UPDATE product_name='Product 18', current_stock=110, reorder_point=22;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (19, 'Product 19', 130, 26) ON DUPLICATE KEY UPDATE product_name='Product 19', current_stock=130, reorder_point=26;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (20, 'Product 20', 150, 30) ON DUPLICATE KEY UPDATE product_name='Product 20', current_stock=150, reorder_point=30;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (1, 'Product A', 100, 10)\nON CONFLICT (product_id) DO UPDATE SET current_stock = current_stock + EXCLUDED.current_stock, reorder_point = EXCLUDED.reorder_point;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (2, 'Product B', 150, 20)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock, reorder_point = EXCLUDED.reorder_point;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (3, 'Product C', 200, 30)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock * 2, reorder_point = EXCLUDED.reorder_point + 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (4, 'Product D', 300, 40)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock - 50, reorder_point = EXCLUDED.reorder_point - 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (5, 'Product E', 250, 25)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock / 2, reorder_point = EXCLUDED.reorder_point * 2;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (6, 'Product F', 180, 18)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock + 20, reorder_point = EXCLUDED.reorder_point - 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (7, 'Product G', 120, 12)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock * 1.5, reorder_point = EXCLUDED.reorder_point * 1.5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (8, 'Product H', 270, 27)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock / 3, reorder_point = EXCLUDED.reorder_point + 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (9, 'Product I', 350, 35)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock + 30, reorder_point = EXCLUDED.reorder_point - 15;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (10, 'Product J', 230, 23)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock * 1.2, reorder_point = EXCLUDED.reorder_point;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (11, 'Product K', 180, 18)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock + 25, reorder_point = EXCLUDED.reorder_point + 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (12, 'Product L', 300, 30)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock - 40, reorder_point = EXCLUDED.reorder_point - 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (13, 'Product M', 250, 25)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock * 1.1, reorder_point = EXCLUDED.reorder_point * 1.1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (14, 'Product N', 120, 12)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock / 1.5, reorder_point = EXCLUDED.reorder_point / 2;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (15, 'Product O', 290, 29)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock + 15, reorder_point = EXCLUDED.reorder_point - 3;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (16, 'Product P', 210, 21)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock - 20, reorder_point = EXCLUDED.reorder_point + 4;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (17, 'Product Q', 280, 28)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock * 0.8, reorder_point = EXCLUDED.reorder_point;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (18, 'Product R', 330, 33)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock / 1.2, reorder_point = EXCLUDED.reorder_point * 1.2;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (19, 'Product S', 190, 19)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock + 50, reorder_point = EXCLUDED.reorder_point + 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, current_stock, reorder_point) VALUES (20, 'Product T', 260, 26)\nON CONFLICT (product_id) DO UPDATE SET current_stock = EXCLUDED.current_stock - 25, reorder_point = EXCLUDED.reorder_point - 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (1, 'Product A', 100, 25.50) ON DUPLICATE KEY UPDATE quantity = 100, price = 25.50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (2, 'Product B', 150, 30.75) ON DUPLICATE KEY UPDATE quantity = 150, price = 30.75;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (3, 'Product C', 120, 20.00) ON DUPLICATE KEY UPDATE quantity = 120, price = 20.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (4, 'Product D', 200, 50.00) ON DUPLICATE KEY UPDATE quantity = 200, price = 50.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (5, 'Product E', 90, 15.75) ON DUPLICATE KEY UPDATE quantity = 90, price = 15.75;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (6, 'Product F', 180, 40.25) ON DUPLICATE KEY UPDATE quantity = 180, price = 40.25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (7, 'Product G', 150, 35.50) ON DUPLICATE KEY UPDATE quantity = 150, price = 35.50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (8, 'Product H', 120, 29.99) ON DUPLICATE KEY UPDATE quantity = 120, price = 29.99;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (9, 'Product I', 250, 60.00) ON DUPLICATE KEY UPDATE quantity = 250, price = 60.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (10, 'Product J', 80, 10.50) ON DUPLICATE KEY UPDATE quantity = 80, price = 10.50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (1, 'Warehouse A', 50) ON DUPLICATE KEY UPDATE quantity = 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (2, 'Warehouse B', 75) ON DUPLICATE KEY UPDATE quantity = 75;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (3, 'Warehouse C', 60) ON DUPLICATE KEY UPDATE quantity = 60;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (4, 'Warehouse D', 100) ON DUPLICATE KEY UPDATE quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (5, 'Warehouse E', 45) ON DUPLICATE KEY UPDATE quantity = 45;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (6, 'Warehouse F', 90) ON DUPLICATE KEY UPDATE quantity = 90;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (7, 'Warehouse G', 75) ON DUPLICATE KEY UPDATE quantity = 75;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (8, 'Warehouse H', 60) ON DUPLICATE KEY UPDATE quantity = 60;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (9, 'Warehouse I', 125) ON DUPLICATE KEY UPDATE quantity = 125;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (10, 'Warehouse J', 40) ON DUPLICATE KEY UPDATE quantity = 40;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, quantity, order_date) VALUES (1, 1, 10, '2022-01-10 08:00:00') ON DUPLICATE KEY UPDATE quantity = 10, order_date = '2022-01-10 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, quantity, order_date) VALUES (2, 2, 15, '2022-01-15 12:30:00') ON DUPLICATE KEY UPDATE quantity = 15, order_date = '2022-01-15 12:30:00';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, quantity, order_date) VALUES (3, 3, 12, '2022-01-20 10:45:00') ON DUPLICATE KEY UPDATE quantity = 12, order_date = '2022-01-20 10:45:00';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, quantity, order_date) VALUES (4, 4, 20, '2022-01-25 14:00:00') ON DUPLICATE KEY UPDATE quantity = 20, order_date = '2022-01-25 14:00:00';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, quantity, order_date) VALUES (5, 5, 9, '2022-01-30 09:15:00') ON DUPLICATE KEY UPDATE quantity = 9, order_date = '2022-01-30 09:15:00';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (1, 'Product A', 100, 25.00) ON DUPLICATE KEY UPDATE quantity = quantity + 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (2, 'Product B', 50, 50.00) ON DUPLICATE KEY UPDATE price = price * 1.1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (3, 'Product C', 75, 100.00) ON DUPLICATE KEY UPDATE quantity = quantity - 10, price = price * 1.05;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (1, 'Location 1', 50) ON DUPLICATE KEY UPDATE quantity = quantity + 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (2, 'Location 2', 25) ON DUPLICATE KEY UPDATE quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (3, 'Location 3', 30) ON DUPLICATE KEY UPDATE location = 'New Location', quantity = 30;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, quantity, order_date) VALUES (1, 1, 10, NOW()) ON DUPLICATE KEY UPDATE quantity = quantity + 10, order_date = NOW();",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, quantity, order_date) VALUES (2, 2, 5, NOW()) ON DUPLICATE KEY UPDATE quantity = quantity * 2, order_date = NOW();",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, quantity, order_date) VALUES (3, 3, 20, NOW()) ON DUPLICATE KEY UPDATE quantity = quantity + 20, order_date = NOW();",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (4, 'Product D', 60, 75.00) ON DUPLICATE KEY UPDATE quantity = quantity * 2, price = price + 10.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (5, 'Product E', 40, 120.00) ON DUPLICATE KEY UPDATE quantity = quantity - 5, price = price / 1.1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (6, 'Product F', 90, 200.00) ON DUPLICATE KEY UPDATE quantity = quantity + 10, price = price - 20.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (4, 'Location 4', 20) ON DUPLICATE KEY UPDATE quantity = quantity * 3;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (5, 'Location 5', 15) ON DUPLICATE KEY UPDATE location = 'Updated Location', quantity = 15;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO inventory (product_id, location, quantity) VALUES (6, 'Location 6', 10) ON DUPLICATE KEY UPDATE quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, quantity, order_date) VALUES (4, 4, 8, NOW()) ON DUPLICATE KEY UPDATE quantity = quantity - 2, order_date = NOW();",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, quantity, order_date) VALUES (5, 5, 12, NOW()) ON DUPLICATE KEY UPDATE quantity = quantity + 5, order_date = NOW();",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, quantity, order_date) VALUES (6, 6, 25, NOW()) ON DUPLICATE KEY UPDATE quantity = quantity * 3, order_date = NOW();",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (7, 'Product G', 70, 150.00) ON DUPLICATE KEY UPDATE quantity = quantity - 15, price = price * 1.2;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, quantity, price) VALUES (8, 'Product H', 55, 100.00) ON DUPLICATE KEY UPDATE quantity = quantity + 20, price = price + 5.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, quantity_in_stock, reorder_threshold) VALUES (1, 'Product A', 100, 20)",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, quantity_in_stock, reorder_threshold) VALUES (2, 'Product B', 50, 10)",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, supplier_contact_info) VALUES (1, 'Supplier X', 'contact@supplierx.com')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, supplier_contact_info) VALUES (2, 'Supplier Y', 'contact@suppliery.com')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_quantity, order_date) VALUES (1, 1, 10, '2022-09-15')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_quantity, order_date) VALUES (2, 2, 5, '2022-09-16')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stockouts (stockout_id, product_id, stockout_date) VALUES (1, 1, '2022-09-20')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stockouts (stockout_id, product_id, stockout_date) VALUES (2, 2, '2022-09-22')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, quantity_in_stock, reorder_threshold) VALUES (3, 'Product C', 75, 15)",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, quantity_in_stock, reorder_threshold) VALUES (4, 'Product D', 60, 12)",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, supplier_contact_info) VALUES (3, 'Supplier Z', 'contact@supplierz.com')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, supplier_contact_info) VALUES (4, 'Supplier W', 'contact@supplierw.com')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_quantity, order_date) VALUES (3, 3, 8, '2022-09-18')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_quantity, order_date) VALUES (4, 4, 7, '2022-09-21')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stockouts (stockout_id, product_id, stockout_date) VALUES (3, 3, '2022-09-25')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stockouts (stockout_id, product_id, stockout_date) VALUES (4, 4, '2022-09-28')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, quantity_in_stock, reorder_threshold) VALUES (5, 'Product E', 80, 18)",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, quantity_in_stock, reorder_threshold) VALUES (6, 'Product F', 70, 14)",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, supplier_contact_info) VALUES (5, 'Supplier M', 'contact@supplierm.com')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, supplier_contact_info) VALUES (6, 'Supplier N', 'contact@suppliern.com')",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, quantity_in_stock, reorder_threshold) VALUES (1, 'Product A', 100, 20) ON DUPLICATE KEY UPDATE product_name='Product A', quantity_in_stock=100, reorder_threshold=20;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, quantity_in_stock, reorder_threshold) VALUES (2, 'Product B', 50, 10) ON DUPLICATE KEY UPDATE product_name='Product B', quantity_in_stock=50, reorder_threshold=10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, quantity_in_stock, reorder_threshold) VALUES (3, 'Product C', 200, 30) ON DUPLICATE KEY UPDATE product_name='Product C', quantity_in_stock=200, reorder_threshold=30;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, quantity_in_stock, reorder_threshold) VALUES (4, 'Product D', 75, 15) ON DUPLICATE KEY UPDATE product_name='Product D', quantity_in_stock=75, reorder_threshold=15;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, quantity_in_stock, reorder_threshold) VALUES (5, 'Product E', 120, 25) ON DUPLICATE KEY UPDATE product_name='Product E', quantity_in_stock=120, reorder_threshold=25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, supplier_contact_info) VALUES (1, 'Supplier X', '123-456-7890') ON DUPLICATE KEY UPDATE supplier_name='Supplier X', supplier_contact_info='123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, supplier_contact_info) VALUES (2, 'Supplier Y', '456-789-0123') ON DUPLICATE KEY UPDATE supplier_name='Supplier Y', supplier_contact_info='456-789-0123';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO suppliers (supplier_id, supplier_name, supplier_contact_info) VALUES (3, 'Supplier Z', '789-012-3456') ON DUPLICATE KEY UPDATE supplier_name='Supplier Z', supplier_contact_info='789-012-3456';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_quantity, order_date) VALUES (1, 1, 20, '2022-11-10') ON DUPLICATE KEY UPDATE product_id=1, order_quantity=20, order_date='2022-11-10';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_quantity, order_date) VALUES (2, 2, 30, '2022-11-15') ON DUPLICATE KEY UPDATE product_id=2, order_quantity=30, order_date='2022-11-15';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_quantity, order_date) VALUES (3, 1, 10, '2022-11-20') ON DUPLICATE KEY UPDATE product_id=1, order_quantity=10, order_date='2022-11-20';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_quantity, order_date) VALUES (4, 3, 50, '2022-11-25') ON DUPLICATE KEY UPDATE product_id=3, order_quantity=50, order_date='2022-11-25';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, product_id, order_quantity, order_date) VALUES (5, 2, 25, '2022-11-30') ON DUPLICATE KEY UPDATE product_id=2, order_quantity=25, order_date='2022-11-30';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stockouts (stockout_id, product_id, stockout_date) VALUES (1, 1, '2022-11-05') ON DUPLICATE KEY UPDATE product_id=1, stockout_date='2022-11-05';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stockouts (stockout_id, product_id, stockout_date) VALUES (2, 3, '2022-11-10') ON DUPLICATE KEY UPDATE product_id=3, stockout_date='2022-11-10';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stockouts (stockout_id, product_id, stockout_date) VALUES (3, 2, '2022-11-15') ON DUPLICATE KEY UPDATE product_id=2, stockout_date='2022-11-15';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stockouts (stockout_id, product_id, stockout_date) VALUES (4, 1, '2022-11-20') ON DUPLICATE KEY UPDATE product_id=1, stockout_date='2022-11-20';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nUPSERT INTO stockouts (stockout_id, product_id, stockout_date) VALUES (5, 3, '2022-11-25') ON DUPLICATE KEY UPDATE product_id=3, stockout_date='2022-11-25';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Products (product_id, product_name, stock_level, reorder_level) VALUES (1, 'Product A', 100, 10) ON DUPLICATE KEY UPDATE product_name = 'Product A', stock_level = 100, reorder_level = 10;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Suppliers (supplier_id, supplier_name, contact_name, contact_email) VALUES (1, 'Supplier X', 'John Doe', 'john.doe@supplierx.com') ON DUPLICATE KEY UPDATE supplier_name = 'Supplier X', contact_name = 'John Doe', contact_email = 'john.doe@supplierx.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Orders (order_id, product_id, order_date, quantity, status) VALUES (1, 1, '2022-10-01', 50, 'Pending') ON DUPLICATE KEY UPDATE product_id = 1, order_date = '2022-10-01', quantity = 50, status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Customers (customer_id, customer_name, contact_number, address) VALUES (1, 'Customer 1', '123-456-7890', '123 Main St.') ON DUPLICATE KEY UPDATE customer_name = 'Customer 1', contact_number = '123-456-7890', address = '123 Main St.';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO ReorderHistory (history_id, product_id, reorder_date, quantity_ordered, supplier_id) VALUES (1, 1, '2022-09-15', 20, 1) ON DUPLICATE KEY UPDATE product_id = 1, reorder_date = '2022-09-15', quantity_ordered = 20, supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Products (product_id, product_name, stock_level, reorder_level) VALUES (2, 'Product B', 150, 20) ON DUPLICATE KEY UPDATE product_name = 'Product B', stock_level = 150, reorder_level = 20;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Suppliers (supplier_id, supplier_name, contact_name, contact_email) VALUES (2, 'Supplier Y', 'Jane Smith', 'jane.smith@suppliery.com') ON DUPLICATE KEY UPDATE supplier_name = 'Supplier Y', contact_name = 'Jane Smith', contact_email = 'jane.smith@suppliery.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Orders (order_id, product_id, order_date, quantity, status) VALUES (2, 2, '2022-10-05', 100, 'Shipped') ON DUPLICATE KEY UPDATE product_id = 2, order_date = '2022-10-05', quantity = 100, status = 'Shipped';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Customers (customer_id, customer_name, contact_number, address) VALUES (2, 'Customer 2', '456-789-0123', '456 Elm St.') ON DUPLICATE KEY UPDATE customer_name = 'Customer 2', contact_number = '456-789-0123', address = '456 Elm St.';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO ReorderHistory (history_id, product_id, reorder_date, quantity_ordered, supplier_id) VALUES (2, 2, '2022-09-20', 30, 2) ON DUPLICATE KEY UPDATE product_id = 2, reorder_date = '2022-09-20', quantity_ordered = 30, supplier_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Products (product_id, product_name, stock_level, reorder_level) VALUES (3, 'Product C', 200, 30) ON DUPLICATE KEY UPDATE product_name = 'Product C', stock_level = 200, reorder_level = 30;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Suppliers (supplier_id, supplier_name, contact_name, contact_email) VALUES (3, 'Supplier Z', 'Mark Johnson', 'mark.johnson@supplierz.com') ON DUPLICATE KEY UPDATE supplier_name = 'Supplier Z', contact_name = 'Mark Johnson', contact_email = 'mark.johnson@supplierz.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Orders (order_id, product_id, order_date, quantity, status) VALUES (3, 3, '2022-10-10', 75, 'Delivered') ON DUPLICATE KEY UPDATE product_id = 3, order_date = '2022-10-10', quantity = 75, status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Customers (customer_id, customer_name, contact_number, address) VALUES (3, 'Customer 3', '789-012-3456', '789 Oak St.') ON DUPLICATE KEY UPDATE customer_name = 'Customer 3', contact_number = '789-012-3456', address = '789 Oak St.';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO ReorderHistory (history_id, product_id, reorder_date, quantity_ordered, supplier_id) VALUES (3, 3, '2022-09-25', 40, 3) ON DUPLICATE KEY UPDATE product_id = 3, reorder_date = '2022-09-25', quantity_ordered = 40, supplier_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Products (product_id, product_name, stock_level, reorder_level) VALUES (4, 'Product D', 120, 15) ON DUPLICATE KEY UPDATE product_name = 'Product D', stock_level = 120, reorder_level = 15;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Suppliers (supplier_id, supplier_name, contact_name, contact_email) VALUES (4, 'Supplier W', 'Sarah Brown', 'sarah.brown@supplierw.com') ON DUPLICATE KEY UPDATE supplier_name = 'Supplier W', contact_name = 'Sarah Brown', contact_email = 'sarah.brown@supplierw.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Orders (order_id, product_id, order_date, quantity, status) VALUES (4, 4, '2022-10-15', 90, 'Processing') ON DUPLICATE KEY UPDATE product_id = 4, order_date = '2022-10-15', quantity = 90, status = 'Processing';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO Customers (customer_id, customer_name, contact_number, address) VALUES (4, 'Customer 4', '012-345-6789', '012 Pine St.') ON DUPLICATE KEY UPDATE customer_name = 'Customer 4', contact_number = '012-345-6789', address = '012 Pine St.';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO ReorderHistory (history_id, product_id, reorder_date, quantity_ordered, supplier_id) VALUES (4, 4, '2022-09-30', 50, 4) ON DUPLICATE KEY UPDATE product_id = 4, reorder_date = '2022-09-30', quantity_ordered = 50, supplier_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Products (product_id, product_name, stock_level, reorder_level) VALUES (1, 'Product A', 100, 50) ON DUPLICATE KEY UPDATE stock_level = stock_level + 50, reorder_level = reorder_level + 10;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Suppliers (supplier_id, supplier_name, contact_name, contact_email) VALUES (1, 'Supplier A', 'John Doe', 'john.doe@suppliera.com') ON DUPLICATE KEY UPDATE contact_name = 'Jane Smith', contact_email = 'jane.smith@suppliera.com';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, product_id, order_date, quantity, status) VALUES (1, 1, '2022-10-10', 50, 'Pending') ON DUPLICATE KEY UPDATE quantity = quantity + 10, status = 'Fulfilled';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, contact_number, address) VALUES (1, 'Customer A', '123-456-7890', '123 Main St') ON DUPLICATE KEY UPDATE contact_number = '987-654-3210', address = '456 Elm St';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nINSERT INTO ReorderHistory (history_id, product_id, reorder_date, quantity_ordered, supplier_id) VALUES (1, 1, '2022-10-05', 20, 1) ON DUPLICATE KEY UPDATE quantity_ordered = quantity_ordered + 5;"
]