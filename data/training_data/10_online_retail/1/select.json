[
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity_in_stock FROM products WHERE quantity_in_stock > 0;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE quantity_in_stock < reorder_point;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM products WHERE product_name LIKE 'Apple%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_name = 'Banana';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity_in_stock FROM products ORDER BY quantity_in_stock DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, reorder_point FROM products ORDER BY product_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock, reorder_point FROM products WHERE quantity_in_stock < reorder_point;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(quantity_in_stock) AS average_quantity_in_stock FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_products FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock FROM products WHERE quantity_in_stock BETWEEN 10 AND 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity_in_stock FROM products WHERE product_name IN ('Apple', 'Banana');",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock FROM products WHERE quantity_in_stock > (SELECT AVG(quantity_in_stock) FROM products);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT product_name) AS unique_products FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock, reorder_point FROM products WHERE product_name LIKE 'P%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock, reorder_point FROM products WHERE product_name = 'Orange' AND quantity_in_stock > 0;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock, reorder_point FROM products WHERE quantity_in_stock = reorder_point;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(quantity_in_stock) AS max_quantity_in_stock FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock FROM products WHERE quantity_in_stock > reorder_point ORDER BY quantity_in_stock DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_name LIKE '%apple%' OR product_name LIKE '%banana%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity_in_stock, reorder_point FROM products WHERE product_id BETWEEN 10 AND 20 AND quantity_in_stock < 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_products FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity_in_stock) AS total_quantity FROM products GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM products ORDER BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity_in_stock * 2 AS double_quantity FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock, reorder_point, CASE WHEN quantity_in_stock < reorder_point THEN 'Need to restock' ELSE 'In stock' END AS stock_status FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(quantity_in_stock) AS avg_quantity FROM products GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock, CASE WHEN quantity_in_stock < 10 THEN 'Low Stock' WHEN quantity_in_stock < 50 THEN 'Medium Stock' ELSE 'High Stock' END AS stock_category FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, LEAST(quantity_in_stock, reorder_point) AS min_stock FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock * reorder_point AS reorder_amount FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock, reorder_point, CASE WHEN reorder_point > quantity_in_stock THEN 'Need to reorder' ELSE 'No need to reorder' END AS reorder_status FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock, reorder_point, (reorder_point - quantity_in_stock) AS reorder_quantity_gap FROM products WHERE quantity_in_stock < reorder_point ORDER BY reorder_quantity_gap DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock, reorder_point, (reorder_point - quantity_in_stock) AS reorder_quantity_gap FROM products WHERE quantity_in_stock < reorder_point ORDER BY reorder_quantity_gap ASC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock, reorder_point, CASE WHEN quantity_in_stock = reorder_point THEN 'At reorder point' WHEN quantity_in_stock < reorder_point THEN 'Below reorder point' ELSE 'Above reorder point' END AS reorder_status FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock, reorder_point, CASE WHEN quantity_in_stock <= 10 THEN 'Critical Stock' WHEN quantity_in_stock <= 50 THEN 'Low Stock' ELSE 'Normal Stock' END AS stock_level FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock, reorder_point, quantity_in_stock + reorder_point AS total_stock FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock, reorder_point, CEILING(quantity_in_stock / reorder_point) AS reorder_cycles FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    quantity_in_stock INT NOT NULL,\n    reorder_point INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock, reorder_point, FLOOR(quantity_in_stock / 10) AS stock_buckets FROM products ORDER BY stock_buckets ASC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, current_stock FROM products WHERE current_stock < reorder_point;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(current_stock) AS avg_stock FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) AS total_quantity FROM orders GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, order_date FROM products JOIN orders ON products.product_id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM products JOIN orders ON products.product_id = orders.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM products JOIN orders ON products.product_id = orders.product_id WHERE order_date > '2021-01-01' GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, order_date, quantity FROM products JOIN orders ON products.product_id = orders.product_id WHERE quantity >= 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, order_date, quantity FROM products JOIN orders ON products.product_id = orders.product_id WHERE quantity BETWEEN 5 AND 15;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(quantity) AS max_quantity FROM products JOIN orders ON products.product_id = orders.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, MIN(quantity) AS min_quantity FROM products JOIN orders ON products.product_id = orders.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(quantity) AS max_quantity, MIN(quantity) AS min_quantity FROM products JOIN orders ON products.product_id = orders.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(order_id) AS total_orders FROM products JOIN orders ON products.product_id = orders.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, order_date FROM products LEFT JOIN orders ON products.product_id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, order_date FROM products RIGHT JOIN orders ON products.product_id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, order_date FROM products INNER JOIN orders ON products.product_id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, order_date FROM products FULL OUTER JOIN orders ON products.product_id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, order_date FROM products LEFT JOIN orders ON products.product_id = orders.product_id WHERE order_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, order_date FROM products RIGHT JOIN orders ON products.product_id = orders.product_id WHERE product_name IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM products WHERE current_stock < reorder_point;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(current_stock) AS max_stock FROM products GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(current_stock) AS total_stock FROM products GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM products WHERE product_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM products WHERE current_stock BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_products FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT order_id, quantity, order_date FROM orders WHERE order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock, quantity FROM products JOIN orders ON products.product_id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM products JOIN orders ON products.product_id = orders.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock, quantity, order_date FROM products JOIN orders ON products.product_id = orders.product_id WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock, order_date FROM products LEFT JOIN orders ON products.product_id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock, order_date FROM products RIGHT JOIN orders ON products.product_id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock, order_date FROM products INNER JOIN orders ON products.product_id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock, order_date FROM products LEFT JOIN orders ON products.product_id = orders.product_id WHERE order_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock, order_date FROM products RIGHT JOIN orders ON products.product_id = orders.product_id WHERE current_stock < quantity;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM products UNION SELECT product_name, quantity FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM products INTERSECT SELECT product_name, quantity FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM products EXCEPT SELECT product_name, quantity FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_point INT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM products ORDER BY current_stock DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, name, quantity FROM products WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE name LIKE '%apple%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, name, quantity FROM products WHERE price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, location, quantity FROM inventory WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT location FROM inventory WHERE product_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) FROM orders GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, order_date FROM orders ORDER BY order_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT order_id, product_id, quantity, order_date FROM orders WHERE order_date >= '2022-01-01' AND order_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT products.name, orders.quantity FROM products JOIN orders ON products.id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT products.name, orders.quantity FROM products LEFT JOIN orders ON products.id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT products.name, orders.quantity FROM products RIGHT JOIN orders ON products.id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT products.name, orders.quantity FROM products JOIN orders ON products.id = orders.product_id WHERE orders.quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT products.name, orders.quantity FROM products JOIN orders ON products.id = orders.product_id WHERE products.quantity < orders.quantity;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT products.name, orders.quantity FROM products JOIN orders ON products.id = orders.product_id WHERE products.price * orders.quantity > 1000;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT products.name, inventory.quantity FROM products JOIN inventory ON products.id = inventory.product_id WHERE inventory.location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, price FROM products WHERE price < 50.00;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE quantity BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, location, quantity FROM inventory WHERE location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT orders.order_id, products.name, orders.quantity FROM orders JOIN products ON orders.product_id = products.id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) AS total_quantity FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(price) AS avg_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) AS total_quantity FROM inventory GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT location, COUNT(product_id) AS product_count FROM inventory GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT orders.order_id, orders.quantity, products.name, products.price FROM orders JOIN products ON orders.product_id = products.id WHERE orders.quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT orders.order_date, products.name, products.price FROM orders JOIN products ON orders.product_id = products.id WHERE orders.order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE id IN (SELECT product_id FROM inventory WHERE location = 'Warehouse');",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM products ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT products.name, inventory.quantity FROM products JOIN inventory ON products.id = inventory.product_id WHERE inventory.quantity > 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT location, AVG(quantity) AS avg_quantity FROM inventory GROUP BY location HAVING AVG(quantity) > 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT orders.order_id, orders.quantity, products.name, orders.order_date FROM orders JOIN products ON orders.product_id = products.id WHERE orders.order_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT products.name, SUM(orders.quantity) AS total_orders FROM products JOIN orders ON products.id = orders.product_id GROUP BY products.name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT products.name, orders.order_date, orders.quantity FROM products LEFT JOIN orders ON products.id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE name LIKE '%shoes%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  quantity INT,\n  price DECIMAL(10, 2)\n);\n\n\nCREATE TABLE inventory (\n  product_id INT,\n  location VARCHAR(50),\n  quantity INT,\n  PRIMARY KEY (product_id, location)\n);\n\n\nCREATE TABLE orders (\n  order_id INT PRIMARY KEY,\n  product_id INT,\n  quantity INT,\n  order_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT location, SUM(quantity) AS total_quantity FROM inventory GROUP BY location HAVING SUM(quantity) > 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM suppliers",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, supplier_contact_info FROM suppliers",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM orders",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity FROM orders",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM stockouts",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT stockout_id, product_id, stockout_date FROM stockouts",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock FROM products WHERE quantity_in_stock < reorder_threshold",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT product_id, order_quantity FROM orders ORDER BY order_quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_id, supplier_name FROM suppliers WHERE supplier_name LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock FROM products WHERE quantity_in_stock > 100",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_date FROM orders WHERE order_date >= '2021-01-01'",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, supplier_contact_info FROM suppliers WHERE supplier_id = 5",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock FROM products WHERE product_name LIKE '%chair%'",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, supplier_contact_info FROM suppliers WHERE supplier_contact_info LIKE '%email%'",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, quantity_in_stock FROM products LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, supplier_contact_info FROM suppliers LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(quantity_in_stock) FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT product_id, product_name FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, supplier_contact_info FROM suppliers",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity FROM orders",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT product_id, stockout_date FROM stockouts",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity_in_stock) AS total_stock FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(*) AS products_supplied FROM suppliers JOIN products ON suppliers.supplier_id = products.product_id GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT order_id, product_name, order_quantity, order_date FROM orders JOIN products ON orders.product_id = products.product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT stockouts.product_id, stockout_date, product_name FROM stockouts JOIN products ON stockouts.product_id = products.product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity_in_stock FROM products WHERE quantity_in_stock < reorder_threshold",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(*) AS total_orders FROM suppliers JOIN orders ON suppliers.supplier_id = orders.product_id GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT order_id, order_date FROM orders WHERE order_quantity > (SELECT AVG(order_quantity) FROM orders)",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, product_name FROM suppliers JOIN products ON suppliers.supplier_id = products.product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM products ORDER BY product_name",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name FROM suppliers WHERE supplier_id IN (SELECT product_id FROM products WHERE quantity_in_stock < reorder_threshold)",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT product_id, product_name FROM products JOIN stockouts ON products.product_id = stockouts.product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(*) AS total_stockouts FROM suppliers JOIN stockouts ON suppliers.supplier_id = stockouts.product_id GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT order_id, order_quantity FROM orders WHERE order_date BETWEEN '2022-01-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity_in_stock INT,\n    reorder_threshold INT\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_contact_info VARCHAR(100)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE stockouts (\n    stockout_id INT PRIMARY KEY,\n    product_id INT,\n    stockout_date DATE\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity_in_stock FROM products WHERE product_id IN (SELECT product_id FROM stockouts)",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT product_id, stock_level FROM Products WHERE stock_level < 10;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM Suppliers;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_email FROM Suppliers;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT order_id, product_id, order_date FROM Orders WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT customer_id, contact_number FROM Customers WHERE customer_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM ReorderHistory WHERE quantity_ordered > 50;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT history_id, product_id, reorder_date FROM ReorderHistory;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM Products WHERE product_name LIKE '%apple%';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_name FROM Suppliers WHERE supplier_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT order_id, status FROM Orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, supplier_name FROM Suppliers;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM ReorderHistory WHERE supplier_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM Products ORDER BY product_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT product_id, stock_level, reorder_level FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT count(*) AS total_products FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT product_name, stock_level FROM Products WHERE stock_level < reorder_level;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_name FROM Suppliers WHERE contact_email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT order_id, order_date, quantity FROM Orders WHERE status='Pending';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM Customers WHERE contact_number LIKE '%-555-%';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM ReorderHistory WHERE quantity_ordered > 100;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT product_name, stock_level, reorder_level FROM Products WHERE stock_level < reorder_level AND product_id IN (SELECT product_id FROM Orders WHERE status='Shipped');",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_name FROM Suppliers WHERE supplier_id IN (SELECT supplier_id FROM ReorderHistory WHERE quantity_ordered > 200);",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM Customers WHERE customer_id IN (SELECT customer_id FROM Orders WHERE order_date BETWEEN '2022-01-01' AND '2022-06-30');",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM Products p JOIN Orders o ON p.product_id = o.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT o.order_id, p.product_name FROM Orders o JOIN Products p ON o.product_id = p.product_id WHERE o.quantity >= 10;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.product_name, o.quantity FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Products p ON o.product_id = p.product_id WHERE o.status='Delivered';",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, SUM(quantity_ordered) AS total_ordered FROM Suppliers s JOIN ReorderHistory r ON s.supplier_id = r.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(order_id) AS total_orders FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id WHERE o.order_date >= '2022-01-01' GROUP BY customer_name HAVING COUNT(order_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT p.product_name, COUNT(r.history_id) AS total_reorders FROM Products p JOIN ReorderHistory r ON p.product_id = r.product_id GROUP BY p.product_name HAVING COUNT(r.history_id) >= 3;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(o.order_id) AS total_orders FROM Orders o JOIN Customers c ON o.customer_id = c.customer_id WHERE o.status='Shipped' GROUP BY c.customer_name ORDER BY total_orders DESC;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, MAX(quantity_ordered) AS highest_quantity FROM Suppliers s JOIN ReorderHistory r ON s.supplier_id = r.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT p.product_name, AVG(reorder_level) AS average_reorder_level FROM Products p JOIN ReorderHistory r ON p.product_id = r.product_id GROUP BY p.product_name;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(o.quantity) AS total_quantity FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id WHERE o.status='Delivered' GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    stock_level INT,\n    reorder_level INT\n);\n\nCREATE TABLE Suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_name VARCHAR(255),\n    contact_email VARCHAR(255)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity INT,\n    status VARCHAR(50)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    address VARCHAR(255)\n);\n\nCREATE TABLE ReorderHistory (\n    history_id INT PRIMARY KEY,\n    product_id INT,\n    reorder_date DATE,\n    quantity_ordered INT,\n    supplier_id INT\n);\n\n### STATEMENT\n\nSELECT supplier_name, MIN(quantity_ordered) AS lowest_quantity FROM Suppliers s JOIN ReorderHistory r ON s.supplier_id = r.supplier_id GROUP BY supplier_name;"
]