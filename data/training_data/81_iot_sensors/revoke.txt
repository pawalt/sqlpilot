<t>CREATE TABLE iot_sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)</t><stat>REVOKE SELECT ON iot_sensors FROM user1</stat><divider><t>CREATE TABLE iot_sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)</t><stat>revoke select on iot_sensors from user1</stat><divider><t>CREATE TABLE iot_sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)</t><stat>REVOKE INSERT, UPDATE ON iot_sensors FROM user2</stat><divider><t>CREATE TABLE iot_sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)</t><stat>revoke insert, update on iot_sensors from user2</stat><divider><t>CREATE TABLE iot_sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)</t><stat>REVOKE ALL PRIVILEGES ON iot_sensors FROM user3</stat><divider><t>CREATE TABLE iot_sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)</t><stat>revoke all privileges on iot_sensors from user3</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id))</t><stat>REVOKE INSERT, UPDATE ON sensors FROM user1</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id))</t><stat>revoke insert, update on sensors from user1</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id))

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)</t><stat>REVOKE INSERT, UPDATE ON sensors FROM user1</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id))

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)</t><stat>revoke insert, update on sensors from user1</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id))</t><stat>REVOKE DELETE ON sensor_data FROM user2</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id))</t><stat>revoke delete on sensor_data from user2</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id))

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)</t><stat>REVOKE DELETE ON sensor_data FROM user2</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id))

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)</t><stat>revoke delete on sensor_data from user2</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id))</t><stat>REVOKE ALL PRIVILEGES ON sensors,sensor_data FROM user3</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id))</t><stat>revoke all privileges on sensors,sensor_data from user3</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id))

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)</t><stat>REVOKE ALL PRIVILEGES ON sensors,sensor_data FROM user3</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id))

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name STRING, location STRING, status STRING)</t><stat>revoke all privileges on sensors,sensor_data from user3</stat><divider><t>CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensors FROM user1;</stat><divider><t>CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on table sensors from user1;</stat><divider><t>CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensors FROM user1;</stat><divider><t>CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{</t><stat>revoke insert, update, delete on table sensors from user1;</stat><divider><t>CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensors FROM user1;</stat><divider><t>CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on table sensors from user1;</stat><divider><t>CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensors FROM user1;</stat><divider><t>CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{</t><stat>revoke insert, update, delete on table sensors from user1;</stat><divider><t>CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensors FROM user1;</stat><divider><t>CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{</t><stat>revoke insert, update, delete on table sensors from user1;</stat><divider><t>CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensors FROM user1;</stat><divider><t>CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{</t><stat>revoke insert, update, delete on table sensors from user1;</stat><divider><t>CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensor_data FROM user2;</stat><divider><t>CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on table sensor_data from user2;</stat><divider><t>CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensor_data FROM user2;</stat><divider><t>CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{</t><stat>revoke insert, update, delete on table sensor_data from user2;</stat><divider><t>CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensor_data FROM user2;</stat><divider><t>CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on table sensor_data from user2;</stat><divider><t>CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensor_data FROM user2;</stat><divider><t>CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{</t><stat>revoke insert, update, delete on table sensor_data from user2;</stat><divider><t>CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensor_data FROM user2;</stat><divider><t>CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{</t><stat>revoke insert, update, delete on table sensor_data from user2;</stat><divider><t>CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensor_data FROM user2;</stat><divider><t>CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{</t><stat>revoke insert, update, delete on table sensor_data from user2;</stat><divider><t>CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensor_logs FROM user3;</stat><divider><t>CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on table sensor_logs from user3;</stat><divider><t>CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensor_logs FROM user3;</stat><divider><t>CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{</t><stat>revoke insert, update, delete on table sensor_logs from user3;</stat><divider><t>CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensor_logs FROM user3;</stat><divider><t>CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on table sensor_logs from user3;</stat><divider><t>CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensor_logs FROM user3;</stat><divider><t>CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{</t><stat>revoke insert, update, delete on table sensor_logs from user3;</stat><divider><t>CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensor_logs FROM user3;</stat><divider><t>CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{</t><stat>revoke insert, update, delete on table sensor_logs from user3;</stat><divider><t>CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE sensor_logs FROM user3;</stat><divider><t>CREATE TABLE sensor_logs (log_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), message TEXT, log_timestamp TIMESTAMP)

CREATE TABLE sensor_data (data_id SERIAL PRIMARY KEY, sensor_id INT REFERENCES sensors(sensor_id), value FLOAT, timestamp TIMESTAMP)},{

CREATE TABLE sensors (sensor_id SERIAL PRIMARY KEY, location VARCHAR(50), type VARCHAR(50), status BOOLEAN)},{</t><stat>revoke insert, update, delete on table sensor_logs from user3;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE SELECT ON sensors TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke select on sensors to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE INSERT, UPDATE ON sensor_data TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke insert, update on sensor_data to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>REVOKE DELETE ON locations TO public;</stat><divider><t>CREATE TABLE alerts (alert_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, alert_message VARCHAR(255), FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, location_name VARCHAR(50));

CREATE TABLE sensor_data (data_id INT PRIMARY KEY, sensor_id INT, timestamp TIMESTAMP, value FLOAT, FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id));

CREATE TABLE sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), location VARCHAR(50), timestamp TIMESTAMP, value FLOAT);</t><stat>revoke delete on locations to public;</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE SELECT, UPDATE ON sensor_data TO user1</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke select, update on sensor_data to user1</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, DELETE ON sensor_location TO user2</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, delete on sensor_location to user2</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))</t><stat>revoke insert, update, delete on sensor_type to user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>REVOKE INSERT, UPDATE, DELETE ON sensor_type TO user3</stat><divider><t>CREATE TABLE sensor_status (status_id INT PRIMARY KEY, sensor_id INT, is_active BOOLEAN)

CREATE TABLE sensor_alerts (alert_id INT PRIMARY KEY, sensor_id INT, alert_message TEXT)

CREATE TABLE sensor_type (type_id INT PRIMARY KEY, type_name VARCHAR(255))

CREATE TABLE sensor_location (sensor_id INT PRIMARY KEY, location VARCHAR(255))

CREATE TABLE sensor_data (sensor_id INT PRIMARY KEY, value FLOAT, timestamp TIMESTAMP)</t><stat>revoke insert, update, delete on sensor_type to user3</stat>