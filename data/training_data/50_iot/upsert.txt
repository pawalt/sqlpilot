<t>CREATE TABLE iot_devices (
    device_id INT PRIMARY KEY,
    device_name TEXT,
    device_location TEXT,
    device_status BOOLEAN
);</t><stat>INSERT INTO iot_devices (device_id, device_name, device_location, device_status) VALUES (1, 'Device 1', 'Location A', true) ON CONFLICT (device_id) DO UPDATE SET device_name = 'Device 1', device_location = 'Location A', device_status = true;</stat><divider><t>CREATE TABLE iot_devices (
    device_id INT PRIMARY KEY,
    device_name TEXT,
    device_location TEXT,
    device_status BOOLEAN
);</t><stat>insert into iot_devices (device_id, device_name, device_location, device_status) values (1, 'device 1', 'location a', true) on conflict (device_id) do update set device_name = 'device 1', device_location = 'location a', device_status = true;</stat><divider><t>CREATE TABLE iot_devices (
    device_id INT PRIMARY KEY,
    device_name TEXT,
    device_location TEXT,
    device_status BOOLEAN
);</t><stat>INSERT INTO iot_devices (device_id, device_name, device_location, device_status) VALUES (2, 'Device 2', 'Location B', false) ON CONFLICT (device_id) DO UPDATE SET device_name = 'Device 2', device_location = 'Location B', device_status = false;</stat><divider><t>CREATE TABLE iot_devices (
    device_id INT PRIMARY KEY,
    device_name TEXT,
    device_location TEXT,
    device_status BOOLEAN
);</t><stat>insert into iot_devices (device_id, device_name, device_location, device_status) values (2, 'device 2', 'location b', false) on conflict (device_id) do update set device_name = 'device 2', device_location = 'location b', device_status = false;</stat><divider><t>CREATE TABLE iot_devices (
    device_id INT PRIMARY KEY,
    device_name TEXT,
    device_location TEXT,
    device_status BOOLEAN
);</t><stat>INSERT INTO iot_devices (device_id, device_name, device_location, device_status) VALUES (3, 'Device 3', 'Location C', true) ON CONFLICT (device_id) DO UPDATE SET device_name = 'Device 3', device_location = 'Location C', device_status = true;</stat><divider><t>CREATE TABLE iot_devices (
    device_id INT PRIMARY KEY,
    device_name TEXT,
    device_location TEXT,
    device_status BOOLEAN
);</t><stat>insert into iot_devices (device_id, device_name, device_location, device_status) values (3, 'device 3', 'location c', true) on conflict (device_id) do update set device_name = 'device 3', device_location = 'location c', device_status = true;</stat><divider><t>CREATE TABLE devices( device_id INT PRIMARY KEY, device_name STRING, device_location STRING );

CREATE TABLE data( data_id INT PRIMARY KEY, device_id INT REFERENCES devices(device_id), data_value STRING, data_timestamp TIMESTAMP );</t><stat>UPSERT INTO devices (device_id, device_name, device_location) VALUES (1, 'Device 1', 'Location 1') ON DUPLICATE KEY UPDATE device_name = 'Device 1', device_location = 'Location 1';</stat><divider><t>CREATE TABLE devices( device_id INT PRIMARY KEY, device_name STRING, device_location STRING );

CREATE TABLE data( data_id INT PRIMARY KEY, device_id INT REFERENCES devices(device_id), data_value STRING, data_timestamp TIMESTAMP );</t><stat>upsert into devices (device_id, device_name, device_location) values (1, 'device 1', 'location 1') on duplicate key update device_name = 'device 1', device_location = 'location 1';</stat><divider><t>CREATE TABLE data( data_id INT PRIMARY KEY, device_id INT REFERENCES devices(device_id), data_value STRING, data_timestamp TIMESTAMP );

CREATE TABLE devices( device_id INT PRIMARY KEY, device_name STRING, device_location STRING );</t><stat>UPSERT INTO devices (device_id, device_name, device_location) VALUES (1, 'Device 1', 'Location 1') ON DUPLICATE KEY UPDATE device_name = 'Device 1', device_location = 'Location 1';</stat><divider><t>CREATE TABLE data( data_id INT PRIMARY KEY, device_id INT REFERENCES devices(device_id), data_value STRING, data_timestamp TIMESTAMP );

CREATE TABLE devices( device_id INT PRIMARY KEY, device_name STRING, device_location STRING );</t><stat>upsert into devices (device_id, device_name, device_location) values (1, 'device 1', 'location 1') on duplicate key update device_name = 'device 1', device_location = 'location 1';</stat><divider><t>CREATE TABLE devices( device_id INT PRIMARY KEY, device_name STRING, device_location STRING );

CREATE TABLE data( data_id INT PRIMARY KEY, device_id INT REFERENCES devices(device_id), data_value STRING, data_timestamp TIMESTAMP );</t><stat>UPSERT INTO devices (device_id, device_name, device_location) VALUES (2, 'Device 2', 'Location 2') ON DUPLICATE KEY UPDATE device_name = 'Device 2', device_location = 'Location 2';</stat><divider><t>CREATE TABLE devices( device_id INT PRIMARY KEY, device_name STRING, device_location STRING );

CREATE TABLE data( data_id INT PRIMARY KEY, device_id INT REFERENCES devices(device_id), data_value STRING, data_timestamp TIMESTAMP );</t><stat>upsert into devices (device_id, device_name, device_location) values (2, 'device 2', 'location 2') on duplicate key update device_name = 'device 2', device_location = 'location 2';</stat><divider><t>CREATE TABLE data( data_id INT PRIMARY KEY, device_id INT REFERENCES devices(device_id), data_value STRING, data_timestamp TIMESTAMP );

CREATE TABLE devices( device_id INT PRIMARY KEY, device_name STRING, device_location STRING );</t><stat>UPSERT INTO devices (device_id, device_name, device_location) VALUES (2, 'Device 2', 'Location 2') ON DUPLICATE KEY UPDATE device_name = 'Device 2', device_location = 'Location 2';</stat><divider><t>CREATE TABLE data( data_id INT PRIMARY KEY, device_id INT REFERENCES devices(device_id), data_value STRING, data_timestamp TIMESTAMP );

CREATE TABLE devices( device_id INT PRIMARY KEY, device_name STRING, device_location STRING );</t><stat>upsert into devices (device_id, device_name, device_location) values (2, 'device 2', 'location 2') on duplicate key update device_name = 'device 2', device_location = 'location 2';</stat><divider><t>CREATE TABLE devices( device_id INT PRIMARY KEY, device_name STRING, device_location STRING );

CREATE TABLE data( data_id INT PRIMARY KEY, device_id INT REFERENCES devices(device_id), data_value STRING, data_timestamp TIMESTAMP );</t><stat>UPSERT INTO data (data_id, device_id, data_value, data_timestamp) VALUES (1, 1, 'Value 1', '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE data_value = 'Value 1', data_timestamp = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE devices( device_id INT PRIMARY KEY, device_name STRING, device_location STRING );

CREATE TABLE data( data_id INT PRIMARY KEY, device_id INT REFERENCES devices(device_id), data_value STRING, data_timestamp TIMESTAMP );</t><stat>upsert into data (data_id, device_id, data_value, data_timestamp) values (1, 1, 'value 1', '2022-01-01 12:00:00') on duplicate key update data_value = 'value 1', data_timestamp = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE data( data_id INT PRIMARY KEY, device_id INT REFERENCES devices(device_id), data_value STRING, data_timestamp TIMESTAMP );

CREATE TABLE devices( device_id INT PRIMARY KEY, device_name STRING, device_location STRING );</t><stat>UPSERT INTO data (data_id, device_id, data_value, data_timestamp) VALUES (1, 1, 'Value 1', '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE data_value = 'Value 1', data_timestamp = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE data( data_id INT PRIMARY KEY, device_id INT REFERENCES devices(device_id), data_value STRING, data_timestamp TIMESTAMP );

CREATE TABLE devices( device_id INT PRIMARY KEY, device_name STRING, device_location STRING );</t><stat>upsert into data (data_id, device_id, data_value, data_timestamp) values (1, 1, 'value 1', '2022-01-01 12:00:00') on duplicate key update data_value = 'value 1', data_timestamp = '2022-01-01 12:00:00';</stat><divider><t>CREATE TABLE IF NOT EXISTS devices (id INTEGER PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), status BOOLEAN)</t><stat>UPSERT INTO devices (id, name, location, status) VALUES (1, 'Device 1', 'Location 1', 1)</stat><divider><t>CREATE TABLE IF NOT EXISTS devices (id INTEGER PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), status BOOLEAN)</t><stat>upsert into devices (id, name, location, status) values (1, 'device 1', 'location 1', 1)</stat><divider><t>CREATE TABLE IF NOT EXISTS devices (id INTEGER PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), status BOOLEAN)</t><stat>UPSERT INTO devices (id, name, location, status) VALUES (2, 'Device 2', 'Location 2', 0)</stat><divider><t>CREATE TABLE IF NOT EXISTS devices (id INTEGER PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), status BOOLEAN)</t><stat>upsert into devices (id, name, location, status) values (2, 'device 2', 'location 2', 0)</stat><divider><t>CREATE TABLE IF NOT EXISTS devices (id INTEGER PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), status BOOLEAN)</t><stat>UPSERT INTO devices (id, name, location, status) VALUES (3, 'Device 3', 'Location 3', 1)</stat><divider><t>CREATE TABLE IF NOT EXISTS devices (id INTEGER PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), status BOOLEAN)</t><stat>upsert into devices (id, name, location, status) values (3, 'device 3', 'location 3', 1)</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Devices (device_id, device_name, device_type) VALUES (1, 'Phone', 'Mobile') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Phone', device_type = 'Mobile';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into devices (device_id, device_name, device_type) values (1, 'phone', 'mobile') on conflict (device_id) do update set device_name = 'phone', device_type = 'mobile';</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Sensors (sensor_id, sensor_name, sensor_type, device_id) VALUES (1, 'Temperature Sensor', 'Temperature', 1) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', device_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into sensors (sensor_id, sensor_name, sensor_type, device_id) values (1, 'temperature sensor', 'temperature', 1) on conflict (sensor_id) do update set sensor_name = 'temperature sensor', sensor_type = 'temperature', device_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>INSERT INTO Readings (reading_id, reading_value, reading_timestamp, sensor_id) VALUES (1, 25.5, '2021-09-27 12:00:00', 1) ON CONFLICT (reading_id) DO UPDATE SET reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(50))

CREATE TABLE Readings (reading_id INT PRIMARY KEY, reading_value FLOAT, reading_timestamp TIMESTAMP, sensor_id INT REFERENCES Sensors(sensor_id))

CREATE TABLE Sensors (sensor_id INT PRIMARY KEY, sensor_name VARCHAR(50), sensor_type VARCHAR(50), device_id INT) REFERENCES Devices(device_id))

CREATE TABLE Devices (device_id INT PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50))</t><stat>insert into readings (reading_id, reading_value, reading_timestamp, sensor_id) values (1, 25.5, '2021-09-27 12:00:00', 1) on conflict (reading_id) do update set reading_value = 25.5, reading_timestamp = '2021-09-27 12:00:00', sensor_id = 1;</stat>