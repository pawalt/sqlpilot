[
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, device_id FROM user_permissions WHERE permission_level = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, device_id, permission_level FROM user_permissions WHERE user_id = '123e4567-e89b-12d3-a456-426655440000';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE device_id = '456e7890-12d3-45a6-bcde-789012345678';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(permission_level) FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(permission_level) FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(permission_level) FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(permission_level) FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT permission_level FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id, device_id FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions ORDER BY user_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions ORDER BY permission_level DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE user_id = '123e4567-e89b-12d3-a456-426655440000' AND permission_level > 2;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE permission_level BETWEEN 1 AND 3;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE permission_level IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE device_id LIKE '456e%';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_count FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions WHERE device_id = '1234';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, device_id, permission_level FROM user_permissions WHERE permission_level > 2;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM user_permissions WHERE permission_level < 3;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE user_id = '1234' AND permission_level = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, device_id FROM user_permissions WHERE device_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions WHERE user_id = '5678' ORDER BY permission_level DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(permission_level) FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions WHERE permission_level BETWEEN 2 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(permission_level) FROM user_permissions WHERE user_id = '5678';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions WHERE device_id IN ('1234', '5678');",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT device_id) FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(permission_level) FROM user_permissions GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(permission_level) FROM user_permissions GROUP BY user_id HAVING AVG(permission_level) > 3;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) FROM user_permissions GROUP BY device_id ORDER BY COUNT(*) DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, device_id, permission_level FROM user_permissions WHERE permission_level <= 3 LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level * 2 AS modified_permission FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, device_id, permission_level FROM user_permissions WHERE device_id = '1234' UNION SELECT user_id, device_id, permission_level FROM user_permissions WHERE device_id = '5678';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID NOT NULL,\n    permission_level INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM user_permissions GROUP BY user_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions WHERE device_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT data_id, data_value FROM device_data;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM device_data WHERE device_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions WHERE permission_level > 2;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM device_data WHERE timestamp > '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions WHERE user_id = '123e4567-e89b-12d3-a456-426614174002';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT data_id, data_value FROM device_data WHERE device_id = '123e4567-e89b-12d3-a456-426614174002';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE device_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions WHERE device_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT data_id, data_value, timestamp FROM device_data WHERE device_id = '123e4567-e89b-12d3-a456-426614174003';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE permission_level = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions WHERE permission_level < 3;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT data_id, data_value FROM device_data WHERE timestamp < '2022-03-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE user_id = '123e4567-e89b-12d3-a456-426614174004';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions WHERE device_id = '123e4567-e89b-12d3-a456-426614174004';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT data_id, data_value FROM device_data WHERE device_id = '123e4567-e89b-12d3-a456-426614174005';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM device_data WHERE timestamp < '2022-05-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions WHERE user_id = '123e4567-e89b-12d3-a456-426614174006';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT data_id, data_value FROM device_data WHERE data_id = '123e4567-e89b-12d3-a456-426614174006';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE user_id = '1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6' AND permission_level > 5",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) FROM user_permissions GROUP BY device_id HAVING COUNT(*) > 3",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT data_id, data_value, timestamp FROM device_data WHERE device_id = '7p8q9r0s-a1b2-c3d4-e5f6-g7h8i9j0k1l' AND timestamp BETWEEN '2022-01-01 08:00:00' AND '2022-01-01 12:00:00'",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level, d.data_id, d.data_value FROM user_permissions AS up INNER JOIN device_data AS d ON up.device_id = d.device_id",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(permission_level) FROM user_permissions GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE permission_level BETWEEN 3 AND 7 AND device_id IN (SELECT device_id FROM device_data WHERE data_value LIKE 'test%')",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT device_id FROM user_permissions",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(permission_level) FROM user_permissions",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(permission_level) FROM user_permissions",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT data_id, MAX(data_value) FROM device_data GROUP BY data_id",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM user_permissions INNER JOIN device_data ON user_permissions.device_id = device_data.device_id GROUP BY user_id HAVING COUNT(*) > 1",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) FROM device_data WHERE timestamp >= CURRENT_TIMESTAMP - INTERVAL '1' DAY GROUP BY device_id",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT permission_level, COUNT(*) FROM user_permissions GROUP BY permission_level",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions ORDER BY permission_level DESC",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE permission_level = (SELECT MAX(permission_level) FROM user_permissions)",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE permission_level = (SELECT MIN(permission_level) FROM user_permissions)",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level, COUNT(*) FROM user_permissions GROUP BY user_id, permission_level HAVING COUNT(*) > 1",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, device_id FROM user_permissions UNION SELECT device_id, device_id FROM device_data",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions WHERE user_id LIKE '%a%'",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions WHERE user_id NOT IN (SELECT user_id FROM user_permissions WHERE permission_level > 5)",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n    user_id UUID PRIMARY KEY,\n    device_id UUID,\n    permission_level INT\n);\n\n\nCREATE TABLE device_data (\n    data_id UUID PRIMARY KEY,\n    device_id UUID,\n    data_value STRING,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) FROM device_data WHERE data_value LIKE 'sensor%' GROUP BY device_id",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT user_id, device_id FROM user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, device_type FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT user_id, device_id, permission_level FROM user_permissions WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, device_location FROM devices WHERE device_type = 'mobile';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE permission_level = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email, password FROM users WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT user_id, device_id, permission_level FROM user_permissions WHERE permission_level = 'write';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT user_id, device_id, device_name, device_location FROM user_permissions JOIN devices ON user_permissions.device_id = devices.device_id;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email, device_name FROM users JOIN user_permissions ON users.user_id = user_permissions.user_id JOIN devices ON user_permissions.device_id = devices.device_id;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT user_id, username, permission_level, device_location FROM users JOIN user_permissions ON users.user_id = user_permissions.user_id JOIN devices ON user_permissions.device_id = devices.device_id WHERE device_location = 'Office';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT user_id, device_id, permission_level FROM user_permissions WHERE device_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE username LIKE 'j%';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users ORDER BY username ASC;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT user_id, device_id, permission_level FROM user_permissions WHERE permission_level IN ('read', 'write');",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM user_permissions WHERE permission_level = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE username LIKE '%john%';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_name FROM devices WHERE device_type = 'mobile' AND device_location = 'home';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM user_permissions WHERE device_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT u.username, d.device_name FROM users u INNER JOIN devices d ON u.user_id = d.device_id;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT u.username, COUNT(dp.permission_level) FROM users u LEFT JOIN user_permissions dp ON u.user_id = dp.user_id GROUP BY u.username;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT u.username, COUNT(DISTINCT dp.device_id) FROM users u LEFT JOIN user_permissions dp ON u.user_id = dp.user_id GROUP BY u.username HAVING COUNT(DISTINCT dp.device_id) > 2;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT u.username, COUNT(DISTINCT d.device_type) FROM users u LEFT JOIN devices d ON u.user_id = d.device_id GROUP BY u.username HAVING COUNT(DISTINCT d.device_type) = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM users ORDER BY username ASC;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM devices WHERE device_name IN ('Phone', 'Laptop', 'Tablet');",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users FROM users;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT AVG(LENGTH(password)) AS avg_password_length FROM users;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT MAX(LENGTH(email)) AS max_email_length FROM users;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT MIN(LENGTH(username)) AS min_username_length FROM users;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT SUBSTRING(username, 1, 3) AS initials FROM users;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT u.username, d.device_name FROM users u, devices d WHERE u.user_id = d.device_id;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT u.username, u.email, p.permission_level FROM users u, user_permissions p WHERE u.user_id = p.user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_devices, device_type FROM devices GROUP BY device_type ORDER BY total_devices DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_permissions (\n  user_id UUID PRIMARY KEY,\n  device_id UUID,\n  permission_level ENUM('read', 'write', 'admin')\n);\n\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nCREATE TABLE devices (\n  device_id UUID PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  device_location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT u.username, d.device_name, p.permission_level FROM users u INNER JOIN devices d ON u.user_id = d.device_id INNER JOIN user_permissions p ON u.user_id = p.user_id;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, device_id, permission_level FROM UserPermissions;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM Devices;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT permission_id, permission_type FROM Permissions;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM UserPermissions;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Devices;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Permissions;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, device_type FROM Devices;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM UserPermissions;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT permission_id, permission_type, FROM Permissions;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, device_type FROM Devices;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, device_id, permission_level FROM UserPermissions;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT permission_id, permission_type FROM Permissions;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, email FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT device_name, device_type FROM Devices;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM UserPermissions;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT permission_type FROM Permissions;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM UserPermissions WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, permission_level FROM UserPermissions WHERE permission_level = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Users JOIN UserPermissions ON Users.user_id = UserPermissions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Users JOIN Devices ON UserPermissions.device_id = Devices.device_id;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE username LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Devices WHERE device_type = 'mobile';",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT device_name, device_type FROM Devices WHERE device_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT permission_type FROM Permissions WHERE permission_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM UserPermissions WHERE permission_level IN ('admin', 'user');",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE user_id = (SELECT user_id FROM UserPermissions WHERE device_id = 2);",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Users WHERE user_id IN (SELECT user_id FROM UserPermissions WHERE permission_level = 'user');",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Users WHERE user_id NOT IN (SELECT user_id FROM UserPermissions);",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Devices WHERE device_id NOT IN (SELECT device_id FROM UserPermissions);",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(device_id) FROM Devices;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(user_id) FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT device_name, COUNT(device_id) FROM UserPermissions JOIN Devices ON UserPermissions.device_id = Devices.device_id GROUP BY device_name;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT username, device_name FROM Users JOIN UserPermissions ON Users.user_id = UserPermissions.user_id JOIN Devices ON UserPermissions.device_id = Devices.device_id;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT permission_type FROM Permissions;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Users LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE UserPermissions (\n    user_id INT PRIMARY KEY,\n    device_id INT NOT NULL,\n    permission_level VARCHAR(10) NOT NULL\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE Devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_type VARCHAR(20) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Devices ORDER BY device_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT username FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT device_name, device_type FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT permission_name FROM permissions WHERE permission_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT u.username, d.device_name FROM users u JOIN user_devices ud ON u.user_id = ud.user_id JOIN devices d ON ud.device_id = d.device_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT u.username, p.permission_name FROM users u JOIN user_permissions up ON u.user_id = up.user_id JOIN permissions p ON up.permission_id = p.permission_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE username LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT * FROM devices WHERE device_type = 'Smartphone';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS user_count FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT AVG(user_id) AS avg_user_id FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT MIN(device_id) AS min_device_id FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT MAX(permission_id) AS max_permission_id FROM permissions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(device_id) AS device_count FROM user_devices GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(user_id) AS user_count FROM user_devices GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT permission_id, COUNT(user_id) AS user_count FROM user_permissions GROUP BY permission_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT u.username, COUNT(d.device_id) AS device_count FROM users u JOIN user_devices ud ON u.user_id = ud.user_id JOIN devices d ON ud.device_id = d.device_id GROUP BY u.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT d.device_name, COUNT(u.user_id) AS user_count FROM devices d JOIN user_devices ud ON d.device_id = ud.device_id JOIN users u ON ud.user_id = u.user_id GROUP BY d.device_name;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT p.permission_name, COUNT(u.user_id) AS user_count FROM permissions p JOIN user_permissions up ON p.permission_id = up.permission_id JOIN users u ON up.user_id = u.user_id GROUP BY p.permission_name;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT u.username, d.device_name, p.permission_name FROM users u JOIN user_devices ud ON u.user_id = ud.user_id JOIN devices d ON ud.device_id = d.device_id JOIN user_permissions up ON u.user_id = up.user_id JOIN permissions p ON up.permission_id = p.permission_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT u.username, d.device_name, COUNT(p.permission_id) AS permission_count FROM users u JOIN user_devices ud ON u.user_id = ud.user_id JOIN devices d ON ud.device_id = d.device_id JOIN user_permissions up ON u.user_id = up.user_id GROUP BY u.username, d.device_name;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT username, device_name FROM users JOIN user_devices USING(user_id) JOIN devices USING(device_id) WHERE username = 'John';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT permission_name FROM permissions WHERE permission_id IN (SELECT permission_id FROM user_permissions WHERE user_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT user_id, device_name, device_type FROM users JOIN user_devices USING(user_id) JOIN devices USING(device_id);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT username, permission_name FROM users JOIN user_permissions USING(user_id) JOIN permissions USING(permission_id);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT username, device_name FROM users JOIN user_devices USING(user_id) JOIN devices USING(device_id) WHERE device_type = 'Mobile';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT user_id, permission_name FROM users JOIN user_permissions USING(user_id) JOIN permissions USING(permission_id) WHERE username = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT username FROM users JOIN user_permissions USING(user_id) JOIN permissions USING(permission_id);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(device_id) FROM user_devices GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT username, COUNT(device_id) FROM users JOIN user_devices USING(user_id) GROUP BY username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT username, permissions.permission_name FROM users JOIN user_permissions USING(user_id) JOIN permissions USING(permission_id) WHERE username = 'Bob';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT device_name, COUNT(user_id) FROM devices JOIN user_devices USING(device_id) GROUP BY device_name;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(permission_id) FROM users JOIN user_permissions USING(user_id) GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT device_name, permission_name FROM devices JOIN user_devices USING(device_id) JOIN user_permissions USING(user_id);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT device_id) FROM user_devices;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(device_id) FROM user_devices GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT username, permission_name FROM users JOIN user_permissions USING(user_id) JOIN permissions USING(permission_id) WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT device_name, MAX(user_id) FROM devices JOIN user_devices USING(device_id) GROUP BY device_name;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT permission_name, COUNT(user_id) FROM permissions JOIN user_permissions USING(permission_id) GROUP BY permission_name;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50) NOT NULL,\n    device_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_devices (\n    user_id INT REFERENCES users(user_id),\n    device_id INT REFERENCES devices(device_id),\n    PRIMARY KEY (user_id, device_id)\n);\n\nCREATE TABLE user_permissions (\n    user_id INT REFERENCES users(user_id),\n    permission_id INT REFERENCES permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(device_id) FROM user_devices GROUP BY user_id;"
]