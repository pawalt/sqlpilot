[
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM location_data;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, timestamp FROM location_data;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT latitude, longitude FROM location_data;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM location_data WHERE device_id = '12345';",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM location_data WHERE latitude > 40;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM location_data WHERE longitude < -100;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM location_data WHERE timestamp > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, timestamp FROM location_data WHERE latitude > 40;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, latitude, longitude FROM location_data WHERE timestamp > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM location_data ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM location_data;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(latitude) FROM location_data;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(longitude) FROM location_data;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(latitude) FROM location_data;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) FROM location_data GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, MAX(latitude) FROM location_data GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, timestamp, AVG(latitude) FROM location_data GROUP BY device_id, timestamp;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM location_data WHERE latitude BETWEEN 30 AND 50;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM location_data WHERE longitude BETWEEN -120 AND -80;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM location_data WHERE timestamp BETWEEN '2021-01-01' AND '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM location_data WHERE latitude > 25 AND longitude < 50",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, latitude, longitude FROM location_data WHERE timestamp > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) AS total_records FROM location_data GROUP BY device_id HAVING total_records > 10",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, MAX(latitude) AS max_lat, MIN(longitude) AS min_long FROM location_data GROUP BY device_id",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT device_id) AS unique_devices FROM location_data",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM location_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, AVG(latitude) AS avg_lat, AVG(longitude) AS avg_long FROM location_data GROUP BY device_id",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM location_data WHERE device_id IN (SELECT device_id FROM location_data GROUP BY device_id HAVING COUNT(*) > 1)",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, latitude, longitude, timestamp, ROW_NUMBER() OVER (ORDER BY timestamp) AS row_num FROM location_data",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, latitude, longitude FROM location_data WHERE latitude > 30 AND longitude < 40 ORDER BY latitude DESC, longitude ASC",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, latitude, longitude, timestamp FROM location_data WHERE EXTRACT(YEAR FROM timestamp) = 2022",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, latitude, longitude, timestamp FROM location_data WHERE DATE_TRUNC('day', timestamp) = '2022-06-01'",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, latitude, longitude FROM location_data WHERE timestamp > (SELECT MIN(timestamp) FROM location_data)",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, latitude, longitude FROM location_data WHERE timestamp - LAG(timestamp) OVER (ORDER BY timestamp) < INTERVAL '1 hour'",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, latitude, longitude FROM location_data WHERE latitude != longitude",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, latitude, longitude, timestamp FROM location_data WHERE timestamp::DATE = '2022-06-15'",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, latitude, longitude FROM location_data WHERE timestamp > NOW() - INTERVAL '1 day'",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, latitude, longitude FROM location_data WHERE latitude BETWEEN 20 AND 30 AND longitude BETWEEN 40 AND 50",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, latitude, longitude FROM location_data WHERE timestamp >= NOW() - INTERVAL '1 month' AND timestamp < NOW()",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n  device_id UUID PRIMARY KEY,\n  latitude FLOAT,\n  longitude FLOAT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, latitude, longitude FROM location_data ORDER BY timestamp DESC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM location_data;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM location_data;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, latitude, longitude FROM location_data;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM asset_data;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT asset_id, asset_name FROM asset_data;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT asset_id, asset_name, location_id FROM asset_data;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT location_data.device_id, location_data.device_name, asset_data.asset_name FROM location_data, asset_data WHERE location_data.device_id = asset_data.location_id;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT location_data.device_name, location_data.latitude, asset_data.asset_name FROM location_data, asset_data WHERE location_data.device_id = asset_data.location_id;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT asset_data.asset_id, asset_data.asset_name, location_data.latitude, location_data.longitude FROM asset_data, location_data WHERE asset_data.location_id = location_data.device_id;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT asset_data.asset_id, asset_data.asset_name, location_data.device_name, location_data.latitude, location_data.longitude FROM asset_data, location_data WHERE asset_data.location_id = location_data.device_id;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT location_data.device_name, location_data.latitude, location_data.longitude, asset_data.asset_name FROM location_data INNER JOIN asset_data ON location_data.device_id = asset_data.location_id;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT asset_data.asset_id, asset_data.asset_name, location_data.device_name, location_data.latitude FROM asset_data INNER JOIN location_data ON asset_data.location_id = location_data.device_id;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM location_data LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM asset_data LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM location_data ORDER BY device_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_name, latitude, longitude FROM location_data WHERE latitude > 40;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT asset_id, asset_name FROM asset_data WHERE asset_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, latitude, longitude FROM location_data WHERE device_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT asset_id, asset_name, location_id FROM asset_data WHERE location_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM location_data WHERE longitude < -100;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, latitude, longitude FROM location_data WHERE device_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, latitude, longitude FROM location_data WHERE latitude > 40.0 AND longitude < -100.0;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_name, latitude, longitude FROM location_data WHERE device_name LIKE '%device%';",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_name, latitude, longitude FROM location_data WHERE device_name LIKE 'device%' ORDER BY latitude;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM asset_data JOIN location_data ON asset_data.location_id = location_data.device_id;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT asset_id, asset_name FROM asset_data INNER JOIN location_data ON asset_data.location_id = location_data.device_id WHERE latitude > 40.0 AND longitude < -100.0;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT asset_name, latitude, longitude FROM asset_data INNER JOIN location_data ON asset_data.location_id = location_data.device_id WHERE asset_name LIKE '%asset%';",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT asset_name, latitude, longitude FROM asset_data INNER JOIN location_data ON asset_data.location_id = location_data.device_id WHERE asset_name LIKE 'asset%' ORDER BY latitude;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT asset_name, latitude, longitude FROM asset_data INNER JOIN location_data ON asset_data.location_id = location_data.device_id WHERE latitude > 40.0 AND longitude < -100.0 ORDER BY longitude DESC;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) AS num_assets FROM location_data LEFT JOIN asset_data ON location_data.device_id = asset_data.location_id GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_id, AVG(latitude) AS avg_latitude, AVG(longitude) AS avg_longitude FROM location_data GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_assets, AVG(latitude) AS avg_latitude, AVG(longitude) AS avg_longitude FROM location_data INNER JOIN asset_data ON location_data.device_id = asset_data.location_id;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_name, COUNT(*) AS num_assets FROM location_data LEFT JOIN asset_data ON location_data.device_id = asset_data.location_id GROUP BY device_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT asset_name, SUM(latitude) AS total_latitude, SUM(longitude) AS total_longitude FROM asset_data INNER JOIN location_data ON asset_data.location_id = location_data.device_id GROUP BY asset_name;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_assets, SUM(latitude) AS total_latitude, SUM(longitude) AS total_longitude FROM location_data INNER JOIN asset_data ON location_data.device_id = asset_data.location_id;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, latitude, longitude FROM location_data WHERE device_id IN (1, 2, 3, 4, 5);",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT asset_name, latitude, longitude FROM asset_data INNER JOIN location_data ON asset_data.location_id = location_data.device_id WHERE location_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_name, latitude, longitude FROM location_data WHERE latitude BETWEEN 30.0 AND 40.0 AND longitude BETWEEN -110.0 AND -100.0;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, latitude, longitude FROM location_data WHERE latitude > 35.0 OR longitude < -105.0;",
  "### TABLEDATA\n\nCREATE TABLE location_data (\n    device_id INT PRIMARY KEY,\n    device_name STRING,\n    latitude DECIMAL,\n    longitude DECIMAL\n);\n\nCREATE TABLE asset_data (\n    asset_id INT PRIMARY KEY,\n    asset_name STRING,\n    location_id INT\n);\n\n### STATEMENT\n\nSELECT asset_name, location_id, latitude, longitude FROM asset_data INNER JOIN location_data ON asset_data.location_id = location_data.device_id WHERE location_data.device_name LIKE '%device%' ORDER BY location_data.latitude DESC;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT * FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM devices WHERE device_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, location_lat, location_long FROM devices WHERE location_lat > 0;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT * FROM assets;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT asset_id, asset_name FROM assets WHERE asset_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT asset_id, asset_name, value FROM assets WHERE value > 1000;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, asset_id FROM device_assets;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, asset_id FROM device_assets WHERE device_id = 1 AND asset_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT devices.device_name, assets.asset_name FROM devices JOIN device_assets ON devices.device_id = device_assets.device_id JOIN assets ON device_assets.asset_id = assets.asset_id;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(asset_id) AS total_assets FROM device_assets GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, AVG(location_lat) AS avg_lat FROM devices GROUP BY device_id HAVING avg_lat > 0;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, SUM(value) AS total_value FROM assets JOIN device_assets ON assets.asset_id = device_assets.asset_id WHERE device_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_devices FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT AVG(value) AS avg_value FROM assets;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT MAX(value) AS max_value FROM assets;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT MIN(value) AS min_value FROM assets;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT value FROM assets;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT * FROM devices ORDER BY device_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM devices LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM devices OFFSET 5 LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT * FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM devices WHERE location_lat > 0;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT * FROM assets WHERE value > 1000;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT devices.device_id, devices.device_name, assets.asset_name FROM devices JOIN device_assets ON devices.device_id = device_assets.device_id JOIN assets ON device_assets.asset_id = assets.asset_id;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT devices.device_name, SUM(assets.value) AS total_value FROM devices JOIN device_assets ON devices.device_id = device_assets.device_id JOIN assets ON device_assets.asset_id = assets.asset_id GROUP BY devices.device_name;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT devices.device_id, assets.asset_name, assets.value FROM devices JOIN device_assets ON devices.device_id = device_assets.device_id JOIN assets ON device_assets.asset_id = assets.asset_id WHERE assets.value > 5000;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT AVG(value) AS avg_value FROM assets;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT devices.device_name, MAX(assets.value) AS max_value FROM devices JOIN device_assets ON devices.device_id = device_assets.device_id JOIN assets ON device_assets.asset_id = assets.asset_id GROUP BY devices.device_name HAVING MAX(assets.value) > 2000;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT devices.device_id, COUNT(asset_id) AS asset_count FROM device_assets WHERE device_id = 1 GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT MAX(value) AS max_asset_value FROM assets;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(asset_id) FROM device_assets GROUP BY device_id HAVING COUNT(asset_id) > 2;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(asset_id) FROM device_assets GROUP BY device_id ORDER BY COUNT(asset_id) DESC;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_name, AVG(value) AS avg_asset_value FROM devices JOIN device_assets ON devices.device_id = device_assets.device_id JOIN assets ON device_assets.asset_id = assets.asset_id GROUP BY device_name ORDER BY avg_asset_value DESC;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, CONCAT('Location: ', location_lat, ', ', location_long) AS location FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, device_assets.asset_id, asset_name FROM devices JOIN device_assets ON devices.device_id = device_assets.device_id JOIN assets ON device_assets.asset_id = assets.asset_id;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT devices.device_name, assets.asset_name, assets.value FROM devices JOIN device_assets ON devices.device_id = device_assets.device_id JOIN assets ON device_assets.asset_id = assets.asset_id WHERE devices.device_id = 2 AND assets.value > 1500;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_name, MAX(value) AS max_asset_value FROM devices JOIN device_assets ON devices.device_id = device_assets.device_id JOIN assets ON device_assets.asset_id = assets.asset_id GROUP BY device_name HAVING MAX(value) > 3000;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT devices.device_id, device_name, MIN(assets.value) AS min_asset_value FROM devices JOIN device_assets ON devices.device_id = device_assets.device_id JOIN assets ON device_assets.asset_id = assets.asset_id GROUP BY devices.device_id;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, location_lat, location_long FROM devices WHERE device_id IN (SELECT device_id FROM device_assets WHERE asset_id = 3);",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT devices.device_id, devices.device_name, SUM(assets.value) AS total_value FROM devices JOIN device_assets ON devices.device_id = device_assets.device_id JOIN assets ON device_assets.asset_id = assets.asset_id GROUP BY devices.device_id HAVING total_value > 5000;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(asset_id) AS asset_count FROM device_assets GROUP BY device_id ORDER BY asset_count DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  location_lat DECIMAL,\n  location_long DECIMAL\n);\n\n\nCREATE TABLE assets (\n  asset_id INT PRIMARY KEY,\n  asset_name VARCHAR(255),\n  value DECIMAL\n);\n\n\nCREATE TABLE device_assets (\n  device_id INT,\n  asset_id INT,\n  PRIMARY KEY (device_id, asset_id),\n  FOREIGN KEY (device_id) REFERENCES devices(device_id),\n  FOREIGN KEY (asset_id) REFERENCES assets(asset_id)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, COUNT(asset_id) AS asset_count FROM devices JOIN device_assets ON devices.device_id = device_assets.device_id GROUP BY device_id, device_name ORDER BY asset_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT * FROM locations;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT device_id, timestamp, longitude, latitude FROM locations;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT * FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, owner_id FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT * FROM owners;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT owner_id, owner_name, email FROM owners;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT * FROM assets;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT asset_id, asset_name, location_id, owner_id FROM assets;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT device_id, timestamp, longitude, latitude FROM locations WHERE longitude > 0;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM devices WHERE owner_id = '1234';",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT owner_id, owner_name FROM owners WHERE owner_name LIKE 'John%';",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT asset_id, asset_name FROM assets WHERE owner_id = '5678';",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT * FROM locations INNER JOIN devices ON locations.device_id = devices.device_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT * FROM devices LEFT JOIN owners ON devices.owner_id = owners.owner_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT * FROM owners RIGHT JOIN assets ON owners.owner_id = assets.owner_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT * FROM assets INNER JOIN locations ON assets.location_id = locations.device_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT * FROM locations WHERE timestamp > '2022-01-01' AND longitude < 0;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT * FROM devices WHERE device_name ILIKE '%phone%';",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT * FROM owners WHERE email = 'example@example.com';",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT * FROM assets WHERE location_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT * FROM locations JOIN devices ON locations.device_id = devices.device_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT locations.longitude, locations.latitude FROM locations JOIN devices ON locations.device_id = devices.device_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT locations.timestamp, devices.device_name FROM locations JOIN devices ON locations.device_id = devices.device_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT owners.owner_name, assets.asset_name FROM owners JOIN assets ON owners.owner_id = assets.owner_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT locations.longitude, locations.latitude, devices.device_name FROM locations JOIN devices ON locations.device_id = devices.device_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT devices.device_name, owners.owner_name, owners.email FROM devices JOIN owners ON devices.owner_id = owners.owner_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT assets.asset_name, owners.owner_name, locations.longitude, locations.latitude FROM assets JOIN owners ON assets.owner_id = owners.owner_id JOIN locations ON assets.location_id = locations.device_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT assets.asset_name, owners.owner_name, locations.longitude, locations.latitude, devices.device_name FROM assets JOIN owners ON assets.owner_id = owners.owner_id JOIN locations ON assets.location_id = locations.device_id JOIN devices ON assets.owner_id = devices.owner_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT DISTINCT devices.device_name, owners.owner_name, locations.longitude, locations.latitude FROM devices JOIN owners ON devices.owner_id = owners.owner_id JOIN locations ON devices.device_id = locations.device_id JOIN assets ON devices.owner_id = assets.owner_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT owners.owner_name, assets.asset_name, devices.device_name FROM owners JOIN assets ON owners.owner_id = assets.owner_id JOIN devices ON owners.owner_id = devices.owner_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT DISTINCT assets.asset_name, locations.longitude, locations.latitude, devices.device_name FROM assets JOIN locations ON assets.location_id = locations.device_id JOIN devices ON assets.owner_id = devices.owner_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT assets.asset_name, locations.longitude, locations.latitude, devices.device_name, owners.owner_name FROM assets JOIN locations ON assets.location_id = locations.device_id JOIN devices ON assets.owner_id = devices.owner_id JOIN owners ON assets.owner_id = owners.owner_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT owners.owner_name, devices.device_name, locations.longitude, assets.asset_name FROM owners JOIN devices ON owners.owner_id = devices.owner_id JOIN locations ON devices.device_id = locations.device_id JOIN assets ON devices.owner_id = assets.owner_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT owners.owner_name, devices.device_name, locations.longitude, assets.asset_name, locations.timestamp FROM owners JOIN devices ON owners.owner_id = devices.owner_id JOIN locations ON devices.device_id = locations.device_id JOIN assets ON owners.owner_id = assets.owner_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT assets.asset_name, owners.owner_name, devices.device_name, locations.longitude, locations.latitude FROM assets JOIN owners ON assets.owner_id = owners.owner_id JOIN devices ON assets.owner_id = devices.owner_id JOIN locations ON assets.location_id = locations.device_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT DISTINCT owners.owner_name, devices.device_name, assets.asset_name, locations.longitude, locations.latitude FROM owners JOIN devices ON owners.owner_id = devices.owner_id JOIN assets ON owners.owner_id = assets.owner_id JOIN locations ON devices.device_id = locations.device_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT assets.asset_name, owners.owner_name, devices.device_name, locations.longitude, locations.latitude, locations.timestamp FROM assets JOIN owners ON assets.owner_id = owners.owner_id JOIN devices ON assets.owner_id = devices.owner_id JOIN locations ON assets.location_id = locations.device_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT owners.owner_name, devices.device_name, assets.asset_name, locations.longitude FROM owners JOIN devices ON owners.owner_id = devices.owner_id JOIN assets ON devices.owner_id = assets.owner_id JOIN locations ON devices.device_id = locations.device_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT owners.owner_name, devices.device_name, assets.asset_name, locations.longitude, locations.latitude, locations.timestamp FROM owners JOIN devices ON owners.owner_id = devices.owner_id JOIN assets ON devices.owner_id = assets.owner_id JOIN locations ON devices.device_id = locations.device_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT DISTINCT assets.asset_name, owners.owner_name, devices.device_name, locations.longitude, locations.latitude, locations.timestamp FROM assets JOIN owners ON assets.owner_id = owners.owner_id JOIN devices ON assets.owner_id = devices.owner_id JOIN locations ON assets.location_id = locations.device_id;",
  "### TABLEDATA\n\nCREATE TABLE locations (\n    device_id UUID PRIMARY KEY,\n    timestamp TIMESTAMP,\n    longitude FLOAT,\n    latitude FLOAT\n);\n\nCREATE TABLE devices (\n    device_id UUID PRIMARY KEY,\n    device_name TEXT,\n    owner_id UUID\n);\n\nCREATE TABLE owners (\n    owner_id UUID PRIMARY KEY,\n    owner_name TEXT,\n    email TEXT\n);\n\nCREATE TABLE assets (\n    asset_id UUID PRIMARY KEY,\n    asset_name TEXT,\n    location_id UUID,\n    owner_id UUID\n);\n\n### STATEMENT\n\nSELECT owners.owner_name, devices.device_name, assets.asset_name, locations.longitude, locations.latitude, locations.timestamp, owners.email FROM owners JOIN devices ON owners.owner_id = devices.owner_id JOIN assets ON devices.owner_id = assets.owner_id JOIN locations ON devices.device_id = locations.device_id;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM device_locations;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT location_name, latitude, longitude FROM device_locations;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM device_status;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT status, battery_level, connected FROM device_status;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM device_metadata;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_name, manufacturer, model FROM device_metadata;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM asset_management;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT asset_name, location_id, last_inspected FROM asset_management;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM location_history;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT location_name, latitude, longitude, timestamp FROM location_history;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, location_name, latitude, longitude FROM device_locations WHERE device_id = '1';",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, status, battery_level FROM device_status WHERE battery_level > 50;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, manufacturer FROM device_metadata WHERE manufacturer = 'ABC Inc';",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT asset_id, location_id, last_inspected FROM asset_management WHERE last_inspected < NOW();",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, location_name, timestamp FROM location_history WHERE timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM device_locations;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(battery_level) FROM device_status;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(latitude) FROM device_locations;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(battery_level) FROM device_status;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT location_name, COUNT(*) FROM device_locations GROUP BY location_name;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, MAX(battery_level) FROM device_status GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_locations.device_id, device_locations.location_name, device_status.status FROM device_locations INNER JOIN device_status ON device_locations.device_id = device_status.device_id;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, manufacturer, model, firmware_version FROM device_metadata WHERE manufacturer = 'Apple';",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(asset_name) AS total_assets FROM asset_management;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(latitude), AVG(longitude) FROM device_locations GROUP BY location_name;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM device_metadata WHERE firmware_version LIKE '1.3%';",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT asset_name, location_name FROM asset_management LEFT JOIN device_locations ON asset_management.location_id = device_locations.device_id;",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, location_name, timestamp FROM location_history WHERE timestamp > '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE device_locations (\n    device_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_status (\n    device_id UUID PRIMARY KEY,\n    status VARCHAR(50),\n    battery_level INT,\n    connected BOOLEAN,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE device_metadata (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(100),\n    manufacturer VARCHAR(100),\n    model VARCHAR(100),\n    firmware_version VARCHAR(50)\n);\n\nCREATE TABLE asset_management (\n    asset_id UUID PRIMARY KEY,\n    asset_name VARCHAR(100),\n    location_id UUID,\n    last_inspected TIMESTAMP,\n    inspection_notes TEXT\n);\n\nCREATE TABLE location_history (\n    device_id UUID,\n    location_name VARCHAR(255),\n    latitude FLOAT,\n    longitude FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_locations.device_id, location_name, latitude, longitude, status FROM device_locations I..."
]