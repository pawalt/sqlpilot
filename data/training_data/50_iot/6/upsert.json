[
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (1, 'Living Room', 'Temperature', 25.5, '2022-01-01 08:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (2, 'Bedroom', 'Humidity', 65.3, '2022-01-01 09:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (3, 'Kitchen', 'Pressure', 1013.5, '2022-01-01 10:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (4, 'Living Room', 'Temperature', 24.8, '2022-01-01 11:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (5, 'Bedroom', 'Humidity', 62.7, '2022-01-01 12:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (6, 'Kitchen', 'Pressure', 1011.2, '2022-01-01 13:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (7, 'Living Room', 'Temperature', 24.2, '2022-01-01 14:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (8, 'Bedroom', 'Humidity', 63.8, '2022-01-01 15:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (9, 'Kitchen', 'Pressure', 1014.8, '2022-01-01 16:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (10, 'Living Room', 'Temperature', 25.9, '2022-01-01 17:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (11, 'Bedroom', 'Humidity', 61.4, '2022-01-01 18:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (12, 'Kitchen', 'Pressure', 1012.6, '2022-01-01 19:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (13, 'Living Room', 'Temperature', 23.6, '2022-01-01 20:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (14, 'Bedroom', 'Humidity', 64.7, '2022-01-01 21:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (15, 'Kitchen', 'Pressure', 1010.3, '2022-01-01 22:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (16, 'Living Room', 'Temperature', 24.2, '2022-01-01 23:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (17, 'Bedroom', 'Humidity', 62.5, '2022-01-02 00:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (18, 'Kitchen', 'Pressure', 1015.6, '2022-01-02 01:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (19, 'Living Room', 'Temperature', 25.1, '2022-01-02 02:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (20, 'Bedroom', 'Humidity', 63.2, '2022-01-02 03:00:00')",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (1, 'Room A', 'Temperature', 23.5, '2022-01-01 08:00:00') ON CONFLICT (sensor_id) DO UPDATE SET sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_value = EXCLUDED.sensor_value, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (2, 'Room B', 'Humidity', 60.2, '2022-01-01 09:30:00') ON CONFLICT (sensor_id) DO UPDATE SET sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_value = EXCLUDED.sensor_value, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (3, 'Room C', 'Pressure', 1005.3, '2022-01-01 10:45:00') ON CONFLICT (sensor_id) DO UPDATE SET sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_value = EXCLUDED.sensor_value, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (4, 'Room D', 'Temperature', 25.8, '2022-01-01 11:15:00') ON CONFLICT (sensor_id) DO UPDATE SET sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_value = EXCLUDED.sensor_value, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (5, 'Room E', 'Humidity', 55.8, '2022-01-01 12:30:00') ON CONFLICT (sensor_id) DO UPDATE SET sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_value = EXCLUDED.sensor_value, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (6, 'Room F', 'Pressure', 1008.7, '2022-01-01 13:45:00') ON CONFLICT (sensor_id) DO UPDATE SET sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_value = EXCLUDED.sensor_value, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (7, 'Room G', 'Temperature', 26.3, '2022-01-01 14:15:00') ON CONFLICT (sensor_id) DO UPDATE SET sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_value = EXCLUDED.sensor_value, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (8, 'Room H', 'Humidity', 59.3, '2022-01-01 15:30:00') ON CONFLICT (sensor_id) DO UPDATE SET sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_value = EXCLUDED.sensor_value, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (9, 'Room I', 'Pressure', 1002.6, '2022-01-01 16:45:00') O... 408 chars skipped ...or_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (17, 'Room Q', 'Temperature', 26.7, '2022-01-02 21:15:00') ON CONFLICT (sensor_id) DO UPDATE SET sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_value = EXCLUDED.sensor_value, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (18, 'Room R', 'Humidity', 61.8, '2022-01-02 22:30:00') ON CONFLICT (sensor_id) DO UPDATE SET sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_value = EXCLUDED.sensor_value, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (19, 'Room S', 'Pressure', 1008.9, '2022-01-02 23:45:00') ON CONFLICT (sensor_id) DO UPDATE SET sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_value = EXCLUDED.sensor_value, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensor_data (\n    sensor_id INT PRIMARY KEY,\n    sensor_location VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_value FLOAT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, sensor_location, sensor_type, sensor_value, timestamp) VALUES (20, 'Room T', 'Temperature', 27.2, '2022-01-03 00:15:00') ON CONFLICT (sensor_id) DO UPDATE SET sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_value = EXCLUDED.sensor_value, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (1, 'Temperature Sensor', 'Temperature', 'Room A') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', sensor_location = 'Room A';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (2, 'Humidity Sensor', 'Humidity', 'Room B') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Humidity Sensor', sensor_type = 'Humidity', sensor_location = 'Room B';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (3, 'Light Sensor', 'Light', 'Room C') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Light Sensor', sensor_type = 'Light', sensor_location = 'Room C';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (4, 'Pressure Sensor', 'Pressure', 'Room D') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Pressure Sensor', sensor_type = 'Pressure', sensor_location = 'Room D';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (5, 'Motion Sensor', 'Motion', 'Room E') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Motion Sensor', sensor_type = 'Motion', sensor_location = 'Room E';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (6, 'Proximity Sensor', 'Proximity', 'Room F') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Proximity Sensor', sensor_type = 'Proximity', sensor_location = 'Room F';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (7, 'CO2 Sensor', 'CO2', 'Room G') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'CO2 Sensor', sensor_type = 'CO2', sensor_location = 'Room G';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (8, 'Sound Sensor', 'Sound', 'Room H') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Sound Sensor', sensor_type = 'Sound', sensor_location = 'Room H';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (9, 'Vibration Sensor', 'Vibration', 'Room I') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Vibration Sensor', sensor_type = 'Vibration', sensor_location = 'Room I';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (10, 'UV Sensor', 'UV', 'Room J') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'UV Sensor', sensor_type = 'UV', sensor_location = 'Room J';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (11, 'Water Level Sensor', 'Water Level', 'Room K') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Water Level Sensor', sensor_type = 'Water Level', sensor_location = 'Room K';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (12, 'Distance Sensor', 'Distance', 'Room L') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Distance Sensor', sensor_type = 'Distance', sensor_location = 'Room L';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (13, 'Smoke Sensor', 'Smoke', 'Room M') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Smoke Sensor', sensor_type = 'Smoke', sensor_location = 'Room M';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (14, 'Gas Sensor', 'Gas', 'Room N') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Gas Sensor', sensor_type = 'Gas', sensor_location = 'Room N';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (15, 'Accelerometer Sensor', 'Accelerometer', 'Room O') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Accelerometer Sensor', sensor_type = 'Accelerometer', sensor_location = 'Room O';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (16, 'Temperature Sensor', 'Temperature', 'Room P') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Temperature Sensor', sensor_type = 'Temperature', sensor_location = 'Room P';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (17, 'Humidity Sensor', 'Humidity', 'Room Q') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Humidity Sensor', sensor_type = 'Humidity', sensor_location = 'Room Q';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (18, 'Light Sensor', 'Light', 'Room R') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Light Sensor', sensor_type = 'Light', sensor_location = 'Room R';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (19, 'Pressure Sensor', 'Pressure', 'Room S') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Pressure Sensor', sensor_type = 'Pressure', sensor_location = 'Room S';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (20, 'Motion Sensor', 'Motion', 'Room T') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Motion Sensor', sensor_type = 'Motion', sensor_location = 'Room T';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (1, 'Sensor 1', 'Temperature', 'Room A') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, sensor_type = excluded.sensor_type, sensor_location = excluded.sensor_location;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (2, 'Sensor 2', 'Pressure', 'Room B') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, sensor_type = excluded.sensor_type, sensor_location = excluded.sensor_location;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (3, 'Sensor 3', 'Humidity', 'Room C') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, sensor_type = excluded.sensor_type, sensor_location = excluded.sensor_location;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (4, 'Sensor 4', 'Light', 'Room D') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, sensor_type = excluded.sensor_type, sensor_location = excluded.sensor_location;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (5, 'Sensor 5', 'Motion', 'Room E') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, sensor_type = excluded.sensor_type, sensor_location = excluded.sensor_location;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (6, 'Sensor 6', 'CO2', 'Room F') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, sensor_type = excluded.sensor_type, sensor_location = excluded.sensor_location;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (7, 'Sensor 7', 'Sound', 'Room G') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, sensor_type = excluded.sensor_type, sensor_location = excluded.sensor_location;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (8, 'Sensor 8', 'Proximity', 'Room H') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, sensor_type = excluded.sensor_type, sensor_location = excluded.sensor_location;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (9, 'Sensor 9', 'Vibration', 'Room I') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, sensor_type = excluded.sensor_type, sensor_location = excluded.sensor_location;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensor_readings (reading_id, sensor_id, reading_value, reading_timestamp) VALUES (1, 1, 20.5, '2022-07-01 12:00:00') ON CONFLICT (reading_id) DO UPDATE SET sensor_id = excluded.sensor_id, reading_value = excluded.reading_value, reading_timestamp = excluded.reading_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensor_readings (reading_id, sensor_id, reading_value, reading_timestamp) VALUES (2, 2, 30.2, '2022-07-02 10:30:00') ON CONFLICT (reading_id) DO UPDATE SET sensor_id = excluded.sensor_id, reading_value = excluded.reading_value, reading_timestamp = excluded.reading_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensor_readings (reading_id, sensor_id, reading_value, reading_timestamp) VALUES (3, 3, 40.7, '2022-07-03 08:45:00') ON CONFLICT (reading_id) DO UPDATE SET sensor_id = excluded.sensor_id, reading_value = excluded.reading_value, reading_timestamp = excluded.reading_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensor_readings (reading_id, sensor_id, reading_value, reading_timestamp) VALUES (4, 4, 25.8, '2022-07-04 14:20:00') ON CONFLICT (reading_id) DO UPDATE SET sensor_id = excluded.sensor_id, reading_value = excluded.reading_value, reading_timestamp = excluded.reading_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensor_readings (reading_id, sensor_id, reading_value, reading_timestamp) VALUES (5, 5, 18.9, '2022-07-05 11:10:00') ON CONFLICT (reading_id) DO UPDATE SET sensor_id = excluded.sensor_id, reading_value = excluded.reading_value, reading_timestamp = excluded.reading_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensor_readings (reading_id, sensor_id, reading_value, reading_timestamp) VALUES (6, 6, 35.4, '2022-07-06 15:30:00') ON CONFLICT (reading_id) DO UPDATE SET sensor_id = excluded.sensor_id, reading_value = excluded.reading_value, reading_timestamp = excluded.reading_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensor_readings (reading_id, sensor_id, reading_value, reading_timestamp) VALUES (7, 7, 22.1, '2022-07-07 09:40:00') ON CONFLICT (reading_id) DO UPDATE SET sensor_id = excluded.sensor_id, reading_value = excluded.reading_value, reading_timestamp = excluded.reading_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensor_readings (reading_id, sensor_id, reading_value, reading_timestamp) VALUES (8, 8, 26.9, '2022-07-08 13:15:00') ON CONFLICT (reading_id) DO UPDATE SET sensor_id = excluded.sensor_id, reading_value = excluded.reading_value, reading_timestamp = excluded.reading_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensor_readings (reading_id, sensor_id, reading_value, reading_timestamp) VALUES (9, 9, 33.6, '2022-07-09 16:50:00') ON CONFLICT (reading_id) DO UPDATE SET sensor_id = excluded.sensor_id, reading_value = excluded.reading_value, reading_timestamp = excluded.reading_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, sensor_type, sensor_location) VALUES (10, 'Sensor 10', 'Temperature', 'Room J') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, sensor_type = excluded.sensor_type, sensor_location = excluded.sensor_location;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id INT PRIMARY KEY,\n    sensor_name VARCHAR(255),\n    sensor_type VARCHAR(50),\n    sensor_location VARCHAR(100)\n);\n\nCREATE TABLE sensor_readings (\n    reading_id INT PRIMARY KEY,\n    sensor_id INT,\n    reading_value FLOAT,\n    reading_timestamp TIMESTAMP,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\n### STATEMENT\n\nINSERT INTO sensor_readings (reading_id, sensor_id, reading_value, reading_timestamp) VALUES (10, 10, 27.4, '2022-07-10 10:00:00') ON CONFLICT (reading_id) DO UPDATE SET sensor_id = excluded.sensor_id, reading_value = excluded.reading_value, reading_timestamp = excluded.reading_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nUPSERT INTO Sensors (sensor_id, sensor_name, location, status) VALUES (1, 'Sensor1', 'Location1', TRUE) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Sensor1', location = 'Location1', status = TRUE",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nUPSERT INTO Sensors (sensor_id, sensor_name, location, status) VALUES (2, 'Sensor2', 'Location2', TRUE) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Sensor2', location = 'Location2', status = TRUE",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nUPSERT INTO Sensors (sensor_id, sensor_name, location, status) VALUES (3, 'Sensor3', 'Location3', TRUE) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = 'Sensor3', location = 'Location3', status = TRUE",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nUPSERT INTO SensorData (data_id, sensor_id, timestamp, value) VALUES (1, 1, '2022-10-01 12:00:00', 25.5) ON CONFLICT (data_id) DO UPDATE SET sensor_id = 1, timestamp = '2022-10-01 12:00:00', value = 25.5",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nUPSERT INTO SensorData (data_id, sensor_id, timestamp, value) VALUES (2, 2, '2022-10-02 10:00:00', 30.0) ON CONFLICT (data_id) DO UPDATE SET sensor_id = 2, timestamp = '2022-10-02 10:00:00', value = 30.0",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nUPSERT INTO SensorData (data_id, sensor_id, timestamp, value) VALUES (3, 3, '2022-10-03 15:00:00', 22.3) ON CONFLICT (data_id) DO UPDATE SET sensor_id = 3, timestamp = '2022-10-03 15:00:00', value = 22.3",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nUPSERT INTO Dashboard (dashboard_id, dashboard_name, layout, widgets) VALUES (1, 'Dashboard1', '{\"type\": \"grid\", \"columns\": 3}', '{\"widget1\": \"chart\", \"widget2\": \"table\"}') ON CONFLICT (dashboard_id) DO UPDATE SET dashboard_name = 'Dashboard1', layout = '{\"type\": \"grid\", \"columns\": 3}', widgets = '{\"widget1\": \"chart\", \"widget2\": \"table\"}'",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nUPSERT INTO Dashboard (dashboard_id, dashboard_name, layout, widgets) VALUES (2, 'Dashboard2', '{\"type\": \"list\", \"count\": 5}', '{\"widget1\": \"heatmap\", \"widget2\": \"table\"}') ON CONFLICT (dashboard_id) DO UPDATE SET dashboard_name = 'Dashboard2', layout = '{\"type\": \"list\", \"count\": 5}', widgets = '{\"widget1\": \"heatmap\", \"widget2\": \"table\"}'",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nUPSERT INTO Dashboard (dashboard_id, dashboard_name, layout, widgets) VALUES (3, 'Dashboard3', '{\"type\": \"grid\", \"columns\": 2}', '{\"widget1\": \"map\", \"widget2\": \"list\"}') ON CONFLICT (dashboard_id) DO UPDATE SET dashboard_name = 'Dashboard3', layout = '{\"type\": \"grid\", \"columns\": 2}', widgets = '{\"widget1\": \"map\", \"widget2\": \"list\"}'",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO Sensors (sensor_id, sensor_name, location, status) VALUES (1, 'Temperature Sensor', 'Room A', true) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, location = excluded.location, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO Sensors (sensor_id, sensor_name, location, status) VALUES (2, 'Humidity Sensor', 'Room B', true) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, location = excluded.location, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO Sensors (sensor_id, sensor_name, location, status) VALUES (3, 'Light Sensor', 'Room C', false) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, location = excluded.location, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO Sensors (sensor_id, sensor_name, location, status) VALUES (4, 'Pressure Sensor', 'Room D', true) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, location = excluded.location, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO Sensors (sensor_id, sensor_name, location, status) VALUES (5, 'Sound Sensor', 'Room E', false) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, location = excluded.location, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO Sensors (sensor_id, sensor_name, location, status) VALUES (6, 'Motion Sensor', 'Room F', true) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, location = excluded.location, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO Sensors (sensor_id, sensor_name, location, status) VALUES (7, 'Smoke Sensor', 'Room G', false) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, location = excluded.location, status = excluded.status;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO SensorData (data_id, sensor_id, timestamp, value) VALUES (1, 1, '2022-01-01 12:00:00', 25.5) ON CONFLICT (data_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, value = excluded.value;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO SensorData (data_id, sensor_id, timestamp, value) VALUES (2, 2, '2022-01-01 12:00:00', 60.0) ON CONFLICT (data_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, value = excluded.value;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO SensorData (data_id, sensor_id, timestamp, value) VALUES (3, 3, '2022-01-01 12:00:00', 800.0) ON CONFLICT (data_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, value = excluded.value;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO SensorData (data_id, sensor_id, timestamp, value) VALUES (4, 4, '2022-01-01 12:00:00', 100.0) ON CONFLICT (data_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, value = excluded.value;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO SensorData (data_id, sensor_id, timestamp, value) VALUES (5, 5, '2022-01-01 12:00:00', 30.0) ON CONFLICT (data_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, value = excluded.value;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO Dashboard (dashboard_id, dashboard_name, layout, widgets) VALUES (1, 'Dashboard 1', '{\"grid\": 4, \"rows\": [{\"widgets\": [\"Widget 1\", \"Widget 2\"]}, {\"widgets\": [\"Widget 3\"]}]}', '{\"Widget 1\": {\"type\": \"Chart\", \"data\": {\"title\": \"Temperature Data\"}}}') ON CONFLICT (dashboard_id) DO UPDATE SET dashboard_name = excluded.dashboard_name, layout = excluded.layout, widgets = excluded.widgets;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO Dashboard (dashboard_id, dashboard_name, layout, widgets) VALUES (2, 'Dashboard 2', '{\"grid\": 6, \"rows\": [{\"widgets\": [\"Widget 4\"]}, {\"widgets\": [\"Widget 5\", \"Widget 6\"]}]}', '{\"Widget 4\": {\"type\": \"Table\", \"data\": {\"title\": \"Humidity Data\"}}}') ON CONFLICT (dashboard_id) DO UPDATE SET dashboard_name = excluded.dashboard_name, layout = excluded.layout, widgets = excluded.widgets;",
  "### TABLEDATA\n\nCREATE TABLE Sensors (sensor_id INT PRIMARY KEY,\n sensor_name VARCHAR(50),\n location VARCHAR(50),\n status BOOLEAN)\n\nCREATE TABLE SensorData (data_id INT PRIMARY KEY,\n sensor_id INT,\n timestamp TIMESTAMP,\n value FLOAT,\n FOREIGN KEY (sensor_id) REFERENCES Sensors(sensor_id))\n\nCREATE TABLE Dashboard (dashboard_id INT PRIMARY KEY,\n dashboard_name VARCHAR(50),\n layout JSON,\n widgets JSON)\n\n### STATEMENT\n\nINSERT INTO Dashboard (dashboard_id, dashboard_name, layout, widgets) VALUES (3, 'Dashboard 3', '{\"grid\": 8, \"rows\": [{\"widgets\": [\"Widget 7\"]}]}', '{\"Widget 7\": {\"type\": \"Map\", \"data\": {\"location\": \"Room C\"}}}') ON CONFLICT (dashboard_id) DO UPDATE SET dashboard_name = excluded.dashboard_name, layout = excluded.layout, widgets = excluded.widgets;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO sensors (sensor_name, sensor_location, sensor_type, sensor_status) VALUES ('Temperature Sensor 1', 'Room A', 'Temperature', TRUE) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = EXCLUDED.sensor_name, sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_status = EXCLUDED.sensor_status;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO sensors (sensor_name, sensor_location, sensor_type, sensor_status) VALUES ('Humidity Sensor 1', 'Room B', 'Humidity', TRUE) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = EXCLUDED.sensor_name, sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_status = EXCLUDED.sensor_status;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO sensors (sensor_name, sensor_location, sensor_type, sensor_status) VALUES ('Pressure Sensor 1', 'Room C', 'Pressure', TRUE) ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = EXCLUDED.sensor_name, sensor_location = EXCLUDED.sensor_location, sensor_type = EXCLUDED.sensor_type, sensor_status = EXCLUDED.sensor_status;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, data_value, data_timestamp) VALUES (1, 25.3, NOW()) ON CONFLICT (data_id) DO UPDATE SET sensor_id = EXCLUDED.sensor_id, data_value = EXCLUDED.data_value, data_timestamp = EXCLUDED.data_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, data_value, data_timestamp) VALUES (2, 60.5, NOW()) ON CONFLICT (data_id) DO UPDATE SET sensor_id = EXCLUDED.sensor_id, data_value = EXCLUDED.data_value, data_timestamp = EXCLUDED.data_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO sensor_data (sensor_id, data_value, data_timestamp) VALUES (3, 1002, NOW()) ON CONFLICT (data_id) DO UPDATE SET sensor_id = EXCLUDED.sensor_id, data_value = EXCLUDED.data_value, data_timestamp = EXCLUDED.data_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO alerts (sensor_id, alert_description, alert_timestamp) VALUES (1, 'High Temperature', NOW()) ON CONFLICT (alert_id) DO UPDATE SET sensor_id = EXCLUDED.sensor_id, alert_description = EXCLUDED.alert_description, alert_timestamp = EXCLUDED.alert_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO alerts (sensor_id, alert_description, alert_timestamp) VALUES (2, 'Low Humidity', NOW()) ON CONFLICT (alert_id) DO UPDATE SET sensor_id = EXCLUDED.sensor_id, alert_description = EXCLUDED.alert_description, alert_timestamp = EXCLUDED.alert_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO alerts (sensor_id, alert_description, alert_timestamp) VALUES (3, 'High Pressure', NOW()) ON CONFLICT (alert_id) DO UPDATE SET sensor_id = EXCLUDED.sensor_id, alert_description = EXCLUDED.alert_description, alert_timestamp = EXCLUDED.alert_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO dashboard (dashboard_name, dashboard_description, dashboard_created_at) VALUES ('Weather Dashboard', 'Real-time weather data', NOW()) ON CONFLICT (dashboard_id) DO UPDATE SET dashboard_name = EXCLUDED.dashboard_name, dashboard_description = EXCLUDED.dashboard_description, dashboard_created_at = EXCLUDED.dashboard_created_at;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_name, sensor_location, sensor_type, sensor_status) VALUES ('Temperature Sensor', 'Room A', 'Temperature', TRUE) ON CONFLICT (sensor_name) DO UPDATE SET sensor_location = 'Room A', sensor_type = 'Temperature', sensor_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_name, sensor_location, sensor_type, sensor_status) VALUES ('Humidity Sensor', 'Room B', 'Humidity', TRUE) ON CONFLICT (sensor_name) DO UPDATE SET sensor_location = 'Room B', sensor_type = 'Humidity', sensor_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_name, sensor_location, sensor_type, sensor_status) VALUES ('Pressure Sensor', 'Room C', 'Pressure', TRUE) ON CONFLICT (sensor_name) DO UPDATE SET sensor_location = 'Room C', sensor_type = 'Pressure', sensor_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, data_value, data_timestamp) VALUES (1, 25.5, '2022-01-10 08:00:00-05:00') ON CONFLICT DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, data_value, data_timestamp) VALUES (2, 60.2, '2022-01-10 08:30:00-05:00') ON CONFLICT DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO sensor_data (sensor_id, data_value, data_timestamp) VALUES (3, 1001.3, '2022-01-10 09:00:00-05:00') ON CONFLICT DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO alerts (sensor_id, alert_description, alert_timestamp) VALUES (1, 'Temperature too high', '2022-01-10 08:15:00-05:00') ON CONFLICT DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO alerts (sensor_id, alert_description, alert_timestamp) VALUES (2, 'Humidity level critical', '2022-01-10 08:45:00-05:00') ON CONFLICT DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO alerts (sensor_id, alert_description, alert_timestamp) VALUES (3, 'Pressure above limit', '2022-01-10 09:15:00-05:00') ON CONFLICT DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n    sensor_id SERIAL PRIMARY KEY,\n    sensor_name VARCHAR(50) NOT NULL,\n    sensor_location VARCHAR(50) NOT NULL,\n    sensor_type VARCHAR(50) NOT NULL,\n    sensor_status BOOLEAN NOT NULL\n);\n\nCREATE TABLE sensor_data (\n    data_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    data_value FLOAT NOT NULL,\n    data_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE alerts (\n    alert_id SERIAL PRIMARY KEY,\n    sensor_id INT NOT NULL,\n    alert_description TEXT NOT NULL,\n    alert_timestamp TIMESTAMPTZ NOT NULL,\n    FOREIGN KEY (sensor_id) REFERENCES sensors(sensor_id)\n);\n\nCREATE TABLE dashboard (\n    dashboard_id SERIAL PRIMARY KEY,\n    dashboard_name VARCHAR(50) NOT NULL,\n    dashboard_description TEXT,\n    dashboard_created_at TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO dashboard (dashboard_name, dashboard_description, dashboard_created_at) VALUES ('Main Dashboard', 'Overview of all sensors', '2022-01-10 10:00:00-05:00') ON CONFLICT (dashboard_name) DO UPDATE SET dashboard_description = 'Dashboard for monitoring sensors';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensors (sensor_id, sensor_name, location, status) VALUES ('1', 'Sensor1', 'Location1', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, location = excluded.location, status = excluded.status",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensors (sensor_id, sensor_name, location, status) VALUES ('2', 'Sensor2', 'Location2', 'Inactive') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, location = excluded.location, status = excluded.status",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensors (sensor_id, sensor_name, location, status) VALUES ('3', 'Sensor3', 'Location3', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, location = excluded.location, status = excluded.status",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensors (sensor_id, sensor_name, location, status) VALUES ('4', 'Sensor4', 'Location4', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, location = excluded.location, status = excluded.status",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensors (sensor_id, sensor_name, location, status) VALUES ('5', 'Sensor5', 'Location5', 'Inactive') ON CONFLICT (sensor_id) DO UPDATE SET sensor_name = excluded.sensor_name, location = excluded.location, status = excluded.status",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensor_data (data_id, sensor_id, timestamp, value) VALUES ('1', '1', '2022-01-01 08:00:00', 10.5) ON CONFLICT (data_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, value = excluded.value",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensor_data (data_id, sensor_id, timestamp, value) VALUES ('2', '2', '2022-01-02 09:00:00', 20.3) ON CONFLICT (data_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, value = excluded.value",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensor_data (data_id, sensor_id, timestamp, value) VALUES ('3', '3', '2022-01-03 10:00:00', 15.7) ON CONFLICT (data_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, value = excluded.value",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensor_data (data_id, sensor_id, timestamp, value) VALUES ('4', '4', '2022-01-04 11:00:00', 18.9) ON CONFLICT (data_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, value = excluded.value",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensor_data (data_id, sensor_id, timestamp, value) VALUES ('5', '5', '2022-01-05 12:00:00', 30.2) ON CONFLICT (data_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, value = excluded.value",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensor_alerts (alert_id, sensor_id, timestamp, message) VALUES ('1', '1', '2022-01-01 08:30:00', 'Sensor 1 alert message') ON CONFLICT (alert_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, message = excluded.message",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensor_alerts (alert_id, sensor_id, timestamp, message) VALUES ('2', '2', '2022-01-02 09:30:00', 'Sensor 2 alert message') ON CONFLICT (alert_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, message = excluded.message",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensor_alerts (alert_id, sensor_id, timestamp, message) VALUES ('3', '3', '2022-01-03 10:30:00', 'Sensor 3 alert message') ON CONFLICT (alert_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, message = excluded.message",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensor_alerts (alert_id, sensor_id, timestamp, message) VALUES ('4', '4', '2022-01-04 11:30:00', 'Sensor 4 alert message') ON CONFLICT (alert_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, message = excluded.message",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO sensor_alerts (alert_id, sensor_id, timestamp, message) VALUES ('5', '5', '2022-01-05 12:30:00', 'Sensor 5 alert message') ON CONFLICT (alert_id) DO UPDATE SET sensor_id = excluded.sensor_id, timestamp = excluded.timestamp, message = excluded.message",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO dashboard_users (user_id, username, email) VALUES ('1', 'User1', 'user1@example.com') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO dashboard_users (user_id, username, email) VALUES ('2', 'User2', 'user2@example.com') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO dashboard_users (user_id, username, email) VALUES ('3', 'User3', 'user3@example.com') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO dashboard_users (user_id, username, email) VALUES ('4', 'User4', 'user4@example.com') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO dashboard_users (user_id, username, email) VALUES ('5', 'User5', 'user5@example.com') ON CONFLICT (user_id) DO UPDATE SET username = excluded.username, email = excluded.email",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO dashboard_logs (log_id, timestamp, action, user_id) VALUES ('1', '2022-01-01 08:30:00', 'Login', '1') ON CONFLICT (log_id) DO UPDATE SET timestamp = excluded.timestamp, action = excluded.action, user_id = excluded.user_id",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO dashboard_logs (log_id, timestamp, action, user_id) VALUES ('2', '2022-01-02 09:30:00', 'Logout', '2') ON CONFLICT (log_id) DO UPDATE SET timestamp = excluded.timestamp, action = excluded.action, user_id = excluded.user_id",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO dashboard_logs (log_id, timestamp, action, user_id) VALUES ('3', '2022-01-03 10:30:00', 'View Dashboard', '3') ON CONFLICT (log_id) DO UPDATE SET timestamp = excluded.timestamp, action = excluded.action, user_id = excluded.user_id",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO dashboard_logs (log_id, timestamp, action, user_id) VALUES ('4', '2022-01-04 11:30:00', 'Edit Profile', '4') ON CONFLICT (log_id) DO UPDATE SET timestamp = excluded.timestamp, action = excluded.action, user_id = excluded.user_id",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nUPSERT INTO dashboard_logs (log_id, timestamp, action, user_id) VALUES ('5', '2022-01-05 12:30:00', 'Create Dashboard', '5') ON CONFLICT (log_id) DO UPDATE SET timestamp = excluded.timestamp, action = excluded.action, user_id = excluded.user_id",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, location, status) VALUES ('c2e29caa-26cc-4a7f-8667-0d8861105e00', 'Temperature Sensor', 'Room A', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET location = 'Room B', status = 'Inactive';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO sensor_data (data_id, sensor_id, timestamp, value) VALUES ('3e7c5e3b-cb8c-4e10-b8a8-19b14a62cae1', 'c2e29caa-26cc-4a7f-8667-0d8861105e00', '2022-02-15 10:30:00', 25.5) ON CONFLICT (data_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO sensor_alerts (alert_id, sensor_id, timestamp, message) VALUES ('f7af0923-7c52-4688-94e6-6034e2e2db5f', 'c2e29caa-26cc-4a7f-8667-0d8861105e00', '2022-02-15 10:35:00', 'Temperature above threshold') ON CONFLICT (alert_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO dashboard_users (user_id, username, email) VALUES ('bfddafb9-7250-4bb5-9e6f-575b3941b906', 'john_doe', 'john.doe@example.com') ON CONFLICT (user_id) DO UPDATE SET email = 'j.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO dashboard_logs (log_id, timestamp, action, user_id) VALUES ('e88a365d-bcf3-40ea-8f9f-004c6d5006d1', '2022-02-15 10:40:00', 'Viewed Dashboard', 'bfddafb9-7250-4bb5-9e6f-575b3941b906') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, location, status) VALUES ('83e75c3e-18e9-4c27-91da-bdf46371d5dc', 'Pressure Sensor', 'Room C', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET location = 'Room D', status = 'Inactive';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO sensor_data (data_id, sensor_id, timestamp, value) VALUES ('3d98dcfc-3b68-4b4d-846b-cfd4a8e8c6eb', '83e75c3e-18e9-4c27-91da-bdf46371d5dc', '2022-02-15 10:45:00', 30.2) ON CONFLICT (data_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO sensor_alerts (alert_id, sensor_id, timestamp, message) VALUES ('ff7ba8df-42d6-4453-af7d-3ea360c6cf14', '83e75c3e-18e9-4c27-91da-bdf46371d5dc', '2022-02-15 10:50:00', 'Pressure anomaly detected') ON CONFLICT (alert_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO dashboard_users (user_id, username, email) VALUES ('92c05505-2193-4cbc-93f6-6b0c6102de22', 'jane_smith', 'jane.smith@example.com') ON CONFLICT (user_id) DO UPDATE SET email = 'j.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO dashboard_logs (log_id, timestamp, action, user_id) VALUES ('1ad2ae04-7758-4e08-8d80-0495772b5e6e', '2022-02-15 10:55:00', 'Filtered Data', '92c05505-2193-4cbc-93f6-6b0c6102de22') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, location, status) VALUES ('09eee221-0f15-4f85-8814-9054b3ea38ae', 'Humidity Sensor', 'Room E', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET location = 'Room F', status = 'Inactive';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO sensor_data (data_id, sensor_id, timestamp, value) VALUES ('a2afbbbe-ef69-4116-ba07-c8e4ec95af4b', '09eee221-0f15-4f85-8814-9054b3ea38ae', '2022-02-15 11:00:00', 60.8) ON CONFLICT (data_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO sensor_alerts (alert_id, sensor_id, timestamp, message) VALUES ('c49583ee-fac8-4ad0-ba5f-8af9f9d3a5ea', '09eee221-0f15-4f85-8814-9054b3ea38ae', '2022-02-15 11:05:00', 'Humidity out of range') ON CONFLICT (alert_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO dashboard_users (user_id, username, email) VALUES ('f8566081-5e45-445c-92cf-d96340f16f57', 'bob_jackson', 'bob.jackson@example.com') ON CONFLICT (user_id) DO UPDATE SET email = 'b.jackson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO dashboard_logs (log_id, timestamp, action, user_id) VALUES ('24a6e206-1795-40cb-b35f-2bd993885bac', '2022-02-15 11:10:00', 'Exported Data', 'f8566081-5e45-445c-92cf-d96340f16f57') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO sensors (sensor_id, sensor_name, location, status) VALUES ('850c56c0-4687-4587-ae53-a9c8db65c4d0', 'Light Sensor', 'Room G', 'Active') ON CONFLICT (sensor_id) DO UPDATE SET location = 'Room H', status = 'Inactive';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO sensor_data (data_id, sensor_id, timestamp, value) VALUES ('6d49c175-d3b4-451e-bb9d-2418a4cda0f1', '850c56c0-4687-4587-ae53-a9c8db65c4d0', '2022-02-15 11:15:00', 800) ON CONFLICT (data_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO sensor_alerts (alert_id, sensor_id, timestamp, message) VALUES ('6b9c94f2-083d-488d-9e03-01c06a6fd1f6', '850c56c0-4687-4587-ae53-a9c8db65c4d0', '2022-02-15 11:20:00', 'Light intensity too high') ON CONFLICT (alert_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO dashboard_users (user_id, username, email) VALUES ('1bfdafe6-852d-4f81-9d3c-242f891d4a2c', 'anna_johnson', 'anna.johnson@example.com') ON CONFLICT (user_id) DO UPDATE SET email = 'a.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id UUID PRIMARY KEY,\n  sensor_name TEXT,\n  location TEXT,\n  status TEXT\n)\n\nCREATE TABLE sensor_data (\n  data_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  value FLOAT\n)\n\nCREATE TABLE sensor_alerts (\n  alert_id UUID PRIMARY KEY,\n  sensor_id UUID,\n  timestamp TIMESTAMP,\n  message TEXT\n)\n\nCREATE TABLE dashboard_users (\n  user_id UUID PRIMARY KEY,\n  username TEXT,\n  email TEXT\n)\n\nCREATE TABLE dashboard_logs (\n  log_id UUID PRIMARY KEY,\n  timestamp TIMESTAMP,\n  action TEXT,\n  user_id UUID\n)\n\n### STATEMENT\n\nINSERT INTO dashboard_logs (log_id, timestamp, action, user_id) VALUES ('99791287-5ef6-4ee1-8ae8-3cf1ae608d4c', '2022-02-15 11:25:00', 'Downloaded Report', '1bfdafe6-852d-4f81-9d3c-242f891d4a2c') ON CONFLICT (log_id) DO NOTHING;"
]