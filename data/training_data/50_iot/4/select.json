[
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM iot_data WHERE device_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, sensor_data FROM iot_data WHERE sensor_data > 50;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM iot_data WHERE data_time BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT AVG(sensor_data) AS avg_sensor_data FROM iot_data WHERE device_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM iot_data WHERE prediction_result = 'success';",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT MAX(sensor_data) AS max_sensor_data FROM iot_data;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, MIN(sensor_data) AS min_sensor_data FROM iot_data GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM iot_data WHERE prediction_result IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) AS records FROM iot_data GROUP BY device_id HAVING records > 10;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT prediction_result, COUNT(*) AS result_count FROM iot_data GROUP BY prediction_result;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT DISTINCT device_id FROM iot_data;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM iot_data ORDER BY data_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, AVG(sensor_data) AS avg_sensor_data FROM iot_data GROUP BY device_id HAVING avg_sensor_data > 30;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM iot_data LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, SUM(sensor_data) AS total_sensor_data FROM iot_data GROUP BY device_id ORDER BY total_sensor_data DESC;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, AVG(sensor_data) AS avg_sensor_data FROM iot_data WHERE prediction_result = 'error' GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT device_id) AS unique_devices FROM iot_data;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM iot_data WHERE sensor_data = (SELECT MAX(sensor_data) FROM iot_data);",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) AS records FROM iot_data WHERE sensor_data > 50 GROUP BY device_id HAVING records > 5;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, data_time, sensor_data FROM iot_data WHERE device_id = 3 ORDER BY data_time ASC;",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, sensor_data FROM iot_data WHERE sensor_data > 50 AND prediction_result = 'High'",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, external_source_id, data_time FROM iot_data WHERE device_id = 123 AND external_source_id = 456 ORDER BY data_time DESC",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, AVG(sensor_data) as avg_sensor_data FROM iot_data GROUP BY device_id HAVING COUNT(device_id) > 10",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT AVG(sensor_data) as avg_sensor_data FROM iot_data WHERE device_id = 789",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT MAX(sensor_data) as max_sensor_data, MIN(sensor_data) as min_sensor_data FROM iot_data WHERE prediction_result = 'Low'",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) as total_records FROM iot_data WHERE sensor_data < 10 GROUP BY device_id HAVING total_records > 5",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, prediction_result, COUNT(*) as total_records FROM iot_data WHERE prediction_result IN ('High', 'Medium') GROUP BY device_id, prediction_result HAVING COUNT(*) > 1",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, DATE(data_time) as date, SUM(sensor_data) as total_sensor_data FROM iot_data GROUP BY device_id, date",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, prediction_result, AVG(sensor_data) as avg_sensor_data FROM iot_data WHERE sensor_data BETWEEN 20 AND 50 AND prediction_result = 'Medium'",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT DISTINCT device_id FROM iot_data WHERE sensor_data > 100",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, sensor_data, prediction_result FROM iot_data WHERE device_id IN (123, 456, 789)",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, sensor_data FROM iot_data WHERE data_time >= '2022-01-01' AND data_time < '2022-02-01'",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT TOP 5 device_id, sensor_data FROM iot_data ORDER BY sensor_data DESC",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(DISTINCT prediction_result) as count_distinct_predictions FROM iot_data WHERE sensor_data > 30 GROUP BY device_id HAVING count_distinct_predictions > 1",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, sensor_data FROM iot_data WHERE MONTH(data_time) = 6",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, sensor_data FROM iot_data WHERE YEAR(data_time) = 2022",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, sensor_data FROM iot_data WHERE sensor_data = (SELECT MAX(sensor_data) FROM iot_data WHERE prediction_result = 'High')",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, sensor_data FROM iot_data WHERE device_id NOT IN (SELECT DISTINCT device_id FROM iot_data WHERE sensor_data < 10)",
  "### TABLEDATA\n\nCREATE TABLE iot_data (\n    device_id INT,\n    external_source_id INT,\n    data_time TIMESTAMP,\n    sensor_data FLOAT,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, sensor_data FROM iot_data WHERE device_id = 123 UNION SELECT device_id, sensor_data FROM iot_data WHERE device_id = 456",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM IoT_Data LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, data_value FROM IoT_Data WHERE sensor_id = 1",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT source_name FROM External_Sources",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM External_Sources WHERE data_type = 'temperature'",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(data_value) FROM IoT_Data",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(data_value) FROM IoT_Data",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(data_value) FROM IoT_Data",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM IoT_Data",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, sensor_id, timestamp FROM IoT_Data ORDER BY timestamp DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT source_id, source_name FROM External_Sources WHERE last_updated > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT sensor_id FROM IoT_Data",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(data_value) AS average_value FROM IoT_Data GROUP BY sensor_id",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, sensor_id, timestamp, data_value FROM IoT_Data WHERE device_id = 1",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT source_id, source_name, data_type FROM External_Sources WHERE data_type IN ('temperature', 'humidity')",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM IoT_Data WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, MAX(data_value) FROM IoT_Data GROUP BY device_id",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT sensor_id, COUNT(*) FROM IoT_Data GROUP BY sensor_id HAVING COUNT(*) > 100",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT source_id, MAX(last_updated) FROM External_Sources GROUP BY source_id",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(data_value) AS average_value FROM IoT_Data WHERE sensor_id = 1",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT source_id, source_name FROM External_Sources ORDER BY last_updated DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM IoT_Data WHERE device_id = 1 AND sensor_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, AVG(data_value) FROM IoT_Data GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM IoT_Data WHERE data_value > 100 AND timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, sensor_id, COUNT(*) FROM IoT_Data GROUP BY device_id, sensor_id;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, MAX(data_value) FROM IoT_Data WHERE sensor_id = 3 GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT sensor_id FROM IoT_Data;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM External_Sources WHERE last_updated < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT source_name, COUNT(*) FROM External_Sources GROUP BY source_name;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, MIN(data_value), MAX(data_value) FROM IoT_Data GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT source_id, source_name FROM External_Sources WHERE data_type = 'temperature';",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, AVG(data_value) FROM IoT_Data WHERE timestamp > '2022-01-01' GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, sensor_id, AVG(data_value) FROM IoT_Data GROUP BY device_id, sensor_id HAVING AVG(data_value) > 50;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM IoT_Data ORDER BY timestamp DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) AS total_count FROM IoT_Data GROUP BY device_id ORDER BY total_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT source_name, MAX(last_updated) FROM External_Sources GROUP BY source_name;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, sensor_id, MIN(data_value) FROM IoT_Data WHERE device_id = 2 GROUP BY device_id, sensor_id;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, AVG(data_value) FROM IoT_Data WHERE sensor_id IN (1, 2) GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT source_id, source_name FROM External_Sources WHERE last_updated BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) AS total_count FROM IoT_Data WHERE data_value > 50 GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n  device_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP,\n  data_value FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n  source_id INT,\n  source_name VARCHAR(255),\n  data_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, MIN(timestamp), MAX(timestamp) FROM IoT_Data GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM sensors;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT sensor_id, location FROM sensors;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT sensor_id, type FROM sensors WHERE status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT sensor_id, location, type FROM sensors WHERE location = 'Room 101';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM external_sources;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT source_name, data_type FROM external_sources;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT source_name, source_url FROM external_sources WHERE data_type = 'temperature';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM maintenance_tasks;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT task_name, description FROM maintenance_tasks;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT task_id, schedule_time FROM maintenance_tasks WHERE completion_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT sensor_id, location FROM sensors ORDER BY location ASC;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT sensor_id, location, type FROM sensors WHERE location LIKE '%Corridor%';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT source_name, source_url FROM external_sources ORDER BY source_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT task_name, description FROM maintenance_tasks WHERE description LIKE '%inspection%';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT sensor_id, status FROM sensors WHERE status IN ('active', 'inactive');",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT source_name, source_url FROM external_sources WHERE data_type IN ('humidity', 'pressure');",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT task_id, completion_status FROM maintenance_tasks WHERE completion_status = 'complete' AND schedule_time >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT sensor_id, location, type FROM sensors LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT source_name, source_url FROM external_sources LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT task_name, description FROM maintenance_tasks ORDER BY schedule_time ASC LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM sensors WHERE type = 'temperature';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT location, status FROM sensors WHERE status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM sensors WHERE location LIKE '%room%';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT s.sensor_id, s.location, e.source_name FROM sensors s JOIN external_sources e ON s.sensor_id = e.source_id;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT s.sensor_id, s.type, m.task_name FROM sensors s JOIN maintenance_tasks m ON s.sensor_id = m.task_id;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT s.*, e.* FROM sensors s, external_sources e WHERE s.sensor_id = e.source_id;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT s.*, m.task_name FROM sensors s, maintenance_tasks m WHERE s.sensor_id = m.task_id AND m.completion_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT location, type, schedule_time FROM sensors JOIN maintenance_tasks ON sensors.sensor_id = maintenance_tasks.task_id;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT s.location, e.source_name, m.description FROM sensors s JOIN external_sources e ON s.sensor_id = e.source_id JOIN maintenance_tasks m ON s.sensor_id = m.task_id;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT s.location, e.source_name, m.description FROM sensors s LEFT JOIN external_sources e ON s.sensor_id = e.source_id LEFT JOIN maintenance_tasks m ON s.sensor_id = m.task_id;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM sensors ORDER BY location ASC;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM sensors ORDER BY type DESC;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT AVG(sensor_id) AS avg_sensor_id FROM sensors;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT MAX(sensor_id) AS max_sensor_id FROM sensors;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT COUNT(sensor_id) AS total_sensors FROM sensors;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT e.source_name, COUNT(s.sensor_id) AS total_sensors FROM external_sources e JOIN sensors s ON e.source_id = s.sensor_id GROUP BY e.source_name;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT location, COUNT(sensor_id) AS total_sensors FROM sensors GROUP BY location HAVING COUNT(sensor_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT AVG(sensor_id) AS avg_sensor_id, AVG(location) AS avg_location FROM sensors;",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM sensors WHERE sensor_id IN (SELECT source_id FROM external_sources WHERE data_type = 'humidity');",
  "### TABLEDATA\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  location VARCHAR(50),\n  type VARCHAR(50),\n  status VARCHAR(20)\n)\n\nCREATE TABLE external_sources (\n  source_id INT PRIMARY KEY,\n  source_name VARCHAR(50),\n  data_type VARCHAR(50),\n  source_url VARCHAR(100)\n)\n\nCREATE TABLE maintenance_tasks (\n  task_id INT PRIMARY KEY,\n  task_name VARCHAR(50),\n  description TEXT,\n  schedule_time TIMESTAMP,\n  completion_status VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM sensors WHERE sensor_id NOT IN (SELECT task_id FROM maintenance_tasks WHERE completion_status = 'completed');",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM iot_devices;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_name, location FROM iot_devices;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, location FROM iot_devices WHERE status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM external_sources;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT source_name, location FROM external_sources;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT source_id, source_name, location FROM external_sources WHERE api_key IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM maintenance_logs;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, log_date, description FROM maintenance_logs;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT log_id, device_id, log_date, description FROM maintenance_logs WHERE log_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM predictive_maintenance;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, prediction_date, prediction_result FROM predictive_maintenance;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT prediction_id, device_id, prediction_date, prediction_result FROM predictive_maintenance WHERE prediction_date < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_name, location FROM iot_devices WHERE status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT source_name, location FROM external_sources WHERE api_key IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT log_id, device_id, log_date FROM maintenance_logs WHERE description LIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT prediction_id, device_id, prediction_date, prediction_result FROM predictive_maintenance WHERE prediction_result = 'maintenance required';",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, log_date, description FROM maintenance_logs ORDER BY log_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT prediction_id, device_id, prediction_date, prediction_result FROM predictive_maintenance ORDER BY prediction_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT AVG(prediction_date) AS avg_prediction_date FROM predictive_maintenance;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_logs FROM maintenance_logs;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM iot_devices;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM iot_devices WHERE status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT source_name, location FROM external_sources WHERE api_key IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, log_date, description FROM maintenance_logs ORDER BY log_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_name, location FROM iot_devices WHERE location LIKE '%Floor%';",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, prediction_date, prediction_result FROM predictive_maintenance WHERE prediction_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT DISTINCT(location) FROM iot_devices;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, location, status FROM iot_devices WHERE status = FALSE ORDER BY device_name;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT log_id, device_id, log_date FROM maintenance_logs WHERE description ILIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM predictive_maintenance WHERE prediction_result IN ('Good', 'Fair');",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM maintenance_logs;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_name, COUNT(*) AS total_logs FROM maintenance_logs INNER JOIN iot_devices ON maintenance_logs.device_id = iot_devices.device_id GROUP BY device_name;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, log_date, description FROM maintenance_logs WHERE device_id IN (SELECT device_id FROM predictive_maintenance WHERE prediction_result = 'Poor');",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) AS total_predictions FROM predictive_maintenance GROUP BY device_id ORDER BY total_predictions DESC;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_name, location, COUNT(*) AS total_predictions FROM predictive_maintenance INNER JOIN iot_devices ON predictive_maintenance.device_id = iot_devices.device_id GROUP BY device_name, location;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, location, status FROM iot_devices WHERE device_id IN (SELECT device_id FROM maintenance_logs WHERE EXTRACT(MONTH FROM log_date) = 3);",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT prediction_date, COUNT(*) AS total_predictions FROM predictive_maintenance GROUP BY prediction_date HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, MAX(log_date) AS latest_log_date FROM maintenance_logs GROUP BY device_id, device_name;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT source_name, COUNT(*) AS total_devices FROM external_sources INNER JOIN iot_devices ON external_sources.source_id = iot_devices.device_id GROUP BY source_name;",
  "### TABLEDATA\n\nCREATE TABLE iot_devices (\n    device_id UUID PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status BOOLEAN\n);\n\nCREATE TABLE external_sources (\n    source_id UUID PRIMARY KEY,\n    source_name VARCHAR(255),\n    location VARCHAR(255),\n    api_key VARCHAR(255)\n);\n\nCREATE TABLE maintenance_logs (\n    log_id UUID PRIMARY KEY,\n    device_id UUID,\n    log_date TIMESTAMP,\n    description TEXT\n);\n\nCREATE TABLE predictive_maintenance (\n    prediction_id UUID PRIMARY KEY,\n    device_id UUID,\n    prediction_date TIMESTAMP,\n    prediction_result VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT device_id, location, COUNT(*) AS total_logs FROM maintenance_logs INNER JOIN iot_devices ON maintenance_logs.device_id = iot_devices.device_id GROUP BY device_id, location ORDER BY total_logs DESC;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM IoT_Data;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT sensor_id, timestamp, value FROM IoT_Data WHERE sensor_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT timestamp, value FROM IoT_Data WHERE timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM External_Sources WHERE data_type = 'temperature';",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT source_id, data_type, data_value FROM External_Sources WHERE source_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Maintenance_Records WHERE device_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT timestamp, maintenance_type FROM Maintenance_Records WHERE maintenance_type = 'scheduled';",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Devices WHERE device_type = 'sensor';",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM Devices WHERE device_type = 'actuator';",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Predictive_Maintenance WHERE confidence_level > 0.9;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT prediction_id, device_id, predicted_failure_date FROM Predictive_Maintenance WHERE device_id = 200;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Predictive_Maintenance WHERE predicted_failure_date >= '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM IoT_Data JOIN Devices ON IoT_Data.sensor_id = Devices.sensor_id;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Devices LEFT JOIN Predictive_Maintenance ON Devices.device_id = Predictive_Maintenance.device_id;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM External_Sources JOIN Maintenance_Records ON External_Sources.timestamp = Maintenance_Records.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT sensor_id, value FROM IoT_Data WHERE timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, sensor_id FROM Devices WHERE device_name LIKE 'Temperature%';",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, device_type FROM Devices ORDER BY device_type DESC;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, sensor_id FROM Devices WHERE sensor_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT data_type, data_value FROM External_Sources ORDER BY timestamp ASC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM IoT_Data WHERE value > 100 ORDER BY timestamp DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, device_type FROM Devices WHERE sensor_id IN (SELECT sensor_id FROM IoT_Data WHERE timestamp >= '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT sensor_id, AVG(value) AS avg_value FROM IoT_Data GROUP BY sensor_id HAVING AVG(value) > 50;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(record_id) AS num_records FROM Maintenance_Records GROUP BY device_id ORDER BY num_records DESC;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, COUNT(sensor_id) AS num_sensors FROM Devices GROUP BY device_name HAVING COUNT(sensor_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, TIMESTAMPDIFF(HOUR, timestamp, NOW()) AS hours_since_record FROM Maintenance_Records ORDER BY hours_since_record ASC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, MAX(value) AS max_value FROM Devices INNER JOIN IoT_Data ON Devices.sensor_id = IoT_Data.sensor_id GROUP BY device_name;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT source_id, data_type, COUNT(data_value) AS num_values FROM External_Sources GROUP BY data_type ORDER BY num_values DESC;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, device_type, prediction_id, predicted_failure_date FROM Devices INNER JOIN Predictive_Maintenance ON Devices.device_id = Predictive_Maintenance.device_id WHERE confidence_level > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, AVG(confidence_level) AS avg_confidence FROM Devices INNER JOIN Predictive_Maintenance ON Devices.device_id = Predictive_Maintenance.device_id GROUP BY device_name HAVING AVG(confidence_level) > 0.7;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, device_type, COUNT(prediction_id) AS num_predictions FROM Devices LEFT JOIN Predictive_Maintenance ON Devices.device_id = Predictive_Maintenance.device_id GROUP BY device_name, device_type ORDER BY num_predictions DESC;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, MAX(value) AS max_value FROM Devices INNER JOIN IoT_Data ON Devices.sensor_id = IoT_Data.sensor_id WHERE device_name LIKE 'Device%' GROUP BY device_name HAVING max_value > 200;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, device_type, COUNT(record_id) AS num_records FROM Devices LEFT JOIN Maintenance_Records ON Devices.device_id = Maintenance_Records.device_id GROUP BY device_name, device_type;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, device_type, COUNT(prediction_id) AS num_predictions FROM Devices LEFT JOIN Predictive_Maintenance ON Devices.device_id = Predictive_Maintenance.device_id WHERE predicted_failure_date BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY device_name, device_type ORDER BY num_predictions DESC;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, device_type, maintenance_type FROM Devices LEFT JOIN Maintenance_Records ON Devices.device_id = Maintenance_Records.device_id WHERE maintenance_type IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, device_type, COUNT(data_value) AS num_data_values FROM Devices LEFT JOIN External_Sources ON Devices.device_id = External_Sources.source_id WHERE data_type = 'Temperature' GROUP BY device_name, device_type HAVING num_data_values > 100;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, COUNT(DISTINCT maintenance_type) AS num_maintenance_types FROM Devices LEFT JOIN Maintenance_Records ON Devices.device_id = Maintenance_Records.device_id GROUP BY device_name ORDER BY num_maintenance_types DESC;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, COUNT(DISTINCT data_type) AS num_data_types FROM Devices LEFT JOIN External_Sources ON Devices.device_id = External_Sources.source_id GROUP BY device_name ORDER BY num_data_types DESC;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_name, device_type, AVG(confidence_level) AS avg_confidence FROM Devices INNER JOIN Predictive_Maintenance ON Devices.device_id = Predictive_Maintenance.device_id WHERE predicted_failure_date < NOW() GROUP BY device_name, device_type HAVING AVG(confidence_level) < 0.3;",
  "### TABLEDATA\n\nCREATE TABLE IoT_Data (\n\tsensor_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tvalue FLOAT\n);\n\n\nCREATE TABLE External_Sources (\n\tsource_id SERIAL PRIMARY KEY,\n\ttimestamp TIMESTAMP,\n\tdata_type VARCHAR(50),\n\tdata_value TEXT\n);\n\n\nCREATE TABLE Maintenance_Records (\n\trecord_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tmaintenance_type VARCHAR(50),\n\tmaintenance_description TEXT,\n\ttimestamp TIMESTAMP\n);\n\n\nCREATE TABLE Devices (\n\tdevice_id SERIAL PRIMARY KEY,\n\tdevice_name VARCHAR(50),\n\tdevice_type VARCHAR(50),\n\tsensor_id INT\n);\n\n\nCREATE TABLE Predictive_Maintenance (\n\tprediction_id SERIAL PRIMARY KEY,\n\tdevice_id INT,\n\tpredicted_failure_date TIMESTAMP,\n\tconfidence_level FLOAT\n);\n\n### STATEMENT\n\nSELECT device_type, SUM(value) AS total_value FROM Devices INNER JOIN IoT_Data ON Devices.sensor_id = IoT_Data.sensor_id GROUP BY device_type;"
]