[
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (1, 'backup1', '/path/backup1', 1024, '2022-01-01 12:00:00', '2022-02-01');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (2, 'backup2', '/path/backup2', 2048, '2022-01-02 12:00:00', '2022-02-02');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (3, 'backup3', '/path/backup3', 3072, '2022-01-03 12:00:00', '2022-02-03');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (4, 'backup4', '/path/backup4', 4096, '2022-01-04 12:00:00', '2022-02-04');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (5, 'backup5', '/path/backup5', 5120, '2022-01-05 12:00:00', '2022-02-05');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (6, 'backup6', '/path/backup6', 6144, '2022-01-06 12:00:00', '2022-02-06');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (7, 'backup7', '/path/backup7', 7168, '2022-01-07 12:00:00', '2022-02-07');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (8, 'backup8', '/path/backup8', 8192, '2022-01-08 12:00:00', '2022-02-08');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (9, 'backup9', '/path/backup9', 9216, '2022-01-09 12:00:00', '2022-02-09');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (10, 'backup10', '/path/backup10', 10240, '2022-01-10 12:00:00', '2022-02-10');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (11, 'backup11', '/path/backup11', 11264, '2022-01-11 12:00:00', '2022-02-11');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (12, 'backup12', '/path/backup12', 12288, '2022-01-12 12:00:00', '2022-02-12');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (13, 'backup13', '/path/backup13', 13312, '2022-01-13 12:00:00', '2022-02-13');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (14, 'backup14', '/path/backup14', 14336, '2022-01-14 12:00:00', '2022-02-14');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (15, 'backup15', '/path/backup15', 15360, '2022-01-15 12:00:00', '2022-02-15');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (16, 'backup16', '/path/backup16', 16384, '2022-01-16 12:00:00', '2022-02-16');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (17, 'backup17', '/path/backup17', 17408, '2022-01-17 12:00:00', '2022-02-17');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (18, 'backup18', '/path/backup18', 18432, '2022-01-18 12:00:00', '2022-02-18');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (19, 'backup19', '/path/backup19', 19456, '2022-01-19 12:00:00', '2022-02-19');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (20, 'backup20', '/path/backup20', 20480, '2022-01-20 12:00:00', '2022-02-20');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (1, 'backup1', '/path/to/backup1', 1024, '2022-01-01 12:00:00', '2022-01-02');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (2, 'backup2', '/path/to/backup2', 2048, '2022-01-02 12:00:00', '2022-01-03');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (3, 'backup3', '/path/to/backup3', 3072, '2022-01-03 12:00:00', '2022-01-04');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (4, 'backup4', '/path/to/backup4', 4096, '2022-01-04 12:00:00', '2022-01-05');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (5, 'backup5', '/path/to/backup5', 5120, '2022-01-05 12:00:00', '2022-01-06');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (6, 'backup6', '/path/to/backup6', 6144, '2022-01-06 12:00:00', '2022-01-07');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (7, 'backup7', '/path/to/backup7', 7168, '2022-01-07 12:00:00', '2022-01-08');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (8, 'backup8', '/path/to/backup8', 8192, '2022-01-08 12:00:00', '2022-01-09');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (9, 'backup9', '/path/to/backup9', 9216, '2022-01-09 12:00:00', '2022-01-10');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (10, 'backup10', '/path/to/backup10', 10240, '2022-01-10 12:00:00', '2022-01-11');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (11, 'backup11', '/path/to/backup11', 11264, '2022-01-11 12:00:00', '2022-01-12');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (12, 'backup12', '/path/to/backup12', 12288, '2022-01-12 12:00:00', '2022-01-13');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (13, 'backup13', '/path/to/backup13', 13312, '2022-01-13 12:00:00', '2022-01-14');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (14, 'backup14', '/path/to/backup14', 14336, '2022-01-14 12:00:00', '2022-01-15');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (15, 'backup15', '/path/to/backup15', 15360, '2022-01-15 12:00:00', '2022-01-16');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (16, 'backup16', '/path/to/backup16', 16384, '2022-01-16 12:00:00', '2022-01-17');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (17, 'backup17', '/path/to/backup17', 17408, '2022-01-17 12:00:00', '2022-01-18');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (18, 'backup18', '/path/to/backup18', 18432, '2022-01-18 12:00:00', '2022-01-19');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (19, 'backup19', '/path/to/backup19', 19456, '2022-01-19 12:00:00', '2022-01-20');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n    backup_id INT PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_location VARCHAR(255),\n    backup_size INT,\n    backup_date TIMESTAMP,\n    system_maintenance_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (backup_id, backup_name, backup_location, backup_size, backup_date, system_maintenance_date) VALUES (20, 'backup20', '/path/to/backup20', 20480, '2022-01-20 12:00:00', '2022-01-21');",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (id, backup_date) VALUES (1, '2022-01-01')",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (id, backup_date) VALUES (2, '2022-01-02')",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (id, backup_date) VALUES (3, '2022-01-03')",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (id, backup_date) VALUES (4, '2022-01-04')",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (id, backup_date) VALUES (5, '2022-01-05')",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (id, backup_date) VALUES (6, '2022-01-06')",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (id, backup_date) VALUES (7, '2022-01-07')",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (id, backup_date) VALUES (8, '2022-01-08')",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (id, backup_date) VALUES (9, '2022-01-09')",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO data_backups (id, backup_date) VALUES (10, '2022-01-10')",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_id, task_name, task_description, task_status) VALUES (1, 'Task 1', 'Description for Task 1', TRUE)",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_id, task_name, task_description, task_status) VALUES (2, 'Task 2', 'Description for Task 2', FALSE)",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_id, task_name, task_description, task_status) VALUES (3, 'Task 3', 'Description for Task 3', TRUE)",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_id, task_name, task_description, task_status) VALUES (4, 'Task 4', 'Description for Task 4', FALSE)",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_id, task_name, task_description, task_status) VALUES (5, 'Task 5', 'Description for Task 5', TRUE)",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_id, task_name, task_description, task_status) VALUES (6, 'Task 6', 'Description for Task 6', FALSE)",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_id, task_name, task_description, task_status) VALUES (7, 'Task 7', 'Description for Task 7', TRUE)",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_id, task_name, task_description, task_status) VALUES (8, 'Task 8', 'Description for Task 8', FALSE)",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_id, task_name, task_description, task_status) VALUES (9, 'Task 9', 'Description for Task 9', TRUE)",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_id, task_name, task_description, task_status) VALUES (10, 'Task 10', 'Description for Task 10', FALSE)",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (id, backup_date) VALUES (1, '2022-01-01') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (id, backup_date) VALUES (2, '2022-01-02') ON CONFLICT (id) DO UPDATE SET backup_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO maintenance_tasks (task_id, task_name, task_description, task_status) VALUES (1, 'Task 1', 'Description 1', TRUE) ON CONFLICT (task_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO maintenance_tasks (task_id, task_name, task_description, task_status) VALUES (2, 'Task 2', 'Description 2', FALSE) ON CONFLICT (task_id) DO UPDATE SET task_name = 'Updated Task 2', task_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (id, backup_date) VALUES (3, '2022-01-03') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO data_backups (id, backup_date) VALUES (4, '2022-01-04') ON CONFLICT (id) DO UPDATE SET backup_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO maintenance_tasks (task_id, task_name, task_description, task_status) VALUES (3, 'Task 3', 'Description 3', TRUE) ON CONFLICT (task_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO maintenance_tasks (task_id, task_name, task_description, task_status) VALUES (4, 'Task 4', 'Description 4', FALSE) ON CONFLICT (task_id) DO UPDATE SET task_name = 'Updated Task 4', task_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE data_backups (\n id INT PRIMARY KEY,\n backup_date TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description TEXT,\n task_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO data_backu...",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_name, backup_date, backup_location) VALUES ('Backup1', '2022-01-01 08:00:00', '/path/to/backup1') ON CONFLICT (backup_name) DO UPDATE SET backup_date = EXCLUDED.backup_date, backup_location = EXCLUDED.backup_location;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_name, task_description, task_frequency) VALUES ('Task1', 'Description for Task1', INTERVAL '1 day') ON CONFLICT (task_name) DO UPDATE SET task_description = EXCLUDED.task_description, task_frequency = EXCLUDED.task_frequency;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO servers (server_name, server_ip, server_status) VALUES ('Server1', '192.168.1.100', TRUE) ON CONFLICT (server_name) DO UPDATE SET server_ip = EXCLUDED.server_ip, server_status = EXCLUDED.server_status;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_name, backup_date, backup_location) VALUES ('Backup2', '2022-01-02 08:00:00', '/path/to/backup2') ON CONFLICT (backup_name) DO UPDATE SET backup_date = EXCLUDED.backup_date, backup_location = EXCLUDED.backup_location;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_name, task_description, task_frequency) VALUES ('Task2', 'Description for Task2', INTERVAL '2 days') ON CONFLICT (task_name) DO UPDATE SET task_description = EXCLUDED.task_description, task_frequency = EXCLUDED.task_frequency;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO servers (server_name, server_ip, server_status) VALUES ('Server2', '192.168.1.101', FALSE) ON CONFLICT (server_name) DO UPDATE SET server_ip = EXCLUDED.server_ip, server_status = EXCLUDED.server_status;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_name, backup_date, backup_location) VALUES ('Backup3', '2022-01-03 08:00:00', '/path/to/backup3') ON CONFLICT (backup_name) DO UPDATE SET backup_date = EXCLUDED.backup_date, backup_location = EXCLUDED.backup_location;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_name, task_description, task_frequency) VALUES ('Task3', 'Description for Task3', INTERVAL '3 days') ON CONFLICT (task_name) DO UPDATE SET task_description = EXCLUDED.task_description, task_frequency = EXCLUDED.task_frequency;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO servers (server_name, server_ip, server_status) VALUES ('Server3', '192.168.1.102', TRUE) ON CONFLICT (server_name) DO UPDATE SET server_ip = EXCLUDED.server_ip, server_status = EXCLUDED.server_status;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_name, backup_date, backup_location) VALUES ('Backup4', '2022-01-04 08:00:00', '/path/to/backup4') ON CONFLICT (backup_name) DO UPDATE SET backup_date = EXCLUDED.backup_date, backup_location = EXCLUDED.backup_location;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_name, task_description, task_frequency) VALUES ('Task4', 'Description for Task4', INTERVAL '4 days') ON CONFLICT (task_name) DO UPDATE SET task_description = EXCLUDED.task_description, task_frequency = EXCLUDED.task_frequency;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO servers (server_name, server_ip, server_status) VALUES ('Server4', '192.168.1.103', FALSE) ON CONFLICT (server_name) DO UPDATE SET server_ip = EXCLUDED.server_ip, server_status = EXCLUDED.server_status;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_name, backup_date, backup_location) VALUES ('Backup5', '2022-01-05 08:00:00', '/path/to/backup5') ON CONFLICT (backup_name) DO UPDATE SET backup_date = EXCLUDED.backup_date, backup_location = EXCLUDED.backup_location;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_name, task_description, task_frequency) VALUES ('Task5', 'Description for Task5', INTERVAL '5 days') ON CONFLICT (task_name) DO UPDATE SET task_description = EXCLUDED.task_description, task_frequency = EXCLUDED.task_frequency;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO servers (server_name, server_ip, server_status) VALUES ('Server5', '192.168.1.104', TRUE) ON CONFLICT (server_name) DO UPDATE SET server_ip = EXCLUDED.server_ip, server_status = EXCLUDED.server_status;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_name, backup_date, backup_location) VALUES ('Backup6', '2022-01-06 08:00:00', '/path/to/backup6') ON CONFLICT (backup_name) DO UPDATE SET backup_date = EXCLUDED.backup_date, backup_location = EXCLUDED.backup_location;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_name, task_description, task_frequency) VALUES ('Task6', 'Description for Task6', INTERVAL '6 days') ON CONFLICT (task_name) DO UPDATE SET task_description = EXCLUDED.task_description, task_frequency = EXCLUDED.task_frequency;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO servers (server_name, server_ip, server_status) VALUES ('Server6', '192.168.1.105', FALSE) ON CONFLICT (server_name) DO UPDATE SET server_ip = EXCLUDED.server_ip, server_status = EXCLUDED.server_status;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_name, backup_date, backup_location) VALUES ('Backup7', '2022-01-07 08:00:00', '/path/to/backup7') ON CONFLICT (backup_name) DO UPDATE SET backup_date = EXCLUDED.backup_date, backup_location = EXCLUDED.backup_location;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (task_name, task_description, task_frequency) VALUES ('Task7', 'Description for Task7', INTERVAL '7 days') ON CONFLICT (task_name) DO UPDATE SET task_description = EXCLUDED.task_description, task_frequency = EXCLUDED.task_frequency;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO servers (server_name, server_ip, server_status) VALUES ('Server7', '192.168.1.106', TRUE) ON CONFLICT (server_name) DO UPDATE SET server_ip = EXCLUDED.server_ip, server_status = EXCLUDED.server_status;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO backups (backup_name, backup_date, backup_location) VALUES ('Daily Backup', '2022-04-01 08:00:00', '/backups/daily') ON CONFLICT (backup_name) DO UPDATE SET backup_date = '2022-04-01 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO backups (backup_name, backup_date, backup_location) VALUES ('Weekly Backup', '2022-04-01 08:00:00', '/backups/weekly') ON CONFLICT (backup_name) DO UPDATE SET backup_date = '2022-04-01 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO backups (backup_name, backup_date, backup_location) VALUES ('Monthly Backup', '2022-04-01 08:00:00', '/backups/monthly') ON CONFLICT (backup_name) DO UPDATE SET backup_date = '2022-04-01 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO backups (backup_name, backup_date, backup_location) VALUES ('Daily Backup', '2022-04-02 08:00:00', '/backups/daily') ON CONFLICT (backup_name) DO UPDATE SET backup_date = '2022-04-02 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO backups (backup_name, backup_date, backup_location) VALUES ('Weekly Backup', '2022-04-02 08:00:00', '/backups/weekly') ON CONFLICT (backup_name) DO UPDATE SET backup_date = '2022-04-02 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO backups (backup_name, backup_date, backup_location) VALUES ('Monthly Backup', '2022-04-02 08:00:00', '/backups/monthly') ON CONFLICT (backup_name) DO UPDATE SET backup_date = '2022-04-02 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO maintenance_tasks (task_name, task_description, task_frequency) VALUES ('Database Cleanup', 'Remove old records', '1 week'::interval) ON CONFLICT (task_name) DO UPDATE SET task_description = 'Remove old records', task_frequency = '1 week'::interval;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO maintenance_tasks (task_name, task_description, task_frequency) VALUES ('Server Monitoring', 'Check server health', '1 day'::interval) ON CONFLICT (task_name) DO UPDATE SET task_description = 'Check server health', task_frequency = '1 day'::interval;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO maintenance_tasks (task_name, task_description, task_frequency) VALUES ('Backup Verification', 'Verify backup integrity', '1 month'::interval) ON CONFLICT (task_name) DO UPDATE SET task_description = 'Verify backup integrity', task_frequency = '1 month'::interval;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO maintenance_tasks (task_name, task_description, task_frequency) VALUES ('Database Cleanup', 'Remove old records', '2 weeks'::interval) ON CONFLICT (task_name) DO UPDATE SET task_description = 'Remove old records', task_frequency = '2 weeks'::interval;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO maintenance_tasks (task_name, task_description, task_frequency) VALUES ('Server Monitoring', 'Check server health', '2 days'::interval) ON CONFLICT (task_name) DO UPDATE SET task_description = 'Check server health', task_frequency = '2 days'::interval;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO maintenance_tasks (task_name, task_description, task_frequency) VALUES ('Backup Verification', 'Verify backup integrity', '2 months'::interval) ON CONFLICT (task_name) DO UPDATE SET task_description = 'Verify backup integrity', task_frequency = '2 months'::interval;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO servers (server_name, server_ip, server_status) VALUES ('Web Server', '192.168.0.1', TRUE) ON CONFLICT (server_name) DO UPDATE SET server_ip = '192.168.0.1', server_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO servers (server_name, server_ip, server_status) VALUES ('Database Server', '192.168.0.2', FALSE) ON CONFLICT (server_name) DO UPDATE SET server_ip = '192.168.0.2', server_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO servers (server_name, server_ip, server_status) VALUES ('Backup Server', '192.168.0.3', FALSE) ON CONFLICT (server_name) DO UPDATE SET server_ip = '192.168.0.3', server_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO servers (server_name, server_ip, server_status) VALUES ('Web Server', '192.168.0.4', TRUE) ON CONFLICT (server_name) DO UPDATE SET server_ip = '192.168.0.4', server_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO servers (server_name, server_ip, server_status) VALUES ('Database Server', '192.168.0.5', TRUE) ON CONFLICT (server_name) DO UPDATE SET server_ip = '192.168.0.5', server_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO servers (server_name, server_ip, server_status) VALUES ('Backup Server', '192.168.0.6', FALSE) ON CONFLICT (server_name) DO UPDATE SET server_ip = '192.168.0.6', server_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO servers (server_name, server_ip, server_status) VALUES ('Web Server', '192.168.0.7', TRUE) ON CONFLICT (server_name) DO UPDATE SET server_ip = '192.168.0.7', server_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO servers (server_name, server_ip, server_status) VALUES ('Database Server', '192.168.0.8', FALSE) ON CONFLICT (server_name) DO UPDATE SET server_ip = '192.168.0.8', server_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id SERIAL PRIMARY KEY,\n    backup_name VARCHAR(50) NOT NULL,\n    backup_date TIMESTAMP NOT NULL,\n    backup_location VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT,\n    task_frequency INTERVAL NOT NULL\n);\n\nCREATE TABLE servers (\n    server_id SERIAL PRIMARY KEY,\n    server_name VARCHAR(50) NOT NULL,\n    server_ip VARCHAR(15) NOT NULL,\n    server_status BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO servers (server_name, server_ip, server_status) VALUES ('Backup Server', '192.168.0.9', FALSE) ON CONFLICT (server_name) DO UPDATE SET server_ip = '192.168.0.9', server_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (1, 'backup1', 'method1', 'success')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (2, 'backup2', 'method2', 'failure')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (3, 'backup3', 'method1', 'pending')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (4, 'backup4', 'method2', 'success')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (5, 'backup5', 'method1', 'failure')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (6, 'backup6', 'method2', 'pending')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (7, 'backup7', 'method1', 'success')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (8, 'backup8', 'method2', 'failure')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (9, 'backup9', 'method1', 'pending')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (10, 'backup10', 'method2', 'success')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (11, 'backup11', 'method1', 'failure')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (12, 'backup12', 'method2', 'pending')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (13, 'backup13', 'method1', 'success')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (14, 'backup14', 'method2', 'failure')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (15, 'backup15', 'method1', 'pending')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (16, 'backup16', 'method2', 'success')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (17, 'backup17', 'method1', 'failure')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (18, 'backup18', 'method2', 'pending')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (19, 'backup19', 'method1', 'success')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (20, 'backup20', 'method2', 'failure')",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (1, 'Backup1', 'Method1', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup1', backup_method = 'UpdatedMethod1', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (2, 'Backup2', 'Method2', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup2', backup_method = 'UpdatedMethod2', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (3, 'Backup3', 'Method3', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup3', backup_method = 'UpdatedMethod3', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (4, 'Backup4', 'Method4', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup4', backup_method = 'UpdatedMethod4', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (5, 'Backup5', 'Method5', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup5', backup_method = 'UpdatedMethod5', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (6, 'Backup6', 'Method6', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup6', backup_method = 'UpdatedMethod6', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (7, 'Backup7', 'Method7', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup7', backup_method = 'UpdatedMethod7', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (8, 'Backup8', 'Method8', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup8', backup_method = 'UpdatedMethod8', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (9, 'Backup9', 'Method9', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup9', backup_method = 'UpdatedMethod9', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (10, 'Backup10', 'Method10', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup10', backup_method = 'UpdatedMethod10', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (11, 'Backup11', 'Method11', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup11', backup_method = 'UpdatedMethod11', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (12, 'Backup12', 'Method12', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup12', backup_method = 'UpdatedMethod12', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (13, 'Backup13', 'Method13', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup13', backup_method = 'UpdatedMethod13', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (14, 'Backup14', 'Method14', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup14', backup_method = 'UpdatedMethod14', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (15, 'Backup15', 'Method15', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup15', backup_method = 'UpdatedMethod15', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (16, 'Backup16', 'Method16', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup16', backup_method = 'UpdatedMethod16', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (17, 'Backup17', 'Method17', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup17', backup_method = 'UpdatedMethod17', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (18, 'Backup18', 'Method18', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup18', backup_method = 'UpdatedMethod18', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (19, 'Backup19', 'Method19', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup19', backup_method = 'UpdatedMethod19', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    backup_id INT PRIMARY KEY,\n    backup_name STRING,\n    backup_method STRING,\n    backup_status STRING\n);\n\nCREATE TABLE maintenance_tasks (\n    task_id INT PRIMARY KEY,\n    task_name STRING,\n    task_description STRING,\n    task_status STRING\n);\n\nCREATE TABLE backup_schedule (\n    schedule_id INT PRIMARY KEY,\n    backup_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\nCREATE TABLE maintenance_schedule (\n    schedule_id INT PRIMARY KEY,\n    task_id INT,\n    schedule_time TIMESTAMP,\n    cron_expression STRING\n);\n\n### STATEMENT\n\nUPSERT INTO backups (backup_id, backup_name, backup_method, backup_status) VALUES (20, 'Backup20', 'Method20', 'Success') ON CONFLICT (backup_id) DO UPDATE SET backup_name = 'UpdatedBackup20', backup_method = 'UpdatedMethod20', backup_status = 'UpdatedSuccess';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO backups (id, backup_name, backup_path, backup_size, created_at) VALUES ('1', 'backup1', 'path1', 1024, '2022-01-01 00:00:00') ON CONFLICT (id) DO UPDATE SET backup_name = 'backup1', backup_path = 'path1', backup_size = 1024, created_at = '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO backup_schedule (id, schedule_name, backup_time, repeat_interval, last_run) VALUES ('1', 'schedule1', '08:00:00', '1 day', '2022-01-01 00:00:00') ON CONFLICT (id) DO UPDATE SET schedule_name = 'schedule1', backup_time = '08:00:00', repeat_interval = '1 day', last_run = '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO backup_logs (id, backup_id, backup_status, log_details, created_at) VALUES ('1', '1', 'success', 'backup successful', '2022-01-01 00:00:00') ON CONFLICT (id) DO UPDATE SET backup_id = '1', backup_status = 'success', log_details = 'backup successful', created_at = '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO maintenance_tasks (id, task_name, task_description, scheduled_time, status) VALUES ('1', 'task1', 'task description', '08:00:00', 'pending') ON CONFLICT (id) DO UPDATE SET task_name = 'task1', task_description = 'task description', scheduled_time = '08:00:00', status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO task_logs (id, task_id, log_message, log_time) VALUES ('1', '1', 'log message', '2022-01-01 00:00:00') ON CONFLICT (id) DO UPDATE SET task_id = '1', log_message = 'log message', log_time = '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO backups (id, backup_name, backup_path, backup_size, created_at) VALUES ('1e3f6a2f-82c0-41e0-812e-3bd0c465f0d1', 'Backup1', '/path/to/backup1', 1024, '2022-01-01 12:00:00') ON CONFLICT (id) DO UPDATE SET backup_name = 'Updated Backup1', backup_size = 2048;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO backup_schedule (id, schedule_name, backup_time, repeat_interval, last_run) VALUES ('fa09c43f-1016-4eb8-a82a-739c8c393411', 'Schedule1', '03:00:00', '1 day', '2022-01-01 03:00:00') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO backup_logs (id, backup_id, backup_status, log_details, created_at) VALUES ('62bff976-2b12-4988-b3f6-41820afb48cb', '1e3f6a2f-82c0-41e0-812e-3bd0c465f0d1', 'Success', 'Backup successful.', '2022-01-01 12:05:00') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO maintenance_tasks (id, task_name, task_description, scheduled_time, status) VALUES ('89b0678a-a4e8-4064-8d89-54b477a6e28f', 'Task1', 'Perform maintenance task 1', '04:00:00', 'Pending') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO task_logs (id, task_id, log_message, log_time) VALUES ('ac9870c4-2b2f-46a7-9a7d-5b4b8a1b0431', '89b0678a-a4e8-4064-8d89-54b477a6e28f', 'Task1 started.', '2022-01-01 04:00:05');",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO backups (id, backup_name, backup_path, backup_size, created_at) VALUES ('fde894ee-2c8e-4d80-a4b7-72fe25b05238', 'Backup2', '/path/to/backup2', 2048, '2022-01-02 12:00:00') ON CONFLICT (id) DO UPDATE SET backup_name = 'Updated Backup2', backup_size = 4096;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO backup_schedule (id, schedule_name, backup_time, repeat_interval, last_run) VALUES ('718954b3-3df3-4bb9-84a7-3e69db009450', 'Schedule2', '06:00:00', '2 days', '2022-01-02 06:00:00') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO backup_logs (id, backup_id, backup_status, log_details, created_at) VALUES ('3a4d1d07-efc3-4a7c-80e3-4760816fe7b3', 'fde894ee-2c8e-4d80-a4b7-72fe25b05238', 'Success', 'Backup successful.', '2022-01-02 12:05:00') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO maintenance_tasks (id, task_name, task_description, scheduled_time, status) VALUES ('15e36d59-8c9a-4558-9149-34a78bfb794b', 'Task2', 'Perform maintenance task 2', '08:00:00', 'Pending') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO task_logs (id, task_id, log_message, log_time) VALUES ('da851c30-dcc6-4442-b317-8fc7a0ea3dd8', '15e36d59-8c9a-4558-9149-34a78bfb794b', 'Task2 started.', '2022-01-02 08:00:05');",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO backups (id, backup_name, backup_path, backup_size, created_at) VALUES ('a3319b1f-6f31-424f-8228-d46935be055a', 'Backup3', '/path/to/backup3', 3072, '2022-01-03 12:00:00') ON CONFLICT (id) DO UPDATE SET backup_name = 'Updated Backup3', backup_size = 6144;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO backup_schedule (id, schedule_name, backup_time, repeat_interval, last_run) VALUES ('e7336619-c388-439b-8e41-0507f5b7ab75', 'Schedule3', '09:00:00', '3 days', '2022-01-03 09:00:00') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO backup_logs (id, backup_id, backup_status, log_details, created_at) VALUES ('7d6ce6ae-19c3-4e20-a24f-87d2f9d83fc1', 'a3319b1f-6f31-424f-8228-d46935be055a', 'Success', 'Backup successful.', '2022-01-03 12:05:00') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO maintenance_tasks (id, task_name, task_description, scheduled_time, status) VALUES ('f1d7742e-0d9c-426b-aebe-5b614a61615b', 'Task3', 'Perform maintenance task 3', '10:00:00', 'Pending') ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE backups (\n    id UUID PRIMARY KEY,\n    backup_name VARCHAR(255),\n    backup_path TEXT,\n    backup_size INT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE backup_schedule (\n    id UUID PRIMARY KEY,\n    schedule_name VARCHAR(255),\n    backup_time TIME,\n    repeat_interval INTERVAL,\n    last_run TIMESTAMP\n);\n\nCREATE TABLE backup_logs (\n    id UUID PRIMARY KEY,\n    backup_id UUID,\n    backup_status VARCHAR(50),\n    log_details TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE maintenance_tasks (\n    id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    scheduled_time TIME,\n    status VARCHAR(50)\n);\n\nCREATE TABLE task_logs (\n    id UUID PRIMARY KEY,\n    task_id UUID,\n    log_message TEXT,\n    log_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO task_logs (id, task_id, log_message, log_time) VALUES ('e58efb66-5635-44ed-be93-181f5508efb3', 'f1d7742e-0d9c-426b-aebe-5b614a61615b', 'Task3 started.', '2022-01-03 10:00:05');"
]