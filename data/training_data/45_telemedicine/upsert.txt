<t>CREATE TABLE Patients (patient_id INT PRIMARY KEY, name VARCHAR(50), gender VARCHAR(10), age INT, address VARCHAR(100), phone_number VARCHAR(15), email VARCHAR(50), medical_history TEXT, appointment_date TIMESTAMP)</t><stat>UPSERT INTO Patients (patient_id, name, gender, age, address, phone_number, email, medical_history, appointment_date) VALUES (1, 'John Doe', 'Male', 30, '123 Example St', '123-456-7890', 'johndoe@example.com', 'No major issues', '2022-12-31 10:00:00')</stat><divider><t>CREATE TABLE Patients (patient_id INT PRIMARY KEY, name VARCHAR(50), gender VARCHAR(10), age INT, address VARCHAR(100), phone_number VARCHAR(15), email VARCHAR(50), medical_history TEXT, appointment_date TIMESTAMP)</t><stat>upsert into patients (patient_id, name, gender, age, address, phone_number, email, medical_history, appointment_date) values (1, 'john doe', 'male', 30, '123 example st', '123-456-7890', 'johndoe@example.com', 'no major issues', '2022-12-31 10:00:00')</stat><divider><t>CREATE TABLE Patients (patient_id INT PRIMARY KEY, name VARCHAR(50), gender VARCHAR(10), age INT, address VARCHAR(100), phone_number VARCHAR(15), email VARCHAR(50), medical_history TEXT, appointment_date TIMESTAMP)</t><stat>UPSERT INTO Patients (patient_id, name, gender, age, address, phone_number, email, medical_history, appointment_date) VALUES (2, 'Jane Smith', 'Female', 25, '456 Test Rd', '987-654-3210', 'janesmith@example.com', 'Allergies to peanuts', '2022-11-30 09:30:00')</stat><divider><t>CREATE TABLE Patients (patient_id INT PRIMARY KEY, name VARCHAR(50), gender VARCHAR(10), age INT, address VARCHAR(100), phone_number VARCHAR(15), email VARCHAR(50), medical_history TEXT, appointment_date TIMESTAMP)</t><stat>upsert into patients (patient_id, name, gender, age, address, phone_number, email, medical_history, appointment_date) values (2, 'jane smith', 'female', 25, '456 test rd', '987-654-3210', 'janesmith@example.com', 'allergies to peanuts', '2022-11-30 09:30:00')</stat><divider><t>CREATE TABLE Patients (patient_id INT PRIMARY KEY, name VARCHAR(50), gender VARCHAR(10), age INT, address VARCHAR(100), phone_number VARCHAR(15), email VARCHAR(50), medical_history TEXT, appointment_date TIMESTAMP)</t><stat>UPSERT INTO Patients (patient_id, name, gender, age, address, phone_number, email, medical_history, appointment_date) VALUES (3, 'Sam Johnson', 'Male', 40, '789 New Ave', '555-123-4567', 'samjohnson@example.com', 'High blood pressure', '2022-10-15 11:15:00')</stat><divider><t>CREATE TABLE Patients (patient_id INT PRIMARY KEY, name VARCHAR(50), gender VARCHAR(10), age INT, address VARCHAR(100), phone_number VARCHAR(15), email VARCHAR(50), medical_history TEXT, appointment_date TIMESTAMP)</t><stat>upsert into patients (patient_id, name, gender, age, address, phone_number, email, medical_history, appointment_date) values (3, 'sam johnson', 'male', 40, '789 new ave', '555-123-4567', 'samjohnson@example.com', 'high blood pressure', '2022-10-15 11:15:00')</stat><divider><t>CREATE TABLE patients (
    patient_id SERIAL PRIMARY KEY,
    patient_name VARCHAR(50) NOT NULL,
    age INT,
    gender VARCHAR(10),
    phone_number VARCHAR(15),
    address VARCHAR(100)
);

CREATE TABLE appointments (
    appointment_id SERIAL PRIMARY KEY,
    patient_id INT,
    doctor_name VARCHAR(50) NOT NULL,
    appointment_date DATE,
    appointment_time TIME,
    appointment_purpose VARCHAR(100),
    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)
);</t><stat>INSERT INTO patients (patient_name, age, gender, phone_number, address) VALUES ('Alice', 30, 'Female', '123-456-7890', '123 Main St') ON CONFLICT (patient_name) DO UPDATE SET age = EXCLUDED.age, gender = EXCLUDED.gender, phone_number = EXCLUDED.phone_number, address = EXCLUDED.address;</stat><divider><t>CREATE TABLE patients (
    patient_id SERIAL PRIMARY KEY,
    patient_name VARCHAR(50) NOT NULL,
    age INT,
    gender VARCHAR(10),
    phone_number VARCHAR(15),
    address VARCHAR(100)
);

CREATE TABLE appointments (
    appointment_id SERIAL PRIMARY KEY,
    patient_id INT,
    doctor_name VARCHAR(50) NOT NULL,
    appointment_date DATE,
    appointment_time TIME,
    appointment_purpose VARCHAR(100),
    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)
);</t><stat>insert into patients (patient_name, age, gender, phone_number, address) values ('alice', 30, 'female', '123-456-7890', '123 main st') on conflict (patient_name) do update set age = excluded.age, gender = excluded.gender, phone_number = excluded.phone_number, address = excluded.address;</stat><divider><t>CREATE TABLE patients (
    patient_id SERIAL PRIMARY KEY,
    patient_name VARCHAR(50) NOT NULL,
    age INT,
    gender VARCHAR(10),
    phone_number VARCHAR(15),
    address VARCHAR(100)
);

CREATE TABLE appointments (
    appointment_id SERIAL PRIMARY KEY,
    patient_id INT,
    doctor_name VARCHAR(50) NOT NULL,
    appointment_date DATE,
    appointment_time TIME,
    appointment_purpose VARCHAR(100),
    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)
);</t><stat>INSERT INTO appointments (patient_id, doctor_name, appointment_date, appointment_time, appointment_purpose) VALUES (1, 'Dr. Smith', '2022-10-15', '09:00:00', 'Routine checkup') ON CONFLICT (appointment_id) DO UPDATE SET patient_id = EXCLUDED.patient_id, doctor_name = EXCLUDED.doctor_name, appointment_date = EXCLUDED.appointment_date, appointment_time = EXCLUDED.appointment_time, appointment_purpose = EXCLUDED.appointment_purpose;</stat><divider><t>CREATE TABLE patients (
    patient_id SERIAL PRIMARY KEY,
    patient_name VARCHAR(50) NOT NULL,
    age INT,
    gender VARCHAR(10),
    phone_number VARCHAR(15),
    address VARCHAR(100)
);

CREATE TABLE appointments (
    appointment_id SERIAL PRIMARY KEY,
    patient_id INT,
    doctor_name VARCHAR(50) NOT NULL,
    appointment_date DATE,
    appointment_time TIME,
    appointment_purpose VARCHAR(100),
    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)
);</t><stat>insert into appointments (patient_id, doctor_name, appointment_date, appointment_time, appointment_purpose) values (1, 'dr. smith', '2022-10-15', '09:00:00', 'routine checkup') on conflict (appointment_id) do update set patient_id = excluded.patient_id, doctor_name = excluded.doctor_name, appointment_date = excluded.appointment_date, appointment_time = excluded.appointment_time, appointment_purpose = excluded.appointment_purpose;</stat><divider><t>CREATE TABLE patients (
    patient_id SERIAL PRIMARY KEY,
    patient_name VARCHAR(50) NOT NULL,
    age INT,
    gender VARCHAR(10),
    phone_number VARCHAR(15),
    address VARCHAR(100)
);

CREATE TABLE appointments (
    appointment_id SERIAL PRIMARY KEY,
    patient_id INT,
    doctor_name VARCHAR(50) NOT NULL,
    appointment_date DATE,
    appointment_time TIME,
    appointment_purpose VARCHAR(100),
    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)
);</t><stat>INSERT INTO patients (patient_name, age, gender, phone_number, address) VALUES ('Bob', 25, 'Male', '987-654-3210', '456 Elm St') ON CONFLICT (patient_name) DO NOTHING;</stat><divider><t>CREATE TABLE patients (
    patient_id SERIAL PRIMARY KEY,
    patient_name VARCHAR(50) NOT NULL,
    age INT,
    gender VARCHAR(10),
    phone_number VARCHAR(15),
    address VARCHAR(100)
);

CREATE TABLE appointments (
    appointment_id SERIAL PRIMARY KEY,
    patient_id INT,
    doctor_name VARCHAR(50) NOT NULL,
    appointment_date DATE,
    appointment_time TIME,
    appointment_purpose VARCHAR(100),
    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)
);</t><stat>insert into patients (patient_name, age, gender, phone_number, address) values ('bob', 25, 'male', '987-654-3210', '456 elm st') on conflict (patient_name) do nothing;</stat><divider><t>CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);
</t><stat>INSERT INTO Patients (patient_id, patient_name, patient_age, patient_gender, patient_address) VALUES (1, 'John Doe', 30, 'Male', '123 Main Street') ON DUPLICATE KEY UPDATE patient_name = VALUES(patient_name), patient_age = VALUES(patient_age), patient_gender = VALUES(patient_gender), patient_address = VALUES(patient_address);</stat><divider><t>CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);
</t><stat>insert into patients (patient_id, patient_name, patient_age, patient_gender, patient_address) values (1, 'john doe', 30, 'male', '123 main street') on duplicate key update patient_name = values(patient_name), patient_age = values(patient_age), patient_gender = values(patient_gender), patient_address = values(patient_address);</stat><divider><t>CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);
</t><stat>INSERT INTO Patients (patient_id, patient_name, patient_age, patient_gender, patient_address) VALUES (1, 'John Doe', 30, 'Male', '123 Main Street') ON DUPLICATE KEY UPDATE patient_name = VALUES(patient_name), patient_age = VALUES(patient_age), patient_gender = VALUES(patient_gender), patient_address = VALUES(patient_address);</stat><divider><t>CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);
</t><stat>insert into patients (patient_id, patient_name, patient_age, patient_gender, patient_address) values (1, 'john doe', 30, 'male', '123 main street') on duplicate key update patient_name = values(patient_name), patient_age = values(patient_age), patient_gender = values(patient_gender), patient_address = values(patient_address);</stat><divider><t>CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);
</t><stat>INSERT INTO Patients (patient_id, patient_name, patient_age, patient_gender, patient_address) VALUES (1, 'John Doe', 30, 'Male', '123 Main Street') ON DUPLICATE KEY UPDATE patient_name = VALUES(patient_name), patient_age = VALUES(patient_age), patient_gender = VALUES(patient_gender), patient_address = VALUES(patient_address);</stat><divider><t>CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);
</t><stat>insert into patients (patient_id, patient_name, patient_age, patient_gender, patient_address) values (1, 'john doe', 30, 'male', '123 main street') on duplicate key update patient_name = values(patient_name), patient_age = values(patient_age), patient_gender = values(patient_gender), patient_address = values(patient_address);</stat><divider><t>CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);
</t><stat>INSERT INTO Patients (patient_id, patient_name, patient_age, patient_gender, patient_address) VALUES (1, 'John Doe', 30, 'Male', '123 Main Street') ON DUPLICATE KEY UPDATE patient_name = VALUES(patient_name), patient_age = VALUES(patient_age), patient_gender = VALUES(patient_gender), patient_address = VALUES(patient_address);</stat><divider><t>CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);
</t><stat>insert into patients (patient_id, patient_name, patient_age, patient_gender, patient_address) values (1, 'john doe', 30, 'male', '123 main street') on duplicate key update patient_name = values(patient_name), patient_age = values(patient_age), patient_gender = values(patient_gender), patient_address = values(patient_address);</stat><divider><t>CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);
</t><stat>INSERT INTO Patients (patient_id, patient_name, patient_age, patient_gender, patient_address) VALUES (1, 'John Doe', 30, 'Male', '123 Main Street') ON DUPLICATE KEY UPDATE patient_name = VALUES(patient_name), patient_age = VALUES(patient_age), patient_gender = VALUES(patient_gender), patient_address = VALUES(patient_address);</stat><divider><t>CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);
</t><stat>insert into patients (patient_id, patient_name, patient_age, patient_gender, patient_address) values (1, 'john doe', 30, 'male', '123 main street') on duplicate key update patient_name = values(patient_name), patient_age = values(patient_age), patient_gender = values(patient_gender), patient_address = values(patient_address);</stat><divider><t>CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);
</t><stat>INSERT INTO Patients (patient_id, patient_name, patient_age, patient_gender, patient_address) VALUES (1, 'John Doe', 30, 'Male', '123 Main Street') ON DUPLICATE KEY UPDATE patient_name = VALUES(patient_name), patient_age = VALUES(patient_age), patient_gender = VALUES(patient_gender), patient_address = VALUES(patient_address);</stat><divider><t>CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);
</t><stat>insert into patients (patient_id, patient_name, patient_age, patient_gender, patient_address) values (1, 'john doe', 30, 'male', '123 main street') on duplicate key update patient_name = values(patient_name), patient_age = values(patient_age), patient_gender = values(patient_gender), patient_address = values(patient_address);</stat><divider><t>CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);
</t><stat>INSERT INTO Doctors (doctor_id, doctor_name, doctor_specialty, doctor_experience, doctor_address) VALUES (1, 'Dr. Smith', 'Cardiology', 10, '456 Elm Avenue') ON DUPLICATE KEY UPDATE doctor_name = VALUES(doctor_name), doctor_specialty = VALUES(doctor_specialty), doctor_experience = VALUES(doctor_experience), doctor_address = VALUES(doctor_address);</stat><divider><t>CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);
</t><stat>insert into doctors (doctor_id, doctor_name, doctor_specialty, doctor_experience, doctor_address) values (1, 'dr. smith', 'cardiology', 10, '456 elm avenue') on duplicate key update doctor_name = values(doctor_name), doctor_specialty = values(doctor_specialty), doctor_experience = values(doctor_experience), doctor_address = values(doctor_address);</stat><divider><t>CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);
</t><stat>INSERT INTO Doctors (doctor_id, doctor_name, doctor_specialty, doctor_experience, doctor_address) VALUES (1, 'Dr. Smith', 'Cardiology', 10, '456 Elm Avenue') ON DUPLICATE KEY UPDATE doctor_name = VALUES(doctor_name), doctor_specialty = VALUES(doctor_specialty), doctor_experience = VALUES(doctor_experience), doctor_address = VALUES(doctor_address);</stat><divider><t>CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);
</t><stat>insert into doctors (doctor_id, doctor_name, doctor_specialty, doctor_experience, doctor_address) values (1, 'dr. smith', 'cardiology', 10, '456 elm avenue') on duplicate key update doctor_name = values(doctor_name), doctor_specialty = values(doctor_specialty), doctor_experience = values(doctor_experience), doctor_address = values(doctor_address);</stat><divider><t>CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);
</t><stat>INSERT INTO Doctors (doctor_id, doctor_name, doctor_specialty, doctor_experience, doctor_address) VALUES (1, 'Dr. Smith', 'Cardiology', 10, '456 Elm Avenue') ON DUPLICATE KEY UPDATE doctor_name = VALUES(doctor_name), doctor_specialty = VALUES(doctor_specialty), doctor_experience = VALUES(doctor_experience), doctor_address = VALUES(doctor_address);</stat><divider><t>CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);
</t><stat>insert into doctors (doctor_id, doctor_name, doctor_specialty, doctor_experience, doctor_address) values (1, 'dr. smith', 'cardiology', 10, '456 elm avenue') on duplicate key update doctor_name = values(doctor_name), doctor_specialty = values(doctor_specialty), doctor_experience = values(doctor_experience), doctor_address = values(doctor_address);</stat><divider><t>CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);
</t><stat>INSERT INTO Doctors (doctor_id, doctor_name, doctor_specialty, doctor_experience, doctor_address) VALUES (1, 'Dr. Smith', 'Cardiology', 10, '456 Elm Avenue') ON DUPLICATE KEY UPDATE doctor_name = VALUES(doctor_name), doctor_specialty = VALUES(doctor_specialty), doctor_experience = VALUES(doctor_experience), doctor_address = VALUES(doctor_address);</stat><divider><t>CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);
</t><stat>insert into doctors (doctor_id, doctor_name, doctor_specialty, doctor_experience, doctor_address) values (1, 'dr. smith', 'cardiology', 10, '456 elm avenue') on duplicate key update doctor_name = values(doctor_name), doctor_specialty = values(doctor_specialty), doctor_experience = values(doctor_experience), doctor_address = values(doctor_address);</stat><divider><t>CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);
</t><stat>INSERT INTO Doctors (doctor_id, doctor_name, doctor_specialty, doctor_experience, doctor_address) VALUES (1, 'Dr. Smith', 'Cardiology', 10, '456 Elm Avenue') ON DUPLICATE KEY UPDATE doctor_name = VALUES(doctor_name), doctor_specialty = VALUES(doctor_specialty), doctor_experience = VALUES(doctor_experience), doctor_address = VALUES(doctor_address);</stat><divider><t>CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);
</t><stat>insert into doctors (doctor_id, doctor_name, doctor_specialty, doctor_experience, doctor_address) values (1, 'dr. smith', 'cardiology', 10, '456 elm avenue') on duplicate key update doctor_name = values(doctor_name), doctor_specialty = values(doctor_specialty), doctor_experience = values(doctor_experience), doctor_address = values(doctor_address);</stat><divider><t>CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);
</t><stat>INSERT INTO Doctors (doctor_id, doctor_name, doctor_specialty, doctor_experience, doctor_address) VALUES (1, 'Dr. Smith', 'Cardiology', 10, '456 Elm Avenue') ON DUPLICATE KEY UPDATE doctor_name = VALUES(doctor_name), doctor_specialty = VALUES(doctor_specialty), doctor_experience = VALUES(doctor_experience), doctor_address = VALUES(doctor_address);</stat><divider><t>CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);
</t><stat>insert into doctors (doctor_id, doctor_name, doctor_specialty, doctor_experience, doctor_address) values (1, 'dr. smith', 'cardiology', 10, '456 elm avenue') on duplicate key update doctor_name = values(doctor_name), doctor_specialty = values(doctor_specialty), doctor_experience = values(doctor_experience), doctor_address = values(doctor_address);</stat><divider><t>CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);
</t><stat>INSERT INTO Appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, appointment_notes) VALUES (1, 1, 1, '2022-09-30', '10:00:00', 'Follow up appointment') ON DUPLICATE KEY UPDATE patient_id = VALUES(patient_id), doctor_id = VALUES(doctor_id), appointment_date = VALUES(appointment_date), appointment_time = VALUES(appointment_time), appointment_notes = VALUES(appointment_notes);</stat><divider><t>CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);
</t><stat>insert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, appointment_notes) values (1, 1, 1, '2022-09-30', '10:00:00', 'follow up appointment') on duplicate key update patient_id = values(patient_id), doctor_id = values(doctor_id), appointment_date = values(appointment_date), appointment_time = values(appointment_time), appointment_notes = values(appointment_notes);</stat><divider><t>CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);
</t><stat>INSERT INTO Appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, appointment_notes) VALUES (1, 1, 1, '2022-09-30', '10:00:00', 'Follow up appointment') ON DUPLICATE KEY UPDATE patient_id = VALUES(patient_id), doctor_id = VALUES(doctor_id), appointment_date = VALUES(appointment_date), appointment_time = VALUES(appointment_time), appointment_notes = VALUES(appointment_notes);</stat><divider><t>CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);
</t><stat>insert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, appointment_notes) values (1, 1, 1, '2022-09-30', '10:00:00', 'follow up appointment') on duplicate key update patient_id = values(patient_id), doctor_id = values(doctor_id), appointment_date = values(appointment_date), appointment_time = values(appointment_time), appointment_notes = values(appointment_notes);</stat><divider><t>CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);
</t><stat>INSERT INTO Appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, appointment_notes) VALUES (1, 1, 1, '2022-09-30', '10:00:00', 'Follow up appointment') ON DUPLICATE KEY UPDATE patient_id = VALUES(patient_id), doctor_id = VALUES(doctor_id), appointment_date = VALUES(appointment_date), appointment_time = VALUES(appointment_time), appointment_notes = VALUES(appointment_notes);</stat><divider><t>CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);
</t><stat>insert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, appointment_notes) values (1, 1, 1, '2022-09-30', '10:00:00', 'follow up appointment') on duplicate key update patient_id = values(patient_id), doctor_id = values(doctor_id), appointment_date = values(appointment_date), appointment_time = values(appointment_time), appointment_notes = values(appointment_notes);</stat><divider><t>CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);
</t><stat>INSERT INTO Appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, appointment_notes) VALUES (1, 1, 1, '2022-09-30', '10:00:00', 'Follow up appointment') ON DUPLICATE KEY UPDATE patient_id = VALUES(patient_id), doctor_id = VALUES(doctor_id), appointment_date = VALUES(appointment_date), appointment_time = VALUES(appointment_time), appointment_notes = VALUES(appointment_notes);</stat><divider><t>CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);
</t><stat>insert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, appointment_notes) values (1, 1, 1, '2022-09-30', '10:00:00', 'follow up appointment') on duplicate key update patient_id = values(patient_id), doctor_id = values(doctor_id), appointment_date = values(appointment_date), appointment_time = values(appointment_time), appointment_notes = values(appointment_notes);</stat><divider><t>CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);
</t><stat>INSERT INTO Appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, appointment_notes) VALUES (1, 1, 1, '2022-09-30', '10:00:00', 'Follow up appointment') ON DUPLICATE KEY UPDATE patient_id = VALUES(patient_id), doctor_id = VALUES(doctor_id), appointment_date = VALUES(appointment_date), appointment_time = VALUES(appointment_time), appointment_notes = VALUES(appointment_notes);</stat><divider><t>CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);
</t><stat>insert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, appointment_notes) values (1, 1, 1, '2022-09-30', '10:00:00', 'follow up appointment') on duplicate key update patient_id = values(patient_id), doctor_id = values(doctor_id), appointment_date = values(appointment_date), appointment_time = values(appointment_time), appointment_notes = values(appointment_notes);</stat><divider><t>CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);
</t><stat>INSERT INTO Appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, appointment_notes) VALUES (1, 1, 1, '2022-09-30', '10:00:00', 'Follow up appointment') ON DUPLICATE KEY UPDATE patient_id = VALUES(patient_id), doctor_id = VALUES(doctor_id), appointment_date = VALUES(appointment_date), appointment_time = VALUES(appointment_time), appointment_notes = VALUES(appointment_notes);</stat><divider><t>CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY,
    patient_id INT,
    doctor_id INT,
    appointment_date DATE,
    appointment_time TIME,
    appointment_notes TEXT,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY,
    doctor_name VARCHAR(255) NOT NULL,
    doctor_specialty VARCHAR(255) NOT NULL,
    doctor_experience INT,
    doctor_address VARCHAR(255)
);


CREATE TABLE Patients (
    patient_id INT PRIMARY KEY,
    patient_name VARCHAR(255) NOT NULL,
    patient_age INT,
    patient_gender ENUM('Male', 'Female', 'Other'),
    patient_address VARCHAR(255)
);
</t><stat>insert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, appointment_notes) values (1, 1, 1, '2022-09-30', '10:00:00', 'follow up appointment') on duplicate key update patient_id = values(patient_id), doctor_id = values(doctor_id), appointment_date = values(appointment_date), appointment_time = values(appointment_time), appointment_notes = values(appointment_notes);</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO doctors (doctor_id, name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'New York') ON DUPLICATE KEY UPDATE name = 'Dr. John Doe', specialty = 'Cardiology', location = 'New York'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into doctors (doctor_id, name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'new york') on duplicate key update name = 'dr. john doe', specialty = 'cardiology', location = 'new york'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO patients (patient_id, name, age, gender, address) VALUES (1, 'Alice Smith', 30, 'Female', '123 Main St') ON DUPLICATE KEY UPDATE name = 'Alice Smith', age = 30, gender = 'Female', address = '123 Main St'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into patients (patient_id, name, age, gender, address) values (1, 'alice smith', 30, 'female', '123 main st') on duplicate key update name = 'alice smith', age = 30, gender = 'female', address = '123 main st'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>UPSERT INTO appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) VALUES (1, 1, 1, '2022-10-15', '10:00:00', 'Scheduled') ON DUPLICATE KEY UPDATE patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'Scheduled'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, appointment_id INT, medication VARCHAR(255), dosage VARCHAR(50), frequency VARCHAR(50))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, appointment_time TIME, status VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), address VARCHAR(255))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(255), specialty VARCHAR(255), location VARCHAR(255))</t><stat>upsert into appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values (1, 1, 1, '2022-10-15', '10:00:00', 'scheduled') on duplicate key update patient_id = 1, doctor_id = 1, appointment_date = '2022-10-15', appointment_time = '10:00:00', status = 'scheduled'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO doctors (doctor_id, doctor_name, specialty, location) VALUES (1, 'Dr. John Doe', 'Cardiology', 'Hospital A') ON DUPLICATE KEY UPDATE doctor_name='Dr. John Doe', specialty='Cardiology', location='Hospital A'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into doctors (doctor_id, doctor_name, specialty, location) values (1, 'dr. john doe', 'cardiology', 'hospital a') on duplicate key update doctor_name='dr. john doe', specialty='cardiology', location='hospital a'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO patients (patient_id, patient_name, age, gender, contact) VALUES (1, 'Alice', 35, 'Female', '123-456-7890') ON DUPLICATE KEY UPDATE patient_name='Alice', age=35, gender='Female', contact='123-456-7890'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into patients (patient_id, patient_name, age, gender, contact) values (1, 'alice', 35, 'female', '123-456-7890') on duplicate key update patient_name='alice', age=35, gender='female', contact='123-456-7890'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>UPSERT INTO appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) VALUES (1, 1, 1, '2023-01-15', '08:00:00') ON DUPLICATE KEY UPDATE doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, record_date DATE, diagnosis STRING, treatment STRING)

CREATE TABLE prescriptions (prescription_id INT PRIMARY KEY, doctor_id INT, patient_id INT, medicine STRING, dosage STRING, frequency STRING)

CREATE TABLE appointments (app_id INT PRIMARY KEY, doctor_id INT, patient_id INT, appointment_date DATE, appointment_time TIME)

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name STRING, age INT, gender STRING, contact STRING)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, doctor_name STRING, specialty STRING, location STRING)</t><stat>upsert into appointments (app_id, doctor_id, patient_id, appointment_date, appointment_time) values (1, 1, 1, '2023-01-15', '08:00:00') on duplicate key update doctor_id=1, patient_id=1, appointment_date='2023-01-15', appointment_time='08:00:00'</stat>